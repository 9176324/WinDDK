
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">

<html>
<head>
    <title>Keyboard Layout</title>
</head>

<body>
<font face=Verdana>
<h2>Keyboard Layout</h2>

<h3>SUMMARY</h3>
<font size = -1>
    <p>
    The keyboard layout samples are compliant with Microsoft&reg; Windows&reg; XP and Windows Server 2003.
    The layout DLL source code is compatible with both x86 and ia64 platforms.
    </p>

    </font>

  <h4>Introduction to the Keyboard Layout Samples</h4>
  <font size = -1>

    <p>
    The keyboard layout samples work with Windows XP and Windows Server 2003, but are not compatible down level.
    This samples are tested on Windows Server 2003.
    </p>

    <p>
    The layout DLL is loaded by the window manager when needed.
    One of the examples is the logon.
    The default set of the input locales is set in the HKCU registry, according to user's preference, which can be customized by the Regional and Language Options application in Control Panel.
    The window manager reads the HKCU registry and loads the keyboard layouts accordingly.
    <br>
    Other example is from LoadKeyboardLayout API.
    Please refer to the Platform SDK Documentation for more details.
    </p>

    <p>
    The samples under input/layout include the following keyboard layouts:
    </p>
    <ul>
    <li><p>
        kbdus
        <br>
        US-English keyboard layout
        </p>
    <li><p>
        kbdfr
        <br>
        French keyboard layout
        </p>
    <li><p>
        kbdgr
        <br>
        German keyboard layout
        </p>
    <li><p>
        kbd101
        <br>
        Japanese 101 keyboard layout
        </p>
    <li><p>
        kbd106
        <br>
        Japanese 106 keyboard layout
        </p>
    </ul>

    <h5>Conversion tables</h5>
    <p>
    A keyboard layout DLL consists of a set of tables.
    One of the tables converts the scancode to virtual key code, while the other table provides the conversion rule from the virtual key code to the character.
    Not all the keys or key combinations generate the characters.
    The modifier keys, such as the SHIFT key or the CTRL key, alter the character generation, but do not generate the characters.
    The special keys, such as F1-F12 functions keys, the Delete key or the Home key, do not generate the characters either.
    </p>

    <p>
    The conversion rule from the scancode to the virtual key code is predefined in kbd.h, but can be customized in the layout-specific header files.
    The layout-specific headers define the keyboard type as it appears in kbd.h, and may redefine some definitions that are specific to each layout.
    </p>

    <p>
    For the typical keyboard hardware, three types of the scancode to the Virtual Key Code conversion table must be defined in the C source file, including non-extended scancode, E0-prefixed scancode, and E1-prefixed scancode.
    </p>

    <p>
    The conversion table for the character generation has multiple columns.
    Each column represents the modifier status and contains the character corresponding to the status.
    The number of the columns could vary from layout to layout, depending on the number of possible combinations of the modifier keys.
    Generally speaking, ALT GR-enabled keyboard layouts, such as French or German keyboard layouts, have more columns than non-ALT GR-enabled keyboard, such as US-English keyboard layout.
    </p>

    <h5>Exports from keyboard layout DLL</h5>
    <p>
    The layout DLLs export one or more entry points, which are called by the window manager to obtain the table address and the information about the layouts.
    </p>

    <p>
    For the Far East keyboard layouts, the keyboard layout DLL has to provide language-specific entry points.
    Those additional entries expose the language-specific information, such as the kana conversion table, or the special conversion rule, including the VK_KANJI generation.
    </p>




</font>

<h3>BUILDING THE SAMPLE</h3>
<font size = -1>
    <p>
    The files necessary to build the samples are included in each subdirectory.
    They typically include a C source file (.c), a header file (.h), a def file (.def), a resource file (.rc), makefiles (makefile and makefile.inc), and a sources file.
    Some samples may require additional common header files, such as kbdjpn.h. Such header files are included in the DDK sample.
    </p>

    <p>
    The standard DDK build environment will be required to build the keyboard layout samples.
    Once built, the samples produce keyboard layout DLLs.
    Both checked and free build are available and functional.
    </p>

    <p>
    The samples are the complete source code for the shipping keyboard layout DLLs.
    They run on Windows XP and Windows Server 2003 systems.
    </p>

</font>

<h3>INSTALLING THE SAMPLE</h3>
<font size = -1>
    <p>
    To install a customized version of a layout DLL, it is recommended to substitute the existing DLL installed by the operating system with the customized DLL.
    The layout DLLs should be installed in the %windir%\system32 directory (exceptions may apply on 64-bit platforms).
    You may need to disable the System File Protection (SFP) before replacing the layout DLLs.
    After the layout DLLs are installed, you may need to reboot the system to ensure the new layouts are used.
    </p>
</font>

<h3>RUNNING THE SAMPLE</h3>
<font size = -1>
    <p>
    In order to load the layout DLLs, you may need to turn to the Regional and Language Options application in Control Panel and add input locales that use the keyboard layouts you installed.
    </p>

    <p>
    You may also choose to do it programmatically.
    LoadKeyboardLayout API can be used to load the keyboard layouts.
    To activate the keyboard layout, you may choose to specify KLF_ACTIVATE flag to LoadKeyboardLayout API, or you may need to call ActivateKeyboardLayout API.
    </p>

</font>


<P>
</FONT><P ALIGN="CENTER"><A HREF="#top"><FONT FACE="Verdana" SIZE=2>Top of page</FONT></A><FONT FACE="Verdana" SIZE=2> </P></FONT>
<TABLE CELLSPACING=0 BORDER=0 WIDTH=624>
<TR><TD VALIGN="MIDDLE" BGCOLOR="#00ffff" HEIGHT=2>
<P></TD>
</TR>
</TABLE>

<FONT FACE="MS Sans Serif" SIZE=1><P>&copy; Microsoft Corporation 2002</FONT><FONT FACE="Verdana" SIZE=2> </P>
</font>

</body>
</html>
