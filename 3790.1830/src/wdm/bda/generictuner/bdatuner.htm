<html>
<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<title>BDA Sample Generic Tuner Driver</title>
</head>
<body bgcolor="#FFFFFF" link=blue vlink=blue topmargin=0 class="Normal" lang=EN-US>
<div class=Section1> 
<h2><a name=MYSAMPLE><span style='font-family:Verdana'>BDA Sample Generic Tuner 
Driver</span></a><span style='font-family:Verdana'> </span></h2>
<h3><span style='font-family:Verdana'>SUMMARY</span></h3>
<p><span style='font-size:10.0pt;font-family:Verdana'>This sample is the source 
code for a generic tuner sample Broadcast Driver Architecture (BDA) driver 
for Windows® XP. It is provided as an example of a BDA device minidriver</span> 
for the AVStream</span> class of kernel streaming and to 
give hardware vendors assistance in writing their own BDA minidrivers</span>. 
This sample does not have any associated hardware.  The driver is designed 
to work with the sample BDA Capture driver.</span></p>
<h3><span style='font-family:Verdana'>BUILDING THE SAMPLE</span></h3>
<p><span style='font-size:10.0pt;font-family:Verdana'>To build the sample, open 
a DDK command window, change to the BDA directory, and use the <b>build -cZ</b> 
command. The build command gets instructions on how to build from the <a
href="#sources">Sources file</a>. </span></p>
<p><span style='font-size:10.0pt;font-family:Verdana'>This sample can be built 
as either an ATSC sample or a DVB-S sample.  To select the flavor of sample 
simply uncomment the appropriate MACRO definition (ATSC_RECEIVER or DVBS_RECEIVER) 
in BDATuner.h</span>.   Make sure only one of the receiver 
type MACROs is defined.  Building this sample produces one file: 
BDATuner.sys</span>. Both free and checked versions can 
be built.</span></p>
<p><span style='font-size:10.0pt;font-family:Verdana'>The best way to use the 
sample BDA tuner driver is to build both BDATuner.sys</span> 
and BDACap.sys</span>.  Copy the driver files to a directory 
along with the sample BDA tuner INF (BDATuner.inf</span>), 
sample BDA capture <span class=GramE>INF(</span>BDACap.inf), and software receiver INF (BDASWRcv.inf</span>).  
Start the installation by right clicking BDASWRcv.inf and then left clicking Install.  Follow the directions 
to complete installation of both the sample BDA tuner and sample BDA capture 
drivers.</span></p>
<h3><span style='font-family:Verdana'>TOOLS</span></h3>
<p><span style='font-size:10.0pt;font-family:Verdana'>GraphEdit</span></span><span
style='font-size:10.0pt;font-family:Verdana'> uses the BDA sample generic tuner 
driver to configure a filter for the driver in a filter graph. This BDA sample 
generic tuner filter does not perform any specific functions. You can connect 
the BDA ATSC or DVB-S network provider filters to the input pin of the generic 
filter. You can connect the BDA capture filter to the output pin of the BDA 
tuner filter.</span></p>
<p><span style='font-size:10.0pt;font-family:Verdana'>The sample BDA capture 
appears under &quot;BDA Receiver Components&quot; as &quot;Sample BDA Capture&quot;.  
The sample BDA tuner appears under “BDA Source Filters” as “Sample BDA Tuner 
Filter”.  The ATSC Network Provider appears under “BDA Network Providers” 
as “Microsoft ATSC Network Provider”.  The DVB-S Network Provider appears 
under “BDA Network Providers” as “Microsoft DVBS Network Provider”.</span></p>
<p><span style='font-size:10.0pt;font-family:Verdana'>Many properties can be 
set on your filter by right-clicking the Network Provider filter in GraphEdt and selecting Properties.  The displayed property 
pages allow for the creation and submission of tune requests that ultimately 
result in properties being set on your driver.  Note that if you are testing 
a DVB-S driver you should use the DVBS Network Provider property pages to 
create ad DVB-S tuning space called “MYDVB”. To access these properties, you 
must first run Regsvr32 on PropPage.dll, which is delivered in the DirectShow 
SDK.  You can also create a plugin</span> to directly access 
and configure the BDA sample generic tuner filter.</span></p>
<h3><span style='font-family:Verdana'>RESOURCES</span></h3>
<p><span style='font-size:10.0pt;font-family:Verdana'>To get a logo for your 
device, consult the <a href="http://www.microsoft.com/whdc/whql/default.mspx">WHQL 
Web site</a> for information and test suites.</span></p>
<p><span style='font-size:10.0pt;font-family:Verdana'>Your device should support 
Plug and Play. Download Plug and Play specs from their <a
href="http://www.microsoft.com/whdc/system/pnppwr/pnp/default.mspx">Web site</a>.</span></p>
<h3><span style='font-family:Verdana'>CODE TOUR</span></h3>
<h4><span style='font-family:Verdana'>File Manifest</span></h4>
<pre><u>File</u>           <u>Description</u>
Bdadebug.h     Contains macros that the driver uses for debugging
BdaTuner.htm   The documentation for this sample (this file)
Bdaguid.c      Includes header files used for defining GUIDs
BDATuner.h     Defines classes for filter, device, and filter I/O pins.
BDATuner.inf   Installation information for the sample
BDATuner.rc    Version information resource
Common.h       Includes necessary header files, like Bdasup.h
Device.cpp     Main code of BDA device, including driver-entry point
Filter.cpp     Implements methods of the filter class 
Inpin.cpp      Implements the class for the input pin
Makefile       The makefile for the project; do not edit.
ObjDesc.cpp    Defines automation and dispatch tables and template structures
Outpin.cpp     Implements the class for the output pin
Sources        DDK build instructions
Splmedia.h     Defines properties, methods, and events for 
               the sample's nodes
Wdmdebug.h     Contains macros for WDM debugging</pre>
<pre>&nbsp;</pre>
<h4><span
style='font-family:Verdana'>Programming Tour</span></h4>
<p><span
style='font-size:10.0pt;font-family:Verdana'>The ObjDesc.cpp</span> 
file contains definitions and templates that the network provider filter can 
use to determine topology, to configure and change a filter instance, and 
to manipulate the sample's nodes. The BDA sample software tuner driver registers 
these definitions and templates with the BDA support library so the library 
can handle most aspects of these operations. Other files of this sample define 
constants, structures, and classes and implement methods for those classes. 
</span></p>
<h4><a
name=sources><span style='font-family:Verdana'>Sources File</span></a></h4>
<p><span
style='font-size:10.0pt;font-family:Verdana'>The 
Sources 
file contains instructions on how to build the BDA sample software tuner driver. 
The following code shows the macros used in the Sources file along with comments 
that explain what those macros do.</span></p>
<pre>   
        TARGETNAME=BDATuner  # Set driver's name
        TARGETTYPE=DRIVER    # Set type of file built, for example, program, DLL, or driver
                             # For BDA minidriver, set to DRIVER.
        TARGETPATH=obj$(BUILD_ALT_DIR)  # Set destination directory for the built file

         # Depending on whether your build environment is &quot;free&quot; or &quot;checked&quot;,
         # the BUILD_ALT_DIR variable appends &quotfre &quot; or &quot;chk&quot; to the \obj subdirectory.
        DRIVERTYPE=WDM  # Set type of driver, can be set to either WDM or VXD.
                        # For BDA, set to WDM.
                        # Generate .SYM and .PDB (map) files.  These files map names to addresses. 
                        # Required to debug on Win9x.
        USE_MAPSYM=1  

        # Point to the header files that the sample source requires.
        INCLUDES=..\..\..\..\inc; \
        $(DDK_INC_PATH)\wdm;
        
        # Point to the library files that the sample source requires. 
        TARGETLIBS=..\..\..\..\lib\
             ks.lib \
             ..\..\..\..\lib\ksguid.lib \
             ..\..\..\..\lib\BdaSup.lib

        # The following macros are used with the Soft-ICE debugging tool.
        !ifdef BUILD_SOFTICE_SYMBOLS
        TARGETPATHEX=$(TARGETPATH)\$(TARGET_DIRECTORY)
        NTTARGETFILES=$(TARGETPATH)\$(TARGETNAME).dbg
        NTTARGETFILES=$(TARGETPATHEX)\$(TARGETNAME).nms $(NTTARGETFILES)
        !endif

        # Sample source files that must be compiled.
        SOURCES= \
            ObjDesc.cpp     \
            inpin.cpp       \
            outpin.cpp      \
            Filter.cpp      \
            Device.cpp      \
            bdaguid.c       \
            BDATuner.rc
</pre>
<p align=center style='text-align:center;'><span
style='font-size:10.0pt;font-family:Verdana'><a href="#top">Top of page</a> </span></p>
<table border=0 cellspacing=0 cellpadding=0 width=624>
<tr> 
<td bgcolor="aqua" class="Normal">&nbsp; </td>
</tr>
</table>
<p><span
style='font-size:7.5pt;font-family:"MS Sans Serif"'>© 2004 Microsoft Corporation</span><span style='font-size:10.0pt;font-family:Verdana'> 
</span></p>
</div>
</body>
</html>
