

/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0499 */
/* Compiler settings for wmsevent.idl:
    Oicf, W1, Zp8, env=Win32 (32b run)
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
//@@MIDL_FILE_HEADING(  )

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__


#ifndef __wmsevent_h__
#define __wmsevent_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

/* header files for imported files */
#include "oaidl.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_wmsevent_0000_0000 */
/* [local] */ 

//*****************************************************************************
//
// Microsoft Windows Media
// Copyright (C) Microsoft Corporation. All rights reserved.
//
// Automatically generated by Midl from wmsevent.idl
//
// DO NOT EDIT THIS FILE.
//
//*****************************************************************************
#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000
#define WMS_EVENT_VERSION 1
typedef /* [public] */ 
enum WMS_EVENT_TYPE
    {	WMS_EVENT_UNKNOWN_EVENT	= 0,
	WMS_EVENT_CONNECT	= 1,
	WMS_EVENT_DISCONNECT	= 2,
	WMS_EVENT_BEGIN_USER_SESSION	= 3,
	WMS_EVENT_END_USER_SESSION	= 4,
	WMS_EVENT_LOGICAL_URL_TRANSFORM	= 5,
	WMS_EVENT_PHYSICAL_URL_TRANSFORM	= 6,
	WMS_EVENT_DESCRIBE	= 7,
	WMS_EVENT_OPEN	= 8,
	WMS_EVENT_SELECT_STREAMS	= 9,
	WMS_EVENT_INITIALIZE_PLAYLIST	= 10,
	WMS_EVENT_PLAY	= 11,
	WMS_EVENT_PAUSE	= 12,
	WMS_EVENT_STOP	= 13,
	WMS_EVENT_CLOSE	= 14,
	WMS_EVENT_SET_PARAMETER	= 15,
	WMS_EVENT_GET_PARAMETER	= 16,
	WMS_EVENT_VALIDATE_PUSH_DISTRIBUTION	= 17,
	WMS_EVENT_CREATE_DISTRIBUTION_DATA_PATH	= 18,
	WMS_EVENT_DESTROY_DISTRIBUTION_DATA_PATH	= 19,
	WMS_EVENT_LOG	= 20,
	WMS_EVENT_SERVER	= 21,
	WMS_EVENT_PUBLISHING_POINT	= 22,
	WMS_EVENT_LIMIT_CHANGE	= 23,
	WMS_EVENT_LIMIT_HIT	= 24,
	WMS_EVENT_PLUGIN	= 25,
	WMS_EVENT_PLAYLIST	= 26,
	WMS_EVENT_CACHE	= 27,
	WMS_EVENT_REMOTE_CACHE_OPEN	= 28,
	WMS_EVENT_REMOTE_CACHE_CLOSE	= 29,
	WMS_EVENT_REMOTE_CACHE_LOG	= 30,
	WMS_NUM_EVENTS	= 31
    } 	WMS_EVENT_TYPE;

typedef struct WMS_EVENT
    {
    long Version;
    WMS_EVENT_TYPE Type;
    long hr;
    } 	WMS_EVENT;



extern RPC_IF_HANDLE __MIDL_itf_wmsevent_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_wmsevent_0000_0000_v0_0_s_ifspec;

/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif



