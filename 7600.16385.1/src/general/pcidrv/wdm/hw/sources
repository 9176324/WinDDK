TARGETNAME=PCIDRV
TARGETTYPE=DRIVER

MSC_WARNING_LEVEL=/W4 /WX

BUFFER_OVERFLOW_CHECKS=1

NTTARGETFILE0=$(OBJ_PATH)\$(O)\pcidrv.bmf

TARGETLIBS= $(DDK_LIB_PATH)\ntstrsafe.lib

INCLUDES = ..\

PRECOMPILED_INCLUDE=precomp.h
PRECOMPILED_PCH=precomp.pch
PRECOMPILED_OBJ=precomp.obj

SOURCES= ..\pcidrv.rc \
         ..\pcidrv.c  \
         ..\power.c \
         ..\wmi.c \
	 ..\wake.c \
         ..\idle.c \
         nic_init.c \
         eeprom.c \
         nic_recv.c \
         nic_send.c \
         routines.c \
         physet.c \
         nic_req.c \
         nic_pm.c \
         isrdpc.c

#
# Comment the below line to disable tracing. All the debug traces
# will be sent to the kernel-debugger.
#ENABLE_EVENT_TRACING=1


!if !defined(DDK_TARGET_OS) || "$(DDK_TARGET_OS)"=="Win2K"
#
# The driver is built in the Win2K build environment.
# Let us define DEPRECATE_DDK_FUNCTIONS to ensure we don't use
# any obsolete functions.
# Define _WIN2K_COMPAT_SLIST_USAGE to pickup the Win2K compatible SLIST functions.
#
C_DEFINES = $(C_DEFINES) -DWIN2K -D_WIN2K_COMPAT_SLIST_USAGE
USING_WIN2K_BUILD_ENV=1 
!else
#on XP and above, let us use DMA ver2
C_DEFINES = $(C_DEFINES) -DDMA_VER2
!endif


!IFDEF ENABLE_EVENT_TRACING

C_DEFINES = $(C_DEFINES) -DEVENT_TRACING

!ifdef USING_WIN2K_BUILD_ENV
#
# Use the Win2K specific tracing template
# $(SOURCES)   -- run software preprocessor on $(SOURCES) files
# -km          -- use kernel mode
# -func        -- define function we'll use for tracing
#                 This would map all DebugPrint calls to 
#                 DoTraceMessage.
#
RUN_WPP=$(SOURCES)\
        -km -gen:{km-w2k.tpl}*.tmh\
        -ini:localwpp.ini\
        -func:DebugPrint(LEVEL,FLAGS,MSG,...)\
        -func:DebugPrintEx((LEVEL,FLAGS,MSG,...))
!else

RUN_WPP=$(SOURCES)\
        -km\
        -ini:localwpp.ini\
        -func:DebugPrint(LEVEL,FLAGS,MSG,...)\
        -func:DebugPrintEx((LEVEL,FLAGS,MSG,...))
!endif

!ENDIF


# Temporarily excuse usage of serviceability impairing macros in code...
ALLOW_DATE_TIME=1

