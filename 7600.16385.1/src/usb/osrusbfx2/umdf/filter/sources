#
# UMDF_VERSION_MAJOR controls the headers that the driver uses.
# UMDF_VERSION_MAJOR + UMDF_VERSION_MINOR control which version 
# of UMDF the driver is bound to in the INF and which 
# update coinstaller it requires (through stampinf). 
#

UMDF_VERSION_MAJOR=1
UMDF_VERSION_MINOR=9

KMDF_VERSION_MAJOR=1
KMDF_VERSION_MINOR=9


TARGETNAME=WUDFOsrUsbFilter
TARGETTYPE=DYNLINK

USE_MSVCRT=1

C_DEFINES = $(C_DEFINES)  /D_UNICODE /DUNICODE

WIN32_WINNT_VERSION=$(LATEST_WIN32_WINNT_VERSION)
_NT_TARGET_VERSION=$(_NT_TARGET_VERSION_WINXP)
NTDDI_VERSION=$(LATEST_NTDDI_VERSION)

DLLENTRY=_DllMainCRTStartup
DLLDEF=exports.def

INCLUDES=$(INCLUDES);..\..\..\inc

MSC_WARNING_LEVEL=/W4 /WX

SOURCES=\
    OsrUsbFilter.rc             \
    dllsup.cpp                  \
    comsup.cpp                  \
    driver.cpp                  \
    device.cpp                  \
    queue.cpp                   \


TARGETLIBS=\
        $(SDK_LIB_PATH)\strsafe.lib     \
        $(SDK_LIB_PATH)\kernel32.lib    \
        $(SDK_LIB_PATH)\advapi32.lib    \
    
    
NTTARGETFILE1=$(OBJ_PATH)\$(O)\WUDFOsrUsbFilterOnKmDriver.Inf \
              $(OBJ_PATH)\$(O)\WUDFOsrUsbFilterOnUmDriver.Inf


#
# This sets up the WPP preprocessor and tells it to scan internal.h to find
# the trace function definition that's in there.
#

RUN_WPP= $(SOURCES) -dll -scan:internal.h


TARGET_DESTINATION=wudf


