<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-
1252">
<META NAME="Generator" CONTENT="Microsoft FrontPage 5.0">
<TITLE>Bulk Usb</TITLE>
</HEAD>
<BODY LINK="#0000ff">

<FONT FACE="Verdana" SIZE=5><H2>USBSAMP</H2>
</FONT><FONT FACE="Verdana" SIZE=2>

<P>
<FONT FACE="Verdana" SIZE=5><H3>Summary</H3>
</FONT><FONT FACE="Verdana" SIZE=2>

<p>The USBSAMP sample demonstrates how to perform bulk and isochronous data transfers to a generic USB device using Windows Driver Framework (WDF). This sample is written for Intel 82930 USB test board. It contains a console test application to initiate bulk & isochronouse transfers and 
obtain information on the device's I/O endpoints. The application also 
demonstrates how to use GUID-based device names and pipe names generated by the 
operating system using the SetupDiXXX user-mode APIs.</p>


<H3><A NAME="build"></A>Building the sample</H3></FONT><FONT FACE="Verdana" 
SIZE=2><P>
To build the sample driver and exe, you must first set up the DDK environment on your host machine. The “Installation and Release Notes” in the Windows 2000/XP/Server 2003 DDK has a complete description on how to do this.

 <OL>


 <LI>
     Run the build –ceZ command in the usbsamp directory to build <I>usbsamp.sys</I> and <I>usbsamp.exe</I>.

 

 <LI>
     Copy <I>KMDF coinstaller (wdfcoinstallerMMmmm.dll)</I>, <I>usbsamp.sys</I>, <I>usbsamp.exe</I>, and <I>usbsamp.inf</I> to a floppy disk or a temporary directory on the target system.
</OL>
  <P>


<H3>Installing the Driver</H3>

  Make sure your device has been programmed with the device VID/PID in the 
  USBSAMP.inf file. If not, edit the device VID, PID, and description text to 
  match your test board/device. <p>
  When you plug in the device, depending on the operating system you are using:
  <p><b>On Windows XP and later:</b></p>
  <ul>
    <li>&quot;Found New Hardware Wizard&quot; dialog box 
    will appear. Here select the 
    radio button labelled &quot;Install from a list of specific location (Advanced)&quot; and then hit the &quot;Next&quot; button. 
<li>In the following screen select the radio button labelled &quot; Search the best driver in these locations&quot; and then select &quot;Include this location in the search path&quot; and specify the target media or the directory where the INF and SYS files are copied and then hit the &quot;Next&quot; button. 
<li>The system will scan the directory and pick up the matching INF and start the installation. You will get a Hardware Installation Warning dialog stating that your driver has not passed Windows Logo Testing. Hit &quot;Continue Anyway&quot; button.
<li>The system will copy the KMDF coinstaller (wdfcoinstallerMMmmm.dll), driver, INF file, load the driver and start the device. If every thing goes fine, you will get &quot;Completing the Found New Hardware Wizard&quot;. Hit the &quot;Finish&quot; button and the installation is complete.
<li> You should be able to see the device in the Device manager under &quot;Universal Serial Bus controllers&quot;
  </ul>
 

<h3>Testing</h3>

You can use usbsamp.exe to test the device. This console application enumerates the interface registered by the driver and opens the device to send read, write or ioctl requests based on the command line options. 
<p>
usbsamp.exe  -u <-- Will dump all the descriptors and endpoint information.
</P>
<p>
usbsamp.exe  -r 1024 -w 1024 -c 100 -v <-- This command first writes 1024 bytes of data to bulk out endpoint (pipe1), and then reads 1024 bytes from bulk in endpoint (pipe1), and compares the read buffer with write buffer to see if they match. If the buffer contents match, it performs this operation 100 times.
</P>
<p>
To read and write to bulk endpoints you can run one or more of these commands simultaneously. The driver is multi-thread safe so it can handle multiple request at a time. 
<p>
usbsamp.exe  -r 65536 <--- by default, the device reads pipe0
<p>
usbsamp.exe  -w  65536 <--- by default, the device write to pipe1
<p>
usbsamp.exe  -r 65536 -i pipe02 <--- read 65536 bytes from pipe02
<p>
usbsamp.exe  -w  65536 -o pipe03 <--- write 65536 bytes to pipe03

<p>
To read and write to Isochronous endpoints you can run one or more of these commands simultaneously.
<p>
usbsamp.exe  -r  510  -i pipe04 
<p>
usbsamp.exe  -w  510  -o pipe05 
<p>
usbsamp.exe  -w  10245 -o pipe05 -r  1024 -i pipe04 -c 100 -v
</BODY>
</HTML>
