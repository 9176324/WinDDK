/*
	Copyright (c) Microsoft Corporation.  All rights reserved.

	Description: 

	This rule verifies that driver correctly marks the IRP as
	pending before it queues it in an interlocked fashion for
	further processing.  Drivers should call IoMarkIrpPending
	before the IRP is queued with one of the interlocked queue
	APIs. Otherwise, the IRP might get completed in an arbitrary
	thread context before it is marked as pending.
*/

#include "ntddk_slic.h"

state{
    int queuedWithoutMarking = 0;
    int markedPending = 0;    
} with guard (sdv_main,sdv_irp)

[ExInterlockedInsertHeadList
,ExInterlockedInsertTailList
,ExInterlockedPushEntryList
].entry 
{
    if (!markedPending) {
        queuedWithoutMarking = 1;
    }
}

IoMarkIrpPending.entry[guard $1]
{
    markedPending = 1;       
}



sdv_RunDispatchFunction.exit
{
    if ($return == STATUS_PENDING && queuedWithoutMarking) {
        abort "Driver has queued the IRP in an interlocked fashion without marking it as pending."; 
    }    
}
