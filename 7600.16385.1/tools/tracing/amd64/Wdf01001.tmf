// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
026b6de1-da26-f741-55c9-e1c9346ffbe0     core // SRC=wdfpool.cpp MJ= MN=
#typev  wdfpool_cpp851 19     "%0PMDL 0x%10!p! leaked, FxObject owner %11!p!, Callers Address %12!p!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxMdlDump
{
pCur->Info[i].Mdl, ItemPtr -- 10
pCur->Info[i].Owner, ItemPtr -- 11
pCur->Info[i].Caller, ItemPtr -- 12
}
#typev  wdfpool_cpp528 16     "%0FX_POOL 0x%10!p! leaked non-paged memory alloc 0x%11!p! (tracking block %12!p!)"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxPoolDump
{
Pool, ItemPtr -- 10
pTracker+1, ItemPtr -- 11
pTracker, ItemPtr -- 12
}
#typev  wdfpool_cpp506 15     "%0FX_POOL 0x%10!p! leaked paged memory alloc 0x%11!p! (tracking block %12!p!)"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxPoolDump
{
Pool, ItemPtr -- 10
pTracker + 1, ItemPtr -- 11
pTracker, ItemPtr -- 12
}
#typev  wdfpool_cpp480 14     "%0FxPoolDump: NonPagedBytes %10!I64d!, PagedBytes %11!I64d!, NonPagedAllocations %12!d!, PagedAllocations %13!d!,PeakNonPagedBytes %14!I64d!, PeakPagedBytes %15!I64d!,FxPoolDump: PeakNonPagedAllocations %16!d!, PeakPagedAllocations %17!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxPoolDump
{
Pool->NonPagedBytes, ItemLongLong -- 10
Pool->PagedBytes, ItemLongLong -- 11
Pool->NonPagedAllocations, ItemLong -- 12
Pool->PagedAllocations, ItemLong -- 13
Pool->PeakNonPagedBytes, ItemLongLong -- 14
Pool->PeakPagedBytes, ItemLongLong -- 15
Pool->PeakNonPagedAllocations, ItemLong -- 16
Pool->PeakPagedAllocations, ItemLong -- 17
}
#typev  wdfpool_cpp308 13     "%0overflow: header + pool request (%10!I64d!)"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPOOL FUNC=FxPoolAllocator
{
Size, ItemLongLong -- 10
}
#typev  wdfpool_cpp223 12     "%0overflow: allocation tracker (%10!d!) + header (%11!d!) + pool request (%12!I64d!)"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPOOL FUNC=FxPoolAllocator
{
sizeof(FX_POOL_TRACKER), ItemLong -- 10
FX_POOL_HEADER_SIZE, ItemLong -- 11
Size, ItemLongLong -- 12
}
#typev  wdfpool_cpp174 11     "%0Allocation Fail Count exceeded"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPOOL FUNC=FxPoolAllocator
{
}
#typev  wdfpool_cpp155 10     "%0Invalid Allocation Size of 0 requested"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPOOL FUNC=FxPoolAllocator
{
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  wdfpool_cpp563 17     "%0Initializing Pool 0x%10!p!, Tracking %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPOOL FUNC=FxInitialize
{
Pool, ItemPtr -- 10
FxDriverGlobals->IsPoolTrackingOn(), ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  wdfpool_cpp607 18     "%0Destroying Pool 0x%10!p!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPOOL FUNC=FxDestroy
{
Pool, ItemPtr -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
070e65b9-f4bf-837a-7e69-95923070ef37     wmi // SRC=FxWmiInstance.cpp MJ= MN=
#typev  FxWmiInstance_cpp467 23     "%0WDFWMIINSTANCE %10!p! was queried with no query callback and supports execute method (%11!p!), zero bytes returned"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxWmiInstanceExternal::QueryInstance
{
GetHandle(), ItemPtr -- 10
m_ExecuteMethodCallback.m_Method, ItemPtr -- 11
}
#typev  FxWmiInstance_cpp455 22     "%0This is a break in the contract.  Minimum instance size should only be used for fixed sized instances"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxWmiInstanceExternal::QueryInstance
{
}
#typev  FxWmiInstance_cpp449 21     "%0WDFWMIINSTANCE %10!p! returned %11!s!, but it specified a minimum instance size %12!d! in its WDFWMIPROVIDER %13!p!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxWmiInstanceExternal::QueryInstance
{
GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
m_Provider->GetMinInstanceBufferSize(), ItemLong -- 12
m_Provider->GetHandle(), ItemPtr -- 13
}
#typev  FxWmiInstance_cpp427 20     "%0WDFWMIINSTANCE %10!p! was queried with buffer size %11!d!,  but returned %12!d! bytes and %13!s!, should return !NT_SUCCESS in this case"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxWmiInstanceExternal::QueryInstance
{
GetHandle(), ItemPtr -- 10
OutBufferSize, ItemLong -- 11
*BufferUsed, ItemLong -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxWmiInstance_cpp411 19     "%0WDFWMIINSTANCE %10!p! was queried and returned %11!s!, which is not an allowed return value"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxWmiInstanceExternal::QueryInstance
{
GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxWmiInstance_cpp379 18     "%0WDFWMIINSTANCE %10!p! query instance using context for query, query buffer length %11!d!, context length %12!d!, %13!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxWmiInstanceExternal::QueryInstance
{
GetHandle(), ItemPtr -- 10
OutBufferSize, ItemLong -- 11
m_ContextLength, ItemLong -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxWmiInstance_cpp117 10     "%0WDFWMIINSTANCE %10!p! insufficient resources to fire event,%11!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxWmiInstance::FireEvent
{
GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxWmiInstance_cpp295 17     "%0could not allocate memory for WDFWMIINSTANCE, %10!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxWmiInstanceExternal::_Create
{
status, ItemNTSTATUS -- 10
}
#typev  FxWmiInstance_cpp212 12     "%0UseContextForQuery set, i.e. a read only instance, but EvtWmiInstanceSetInstance %10!p! or EvtWmiInstanceSetItem %11!p! is set, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxWmiInstanceExternal::_Create
{
WmiInstanceConfig->EvtWmiInstanceSetInstance, ItemPtr -- 10
WmiInstanceConfig->EvtWmiInstanceSetItem, ItemPtr -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxWmiInstance_cpp230 13     "%0UseContextForQuery set, but InstanceAttributes %10!p! is null or there is no associated type, %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxWmiInstanceExternal::_Create
{
InstanceAttributes, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxWmiInstance_cpp278 16     "%0context size %10!I64d! is less then the WDFWMIPROVIDER %11!p! min size of %12!d!, %13!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxWmiInstanceExternal::_Create
{
contextSize, ItemLongLong -- 10
Provider->GetHandle(), ItemPtr -- 11
Provider->GetMinInstanceBufferSize(), ItemLong -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxWmiInstance_cpp264 15     "%0context size %10!I64d! can be %11!d! large, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxWmiInstanceExternal::_Create
{
contextSize, ItemLongLong -- 10
ULONG_MAX, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxWmiInstance_cpp246 14     "%0Overlfow adding contextSize %10!I64d! with size override %11!I64d!, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxWmiInstanceExternal::_Create
{
contextSize, ItemLongLong -- 10
InstanceAttributes->ContextSizeOverride, ItemLongLong -- 11
status, ItemNTSTATUS -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxWmiInstance_cpp182 11     "%0WDFWMIPROVIDER %10!p! is event only and UseContextForQuery (%11!d!) is TRUE, or a callback (query instance %12!p!, set instance %13!p!, set item %14!p!, executue method %15!p!) is not NULL, %16!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxWmiInstanceExternal::_Create
{
Provider->GetHandle(), ItemPtr -- 10
WmiInstanceConfig->UseContextForQuery, ItemLong -- 11
WmiInstanceConfig->EvtWmiInstanceQueryInstance, ItemPtr -- 12
WmiInstanceConfig->EvtWmiInstanceSetInstance, ItemPtr -- 13
WmiInstanceConfig->EvtWmiInstanceSetItem, ItemPtr -- 14
WmiInstanceConfig->EvtWmiInstanceExecuteMethod, ItemPtr -- 15
status, ItemNTSTATUS -- 16
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
07ea3316-edc5-cb28-9401-22a23bd08d99     core // SRC=FxRequestBase.cpp MJ= MN=
#typev  FxRequestBase_cpp631 19     "%0Request %10!p!, canceled timer successfully"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoTarget::RequestCompletionRoutine
{
this, ItemPtr -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxRequestBase_cpp621 18     "%0Request %10!p!, did not cancel timer"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoTarget::RequestCompletionRoutine
{
this, ItemPtr -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxRequestBase_cpp214 13     "%0Freeing irp %10!p! from WDFREQUEST %11!p!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxRequestBase::ValidateTarget
{
pOldIrp, ItemPtr -- 10
GetTraceObjectHandle(), ItemPtr -- 11
}
#typev  FxRequestBase_cpp185 11     "%0Could not allocate irp for WDFREQUEST %10!p! for WDFIOTARGET %11!p!, %12!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxRequestBase::ValidateTarget
{
GetTraceObjectHandle(), ItemPtr -- 10
Target->GetHandle(), ItemPtr -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxRequestBase_cpp207 12     "%0Cannot reallocate PIRP for WDFREQUEST %10!p! using WDFIOTARGET %11!p!, %12!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxRequestBase::ValidateTarget
{
GetTraceObjectHandle(), ItemPtr -- 10
Target->GetHandle(), ItemPtr -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxRequestBase_cpp170 10     "%0WDFIOTARGET %10!p! is closed, cannot validate, %11!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxRequestBase::ValidateTarget
{
Target->GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxRequestBase_cpp458 17     "%0Could not cancel request %10!p!, already completed"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxRequestBase::Cancel
{
this, ItemPtr -- 10
}
#typev  FxRequestBase_cpp449 16     "%0Request %10!p!, PIRP %11!p!, completed synchronously in cancel call, completing request on target %12!p!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxRequestBase::Cancel
{
this, ItemPtr -- 10
m_Irp.GetIrp(), ItemPtr -- 11
m_Target, ItemPtr -- 12
}
#typev  FxRequestBase_cpp432 15     "%0Request %10!p!, PIRP %11!p!, cancel result %12!d!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxRequestBase::Cancel
{
this, ItemPtr -- 10
m_Irp.GetIrp(), ItemPtr -- 11
result, ItemLong -- 12
}
#typev  FxRequestBase_cpp394 14     "%0Request %10!p!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxRequestBase::Cancel
{
this, ItemPtr -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
0b3a10bf-6647-8fe6-98f3-d42ec0cd003e     core // SRC=FxCallbackLock.hpp MJ= MN=
#typev  FxCallbackLock_hpp115 10     "%0Callback: Driver released the callback lock 0x%10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxCallbackLock::CheckOwnership
{
this, ItemPtr -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
11d3e5d3-19e2-f87a-7596-ad95ce44b2da     core // SRC=FxRequestApi.cpp MJ= MN=
#typev  FxRequestApi_cpp2681 67     "%0WDFREQUEST %10!p! doesn't belong to any queue"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestGetIoQueue
{
Request, ItemPtr -- 10
}
#typev  FxRequestApi_cpp2688 68     "%0Getting queue handle for Create request is not allowed for WDFREQUEST 0x%10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=imp_WdfRequestGetIoQueue
{
pRequest, ItemPtr -- 10
}
#typev  FxRequestApi_cpp2676 66     "%0Enter: WDFREQUEST 0x%10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestGetIoQueue
{
Request, ItemPtr -- 10
}
#typev  FxRequestApi_cpp2236 57     "%0Params Size 0x%10!x!, expected 0x%11!x!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestGetCompletionParams
{
Params->Size, ItemLong -- 10
sizeof(WDF_REQUEST_COMPLETION_PARAMS), ItemLong -- 11
}
#typev  FxRequestApi_cpp2230 56     "%0Enter: WDFREQUEST %10!p!, Params %11!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestGetCompletionParams
{
Request, ItemPtr -- 10
Params, ItemPtr -- 11
}
#typev  FxRequestApi_cpp2152 53     "%0Enter: WDFREQUEST %10!p!, Routine %11!p!, Context %12!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestSetCompletionRoutine
{
Request, ItemPtr -- 10
CompletionRoutine, ItemPtr -- 11
CompletionContext, ItemPtr -- 12
}
#typev  FxRequestApi_cpp1984 50     "%0Enter: WDFREQUEST %10!p! is from 32 bit process = %11!d!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestIsFrom32BitProcess
{
Request, ItemPtr -- 10
result, ItemLong -- 11
}
#typev  FxRequestApi_cpp230 13     "%0ReuseParams Flags 0x%10!x!, valid mask 0x%11!x!, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestReuse
{
ReuseParams->Flags, ItemLong -- 10
(ULONG) ~WDF_REQUEST_REUSE_VALID_FLAGS, ItemLong -- 11
STATUS_INVALID_PARAMETER, ItemNTSTATUS -- 12
}
#typev  FxRequestApi_cpp222 12     "%0ReuseParams Size %10!d!, expected %11!d! %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestReuse
{
ReuseParams->Size, ItemLong -- 10
sizeof(WDF_REQUEST_REUSE_PARAMS), ItemLong -- 11
STATUS_INVALID_PARAMETER, ItemNTSTATUS -- 12
}
#typev  FxRequestApi_cpp2416 61     "%0GetFileobject failed with %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestGetFileObject
{
status, ItemNTSTATUS -- 10
}
#typev  FxRequestApi_cpp2411 60     "%0Enter: WDFREQUEST 0x%10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestGetFileObject
{
Request, ItemPtr -- 10
}
#typev  FxRequestApi_cpp2192 55     "%0Params size %10!d! incorrect, expected %11!d!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestGetParameters
{
Parameters->Size, ItemLong -- 10
sizeof(WDF_REQUEST_PARAMETERS), ItemLong -- 11
}
#typev  FxRequestApi_cpp2188 54     "%0Enter: Request %10!p!, Parameters %11!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestGetParameters
{
Request, ItemPtr -- 10
Parameters, ItemPtr -- 11
}
#typev  FxRequestApi_cpp1619 43     "%0This call is not valid on the Write request, you should call WdfRequestRetrieveInputMemory to get the Memory for WDFREQUEST 0x%10!p!, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestRetrieveOutputWdmMdl
{
Request, ItemPtr -- 10
STATUS_INVALID_DEVICE_REQUEST, ItemNTSTATUS -- 11
}
#typev  FxRequestApi_cpp1611 42     "%0Enter: WDFREQUEST 0x%10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestRetrieveOutputWdmMdl
{
Request, ItemPtr -- 10
}
#typev  FxRequestApi_cpp1520 41     "%0This call is not valid on the Read request, you should call WdfRequestRetrieveOutputMdl to get the Mdl for WFDREQUEST 0x%10!p!,  %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestRetrieveInputWdmMdl
{
Request, ItemPtr -- 10
STATUS_INVALID_DEVICE_REQUEST, ItemNTSTATUS -- 11
}
#typev  FxRequestApi_cpp1513 40     "%0Enter: WDFREQUEST 0x%10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestRetrieveInputWdmMdl
{
Request, ItemPtr -- 10
}
#typev  FxRequestApi_cpp1424 39     "%0Error: This call is valid only on method-neither ioctl and read WDFREQUEST 0x%10!p!, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestRetrieveUnsafeUserOutputBuffer
{
Request, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxRequestApi_cpp1404 38     "%0WDFREQUEST 0x%10!p! buffer size %11!d! is less than RequiredLength %12!I64d!, %13!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestRetrieveUnsafeUserOutputBuffer
{
Request, ItemPtr -- 10
irpStack->Parameters.Read.Length, ItemLong -- 11
RequiredLength, ItemLongLong -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxRequestApi_cpp1380 37     "%0WDFREQUEST 0x%10!p! buffer size %11!d! is less than RequiredLength %12!I64d!, %13!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestRetrieveUnsafeUserOutputBuffer
{
Request, ItemPtr -- 10
irpStack->Parameters.DeviceIoControl.OutputBufferLength, ItemLong -- 11
RequiredLength, ItemLongLong -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxRequestApi_cpp1363 36     "%0This call is not valid on an internal IOCTL request, you should call safer WdfRequestRetrieveOutputBuffer to get the buffer for WDFREQUEST 0x%10!p!, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestRetrieveUnsafeUserOutputBuffer
{
Request, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxRequestApi_cpp1350 35     "%0This call is not valid on Write request, you should call WdfRequestRetrieveUnsafeUserInputBuffer to get the buffer for WDFREQUEST 0x%10!p!, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestRetrieveUnsafeUserOutputBuffer
{
Request, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxRequestApi_cpp1336 34     "%0Enter: WDFREQUEST 0x%10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestRetrieveUnsafeUserOutputBuffer
{
pRequest, ItemPtr -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxRequestApi_cpp1223 33     "%0Error: This call is valid only on method-neither ioctl and write WDFREQUEST %10!p!, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestRetrieveUnsafeUserInputBuffer
{
Request, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxRequestApi_cpp1203 32     "%0WDFREQUEST 0x%10!p! buffer size %11!d! is less than RequiredLength %12!I64d!, %13!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestRetrieveUnsafeUserInputBuffer
{
Request, ItemPtr -- 10
irpStack->Parameters.Write.Length, ItemLong -- 11
RequiredLength, ItemLongLong -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxRequestApi_cpp1179 31     "%0WDFREQUEST %10!p! buffer size %11!d! is less than RequiredLength %12!I64d!, %13!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestRetrieveUnsafeUserInputBuffer
{
Request, ItemPtr -- 10
irpStack->Parameters.DeviceIoControl.InputBufferLength, ItemLong -- 11
RequiredLength, ItemLongLong -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxRequestApi_cpp1162 30     "%0This call is not valid on internal-ioctl request, you should call safer WdfRequestRetrieveInputBuffer to get the buffer for WDFREQUEST 0x%10!p!, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestRetrieveUnsafeUserInputBuffer
{
Request, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxRequestApi_cpp1150 29     "%0This call is not valid on read request, you should call WdfRequestRetrieveUnsafeUserOutputBuffer to get the buffer for WDFREQUEST 0x%10!p!, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestRetrieveUnsafeUserInputBuffer
{
Request, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxRequestApi_cpp1100 28     "%0Enter:  WDREQUEST 0x%10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestRetrieveUnsafeUserInputBuffer
{
Request, ItemPtr -- 10
}
#typev  FxRequestApi_cpp1016 27     "%0WDFREQUEST 0x%10!p! buffer size %11!I64d! is less than RequiredLength %12!I64d!, %13!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestRetrieveOutputBuffer
{
Request, ItemPtr -- 10
size, ItemLongLong -- 11
RequiredLength, ItemLongLong -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxRequestApi_cpp991 26     "%0This call is not valid on write request, you should call WdfRequestRetrieveInputBuffer to get the buffer for WDFREQUEST 0x%10!p!, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestRetrieveOutputBuffer
{
Request, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxRequestApi_cpp980 25     "%0Enter: WDFREQUEST 0x%10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestRetrieveOutputBuffer
{
Request, ItemPtr -- 10
}
#typev  FxRequestApi_cpp866 24     "%0WDFREQUEST 0x%10!p! buffer size %11!I64d! is less than RequiredLength %12!I64d!, %13!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestRetrieveInputBuffer
{
Request, ItemPtr -- 10
size, ItemLongLong -- 11
RequiredLength, ItemLongLong -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxRequestApi_cpp847 23     "%0This call is not valid on the read request, you should call WdfRequestRetrieveOutputBuffer to get the buffer for WDFREQUEST 0x%10!p!, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestRetrieveInputBuffer
{
Request, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxRequestApi_cpp838 22     "%0Enter: WDFREQUEST 0x%10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestRetrieveInputBuffer
{
Request, ItemPtr -- 10
}
#typev  FxRequestApi_cpp719 21     "%0This call is not valid on the Write request, you should call WdfRequestRetrieveInputMemory to get the Memory for WDFREQUEST 0x%10!p!, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestRetrieveOutputMemory
{
Request, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxRequestApi_cpp698 20     "%0Enter: WDFREQUEST 0x%10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestRetrieveOutputMemory
{
Request, ItemPtr -- 10
}
#typev  FxRequestApi_cpp609 19     "%0This call is not valid on the Read request, you should call WdfRequestRetrieveOutputMemory to get the Memory for WDFREQUEST 0x%10!p!, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestRetrieveInputMemory
{
Request, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxRequestApi_cpp600 18     "%0Enter: WDFREQUEST 0x%10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestRetrieveInputMemory
{
Request, ItemPtr -- 10
}
#typev  FxRequestApi_cpp471 17     "%0Enter: WDFREQUEST 0x%10!p!, Information 0x%11!p!"      //   GLOBALS=GetFxDriverGlobals(DriverGlobals) LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestSetInformation
{
Request, ItemPtr -- 10
(VOID*)Information, ItemPtr -- 11
}
#typev  FxRequestApi_cpp2311 59     "%0WDFREQUEST is already completed 0x%10!p!, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestWdmGetIrp
{
Request, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxRequestApi_cpp2305 58     "%0Enter: WDFREQUEST 0x%10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestWdmGetIrp
{
Request, ItemPtr -- 10
}
#typev  FxRequestApi_cpp2940 76     "%0WDFREQUEST %10!p! doesn't belong to any queue %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestUnmarkCancelable
{
Request, ItemPtr -- 10
STATUS_INVALID_DEVICE_REQUEST, ItemNTSTATUS -- 11
}
#typev  FxRequestApi_cpp2936 75     "%0Enter: WDFREQUEST 0x%10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestUnmarkCancelable
{
Request, ItemPtr -- 10
}
#typev  FxRequestApi_cpp2883 74     "%0WDFREQUEST %10!p! doesn't belong to any queue"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestMarkCancelable
{
Request, ItemPtr -- 10
}
#typev  FxRequestApi_cpp2879 73     "%0Enter: WDFREQUEST 0x%10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestMarkCancelable
{
Request, ItemPtr -- 10
}
#typev  FxRequestApi_cpp2095 52     "%0Enter: WDFREQUEST %10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestWdmFormatUsingStackLocation
{
Request, ItemPtr -- 10
}
#typev  FxRequestApi_cpp2020 51     "%0Enter: WDFREQUEST %10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestFormatRequestUsingCurrentType
{
Request, ItemPtr -- 10
}
#typev  FxRequestApi_cpp1940 49     "%0Exit: WDFREQUEST %10!p!, result %11!d!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestCancelSentRequest
{
Request, ItemPtr -- 10
result, ItemLong -- 11
}
#typev  FxRequestApi_cpp1927 48     "%0Enter: WDFREQUEST %10!p! to be cancelled"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestCancelSentRequest
{
Request, ItemPtr -- 10
}
#typev  FxRequestApi_cpp2583 65     "%0ProbeAndLockForWrite failed with %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestProbeAndLockUserBufferForWrite
{
status, ItemNTSTATUS -- 10
}
#typev  FxRequestApi_cpp2578 64     "%0Enter: WDFREQUEST 0x%10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestProbeAndLockUserBufferForWrite
{
Request, ItemPtr -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxRequestApi_cpp2499 63     "%0ProbeAndLockForRead failed with %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestProbeAndLockUserBufferForRead
{
status, ItemNTSTATUS -- 10
}
#typev  FxRequestApi_cpp2493 62     "%0Enter: WDFREQUEST 0x%10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestProbeAndLockUserBufferForRead
{
Request, ItemPtr -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxRequestApi_cpp422 16     "%0Completing WDFREQUEST 0x%10!p!, %11!s!"      //   GLOBALS=GetFxDriverGlobals(DriverGlobals) LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestCompleteWithInformation
{
Request, ItemPtr -- 10
RequestStatus, ItemNTSTATUS -- 11
}
#typev  FxRequestApi_cpp369 15     "%0Completing WDFREQUEST 0x%10!p!, %11!s!"      //   GLOBALS=GetFxDriverGlobals(DriverGlobals) LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestCompleteWithPriorityBoost
{
Request, ItemPtr -- 10
RequestStatus, ItemNTSTATUS -- 11
}
#typev  FxRequestApi_cpp318 14     "%0Completing WDFREQUEST 0x%10!p!, %11!s!"      //   GLOBALS=GetFxDriverGlobals(DriverGlobals) LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestComplete
{
Request, ItemPtr -- 10
RequestStatus, ItemNTSTATUS -- 11
}
#typev  FxRequestApi_cpp171 11     "%0Irp %10!p! RequestFreesIrp %11!d! WDFREQUEST %12!p! created"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestCreateFromIrp
{
Irp, ItemPtr -- 10
RequestFreesIrp, ItemLong -- 11
*Request, ItemPtr -- 12
}
#typev  FxRequestApi_cpp102 10     "%0Created WDFREQUEST %10!p!, status %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestCreate
{
*Request, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxRequestApi_cpp2826 72     "%0WDFREQUEST %10!p! doesn't belong to any queue %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestRequeue
{
Request, ItemPtr -- 10
STATUS_INVALID_DEVICE_REQUEST, ItemNTSTATUS -- 11
}
#typev  FxRequestApi_cpp2818 71     "%0Enter: WDFREQUEST 0x%10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestRequeue
{
Request, ItemPtr -- 10
}
#typev  FxRequestApi_cpp2770 70     "%0WDFREQUEST %10!p! doesn't belong to any queue %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestForwardToIoQueue
{
Request, ItemPtr -- 10
STATUS_INVALID_DEVICE_REQUEST, ItemNTSTATUS -- 11
}
#typev  FxRequestApi_cpp2766 69     "%0Enter: WDFREQUEST 0x%10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestForwardToIoQueue
{
Request, ItemPtr -- 10
}
#typev  FxRequestApi_cpp3058 78     "%0WDFREQUEST %10!p! doesn't belong to any queue"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestStopAcknowledge
{
Request, ItemPtr -- 10
}
#typev  FxRequestApi_cpp3054 77     "%0Enter: WDFREQUEST 0x%10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=imp_WdfRequestStopAcknowledge
{
Request, ItemPtr -- 10
}
#typev  FxRequestApi_cpp1847 47     "%0Sending FxRequest %10!p! (WDFREQUEST %11!p!), Irp %12!p!"      //   GLOBALS=WDFREQUEST_FXREQUEST(Request)->GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfRequestSend
{
WDFREQUEST_FXREQUEST(Request), ItemPtr -- 10
WDFREQUEST_FXREQUEST(Request)->GetHandle(), ItemPtr -- 11
WDFREQUEST_FXREQUEST(Request)->GetSubmitIrp(), ItemPtr -- 12
}
#typev  FxRequestApi_cpp1836 46     "%0action 0x%10!x!"      //   GLOBALS=WDFIOTARGET_FXIOTARGET(Target)->GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfRequestSend
{
GLOBALS_ACTION(DriverGlobals), ItemLong -- 10
}
#typev  FxRequestApi_cpp1810 45     "%0Enter: WDFIOTARGET %10!p!, WDFREQUEST %11!p!"      //   GLOBALS=WDFREQUEST_FXREQUEST(Request)->GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfRequestSend
{
WDFIOTARGET_FXIOTARGET(Target)->GetObjectHandle(), ItemPtr -- 10
WDFREQUEST_FXREQUEST(Request), ItemPtr -- 11
}
#typev  FxRequestApi_cpp1765 44     "%0WDFREQUEST %10!p! must be a WDFQUEUE presented request"      //   GLOBALS=WDFREQUEST_FXREQUEST(Request)->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfRequestSend
{
WDFREQUEST_FXREQUEST(Request)->GetHandle(), ItemPtr -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
14a735d4-83e5-c2e1-8be1-6b7e1574692c     pnp // SRC=FxInterruptApi.cpp MJ= MN=
#typev  FxInterruptApi_cpp542 15     "%0Policy %10!d! is out of range"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfInterruptSetPolicy
{
Policy, ItemLong -- 10
}
#typev  FxInterruptApi_cpp550 16     "%0Priority %10!d! is out of range"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfInterruptSetPolicy
{
Priority, ItemLong -- 10
}
#typev  FxInterruptApi_cpp450 14     "%0WDF_INTERRUPT_INFO %10!p! Size %11!d! invalid, expected %12!d!"      //   GLOBALS=GetFxDriverGlobals(DriverGlobals) LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfInterruptGetInfo
{
Interrupt, ItemPtr -- 10
Info->Size, ItemLong -- 11
sizeof(WDF_INTERRUPT_INFO), ItemLong -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxInterruptApi_cpp133 13     "%0not enough memory to allocate WDFINTERRUPT for WDFDEVICE %10!p!, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfInterruptCreate
{
Device, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxInterruptApi_cpp119 12     "%0WDFINTERRUPTs can only be created during EvtDriverDeviceAdd or when the WDFDEVICE %10!p! is initially created, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfInterruptCreate
{
Device, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxInterruptApi_cpp97 11     "%0NULL EvtInterruptIsr in WDF_INTERRUPT_CONFIG structure 0x%10!p! passed"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfInterruptCreate
{
Configuration, ItemPtr -- 10
}
#typev  FxInterruptApi_cpp90 10     "%0WDF_INTERRUPT_CONFIG size 0x%10!x! incorrect, expected 0x%11!x!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfInterruptCreate
{
Configuration->Size, ItemLong -- 10
sizeof(WDF_INTERRUPT_CONFIG), ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
1ceed520-1da8-229e-9c26-789a7c05e279     support // SRC=FxResourceCollection.cpp MJ= MN=
#typev  FxResourceCollection_cpp681 12     "%0Integer overflow occured when computing size of IO_RESOURCE_REQUIREMENTS_LIST"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxIoResReqList::CreateWdmList
{
}
#typev  FxResourceCollection_cpp55 10     "%0Removes not allowed on handle %10!p!, remove at index %11!d!failed"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxResourceCollection::RemoveAndDelete
{
GetObjectHandle(), ItemPtr -- 10
Index, ItemLong -- 11
}
#typev  FxResourceCollection_cpp126 11     "%0Adds not allowed on handle %10!p!, add at index %11!d!failed"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxResourceCollection::AddAt
{
GetObjectHandle(), ItemPtr -- 10
Index, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
1e5d4079-4fd5-2028-4adf-8049851db90b     core // SRC=FxMemoryObject.cpp MJ= MN=
#typev  FxMemoryObject_cpp115 10     "%0Target WDFMEMORY 0x%10!p! is ReadOnly"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=IFxMemory::CopyFromPtr
{
GetHandle(), ItemPtr -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
1ed82a52-e13d-4d81-6503-bb99b698b947     core // SRC=HandleAPI.cpp MJ= MN=
#typev  HandleAPI_cpp531 14     "%0Attempting to get context type %10!s! from WDFOBJECT 0x%11!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGHANDLE FUNC=imp_WdfObjectGetTypedContextWorker
{
pGivenName, ItemString -- 10
Handle, ItemPtr -- 11
}
#typev  HandleAPI_cpp356 12     "%0Object Type Mismatch, Handle 0x%10!p!, Type 0x%11!x!, Obj 0x%12!p!, SB 0x%13!x!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtr
{
Handle, ItemPtr -- 10
Type, ItemLong -- 11
pObject, ItemPtr -- 12
pObject->GetType(), ItemLong -- 13
}
#typev  HandleAPI_cpp318 11     "%0NULL object handle passed 0x%10!p!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxObjectHandleGetPtr
{
Handle, ItemPtr -- 10
}
#typev  HandleAPI_cpp89 10     "%0Size overflow, Object size 0x%10!x!, extra object size 0x%11!x!, ContextTypeInfo size 0x%12!I64x!, ContextSizeOverride 0x%13!I64x!, %14!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGOBJECT FUNC=FxCalculateObjectTotalSize
{
RawObjectSize, ItemLong -- 10
ExtraSize, ItemLong -- 11
(Attributes != NULL) ? Attributes->ContextTypeInfo->ContextSize : 0, ItemLongLongX -- 12
(Attributes != NULL) ? Attributes->ContextSizeOverride : 0, ItemLongLongX -- 13
status, ItemNTSTATUS -- 14
}
#typev  HandleAPI_cpp429 13     "%0WDFHANDLE %10!p! cannot have contexts added to it, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGHANDLE FUNC=imp_WdfObjectAllocateContext
{
Handle, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
20e4033c-726f-3379-4fac-dbf8678de0ae     support // SRC=FxDeviceInterfaceAPI.cpp MJ= MN=
#typev  FxDeviceInterfaceAPI_cpp223 13     "%0WDFDEVICE %10!p! is not a PNP device, device interfaces not allowed"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfDeviceSetDeviceInterfaceState
{
Device, ItemPtr -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxDeviceInterfaceAPI_cpp343 14     "%0WDFDEVICE %10!p! is not a PNP device, device interface creation not allowed %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfDeviceRetrieveDeviceInterfaceString
{
Device, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxDeviceInterfaceAPI_cpp125 12     "%0WDFDEVICE %10!p!, DeviceInterface object initialization failed, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfDeviceCreateDeviceInterface
{
Device, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxDeviceInterfaceAPI_cpp112 11     "%0WDFDEVICE %10!p! DeviceInterface object creation failed, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfDeviceCreateDeviceInterface
{
Device, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxDeviceInterfaceAPI_cpp99 10     "%0WDFDEVICE %10!p! is not a PNP device, device interface creation not allowed %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfDeviceCreateDeviceInterface
{
Device, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
22276588-5148-a4c7-910b-03ec98e32e34     core // SRC=FxSystemWorkItem.cpp MJ= MN=
#typev  FxSystemWorkItem_cpp150 12     "%0WorkItem 0x%10!p! already enqueued IoWorkItem 0x%11!p!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxSystemWorkItem::Enqueue
{
this, ItemPtr -- 10
m_WorkItem, ItemPtr -- 11
}
#typev  FxSystemWorkItem_cpp92 10     "%0WorkItem destroyed without calling FxSystemWorkItem::Delete, or by Framework processing DeviceRemove. Possible reference count problem?"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxSystemWorkItem::~FxSystemWorkItem
{
}
#typev  FxSystemWorkItem_cpp130 11     "%0Could not allocate IoWorkItem, insufficient resources"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxSystemWorkItem::Create
{
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
234965b0-9e3e-f070-de6e-c1f8b89c3c9e     wmi // SRC=FxWmiProvider.cpp MJ= MN=
#typev  FxWmiProvider_cpp304 17     "%0WMI is being cleanedup, WDFWMIINSTANCE %10!p! add failing, %11!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGDEVICE FUNC=FxWmiProvider::AddInstanceLocked
{
Instance->GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxWmiProvider_cpp263 16     "%0WDFWMIINSTANCE %10!p! already added, %11!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxWmiProvider::AddInstanceLocked
{
Instance->GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxWmiProvider_cpp350 18     "%0WDFWMIINSTANCE %10!p! cannot be added to tracing WDFWMIPROVIDER %11!p!, %12!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxWmiProvider::AddInstance
{
Instance->GetHandle(), ItemPtr -- 10
GetHandle(), ItemPtr -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxWmiProvider_cpp203 15     "%0Could not allocate memory for a WDFWMIPROVIDER, %10!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxWmiProvider::_Create
{
status, ItemNTSTATUS -- 10
}
#typev  FxWmiProvider_cpp182 14     "%0WmiProvider Guid filed is all zeros, %10!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxWmiProvider::_Create
{
status, ItemNTSTATUS -- 10
}
#typev  FxWmiProvider_cpp164 13     "%0EvtWmiProviderFunctionControl can only be set if Flags 0x%10!x! has WdfWmiProviderTracing (%11!d!) or WdfWmiProviderExpensive (%12!d!) bit values set, %13!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxWmiProvider::_Create
{
WmiProviderConfig->Flags, ItemLong -- 10
WdfWmiProviderTracing, ItemLong -- 11
WdfWmiProviderExpensive, ItemLong -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxWmiProvider_cpp141 12     "%0WdfWmiProviderTracing must be the only flag set, %10!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxWmiProvider::_Create
{
status, ItemNTSTATUS -- 10
}
#typev  FxWmiProvider_cpp129 11     "%0Invalid flag(s) set, Flags 0x%10!x!, valid mask 0x%11!x!, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxWmiProvider::_Create
{
WmiProviderConfig->Flags, ItemLong -- 10
WdfWmiProviderValidFlags, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxWmiProvider_cpp118 10     "%0WmiProviderConfig Size 0x%10!x!, expected size 0x%11!x!, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxWmiProvider::_Create
{
WmiProviderConfig->Size, ItemLong -- 10
sizeof(WDF_WMI_PROVIDER_CONFIG), ItemLong -- 11
status, ItemNTSTATUS -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
273a1eb7-572b-8692-5903-455553af1744     usb // SRC=usbutil.cpp MJ= MN=
#typev  usbutil_cpp62 10     "%0FormatUrbRequest:  Target %10!p!, Request %11!p!, setting target failed, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxFormatUrbRequest
{
Target, ItemPtr -- 10
Request, ItemPtr -- 11
status, ItemNTSTATUS -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
2c8664da-ec74-8684-b750-2f5dedf7f3dd     pnp // SRC=fxpkgpdo.cpp MJ= MN=
#typev  fxpkgpdo_cpp1635 17     "%0WDFDEVICE %10!p! could not alloc string for PnP query IdType #%11!d!, %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPdo::_PnpQueryId
{
pThis->m_Device->GetHandle(), ItemPtr -- 10
irpStack->Parameters.QueryId.IdType, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  fxpkgpdo_cpp1628 16     "%0WDFDEVICE %10!p! does not have a string for PnP query IdType #%11!d!, %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPdo::_PnpQueryId
{
pThis->m_Device->GetHandle(), ItemPtr -- 10
irpStack->Parameters.QueryId.IdType, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  fxpkgpdo_cpp1150 13     "%0WDFDEVICE %10!p! failing Query Device Text, type %11!d!, %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPdo::_PnpQueryDeviceText
{
pThis->m_Device->GetHandle(), ItemPtr -- 10
irpStack->Parameters.QueryDeviceText.DeviceTextType, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  fxpkgpdo_cpp1675 19     "%0Exiting QueryPnpDeviceState handler"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPdo::_PnpQueryPnpDeviceState
{
}
#typev  fxpkgpdo_cpp1669 18     "%0Entering QueryPnpDeviceState handler"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPdo::_PnpQueryPnpDeviceState
{
}
#typev  fxpkgpdo_cpp1974 20     "%0Could not allocate ejection device list for PDO WDFDEVICE %10!p!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPdo::AddEjectionDevice
{
m_Device->GetHandle(), ItemPtr -- 10
}
#typev  fxpkgpdo_cpp1292 14     "%0waiting on event %10!p! for device to finish scanning"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPdo::PnpEventEjectHardwareOverload
{
event, ItemPtr -- 10
}
#typev  fxpkgpdo_cpp928 12     "%0could not register device interface on PDO WDFDEVICE %10!p!, !devobj %11!p!, failing IRP_MN_QUERY_RESOURCE_REQUIREMENTS %12!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPdo::PnpQueryResourceRequirements
{
m_Device->GetHandle(), ItemPtr -- 10
m_Device->GetDeviceObject(), ItemPtr -- 11
status, ItemNTSTATUS -- 12
}
#typev  fxpkgpdo_cpp265 10     "%0DeviceInit %10!p! could not allocate string for device IDs (length %11!I64d!), %12!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPdo::Initialize
{
DeviceInit, ItemPtr -- 10
cbLength, ItemLongLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  fxpkgpdo_cpp503 11     "%0WDFDEVICE %10!p! failing TargetDeviceRelations, %11!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPdo::PnpQueryDeviceRelations
{
m_Device->GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  fxpkgpdo_cpp1408 15     "%0Removing entry reference %10!p! on FxPkgPnp %11!p!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPdo::PnpEventPdoRemovedOverload
{
m_Description, ItemPtr -- 10
this, ItemPtr -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
2d7e54c0-5fa9-3ce7-1ab9-7bf7ddee1f3b     wmi // SRC=FxWmiIrpHandler.cpp MJ= MN=
#typev  FxWmiIrpHandler_cpp2045 24     "%0WIN2K:  Deleting internal tracing WDM devobj 0x%10!p!, FxDevice 0x%11!p!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxWmiTracingIrpHandler::CleanupWin2kTracing
{
m_Device->GetDeviceObject(), ItemPtr -- 10
m_Device, ItemPtr -- 11
}
#typev  FxWmiIrpHandler_cpp2036 23     "%0WIN2K:  cleanup internal tracing WDM devobj 0x%10!p!, FxDevice 0x%11!p!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxWmiTracingIrpHandler::CleanupWin2kTracing
{
m_Device->GetDeviceObject(), ItemPtr -- 10
m_Device, ItemPtr -- 11
}
#typev  FxWmiIrpHandler_cpp2018 22     "%0WIN2K:  cleanup external tracing WDM devobj 0x%10!p!, FxDevice 0x%11!p!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxWmiTracingIrpHandler::CleanupWin2kTracing
{
m_Device->GetDeviceObject(), ItemPtr -- 10
m_Device, ItemPtr -- 11
}
#typev  FxWmiIrpHandler_cpp1849 21     "%0Converting %10!s! to %11!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxWmiIrpHandler::CompleteWmiRequest
{
Status, ItemNTSTATUS -- 10
STATUS_WMI_SET_FAILURE, ItemNTSTATUS -- 11
}
#typev  FxWmiIrpHandler_cpp361 12     "%0IoWMIRegistrationControl DevObj %10!p!, Action %11!d!, failed, %12!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxWmiIrpHandler::UpdateGuids
{
GetDevice()->GetDeviceObject(), ItemPtr -- 10
action, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxWmiIrpHandler_cpp1165 20     "%0WDFWMIPROVIDER %10!p! QueryAllData returning %11!s!, buffer used 0x%12!x!"      //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxWmiIrpHandler::_QueryAllData
{
Provider->GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
bufferUsed, ItemLong -- 12
}
#typev  FxWmiIrpHandler_cpp1136 18     "%0WDFWMIPROVIDER %10!p! QueryAllData returning %11!s!, requesting buffer size of 0x%12!x!"      //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxWmiIrpHandler::_QueryAllData
{
Provider->GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
bufferUsed, ItemLong -- 12
}
#typev  FxWmiIrpHandler_cpp1157 19     "%0WDFWMIPROVIDER %10!p! QueryAllData returning %11!s!"      //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxWmiIrpHandler::_QueryAllData
{
Provider->GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxWmiIrpHandler_cpp1085 17     "%0WDFWMIPROVIDER %10!p!, arithmetic overflow in computing buffer consumed(%11!d!+%12!d!), %13!s!"      //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxWmiIrpHandler::_QueryAllData
{
Provider->GetHandle(), ItemPtr -- 10
bufferUsed, ItemLong -- 11
adjustedSize, ItemLong -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxWmiIrpHandler_cpp1065 16     "%0WDFWMIPROVIDER %10!p!, arithmetic overflow in computing block offset, %11!s!"      //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxWmiIrpHandler::_QueryAllData
{
Provider->GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxWmiIrpHandler_cpp1008 15     "%0WDFWMIINSTNACE %10!p! queried, returned a buffer size of %11!d!,but it could not be rounded up, %12!s!"      //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxWmiIrpHandler::_QueryAllData
{
pInstance->GetHandle(), ItemPtr -- 10
tmpSize, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxWmiIrpHandler_cpp864 14     "%0WDFWMIPROVIDER %10!p! QueryAllData, num instances %11!d!"      //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxWmiIrpHandler::_QueryAllData
{
Provider->GetHandle(), ItemPtr -- 10
instanceCount, ItemLong -- 11
}
#typev  FxWmiIrpHandler_cpp628 13     "%0!devobj 0x%10!p! IRP_MJ_SYSTEM_CONTROL, %11!s! IRP 0x%12!p!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxWmiIrpHandler::Dispatch
{
m_Device->GetDeviceObject(), ItemPtr -- 10
minor, ItemListByte(IRP_MN_QUERY_ALL_DATA,IRP_MN_QUERY_SINGLE_INSTANCE,IRP_MN_CHANGE_SINGLE_INSTANCE,IRP_MN_CHANGE_SINGLE_ITEM,IRP_MN_ENABLE_EVENTS,IRP_MN_DISABLE_EVENTS,IRP_MN_ENABLE_COLLECTION,IRP_MN_DISABLE_COLLECTION,IRP_MN_REGINFO,IRP_MN_EXECUTE_METHOD,IRP_MN_Reserved_0a,IRP_MN_REGINFO_EX) -- 11
Irp, ItemPtr -- 12
}
#typev  FxWmiIrpHandler_cpp189 11     "%0failure deregistering WMI with OS, %10!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxWmiIrpHandler::Deregister
{
status, ItemNTSTATUS -- 10
}
#typev  FxWmiIrpHandler_cpp143 10     "%0could not register WMI with OS, %10!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxWmiIrpHandler::Register
{
status, ItemNTSTATUS -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
36548724-d86b-d883-854c-89882f92f429     core // SRC=fxtagtracker.cpp MJ= MN=
#typev  fxtagtracker_cpp267 13     "%0Possibly Abandonded ref on object %10!p! tag %11!p! (%12!s! @ %13!d!).  Is benign unless there are other outstanding leaked references."      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGDEVICE FUNC=FxTagTracker::CheckForAbandondedTags
{
m_OwningObject, ItemPtr -- 10
current->Tag, ItemPtr -- 11
current->File, ItemString -- 12
current->Line, ItemLong -- 13
}
#typev  fxtagtracker_cpp247 12     "%0Abandonded ref on object %10!p! tag %11!p! (%12!s! @ %13!d!)"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxTagTracker::CheckForAbandondedTags
{
m_OwningObject, ItemPtr -- 10
current->Tag, ItemPtr -- 11
current->File, ItemString -- 12
current->Line, ItemLong -- 13
}
#typev  fxtagtracker_cpp222 11     "%0Dropped references on a tag tracker, show references with: !wdftagtracker %10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxTagTracker::CheckForAbandondedTags
{
this, ItemPtr -- 10
}
#typev  fxtagtracker_cpp170 10     "%0releasing tag %10!p! on object %11!p! that was not acquired, !wdftagtracker %12!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxTagTracker::UpdateTagHistory
{
Tag, ItemPtr -- 10
m_OwningObject, ItemPtr -- 11
this, ItemPtr -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
387c0fb0-efc5-5121-8339-c63226bf1051     usb // SRC=FxUsbInterface.cpp MJ= MN=
#typev  FxUsbInterface_cpp868 13     "%0WDFUSBINTERFACE %10!p! not configured, cannot retrieve configured setting index"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbInterface::GetConfiguredSettingIndex
{
GetHandle(), ItemPtr -- 10
}
#typev  FxUsbInterface_cpp294 12     "%0Interface Number %10!d! does not have contiguous alternate settings,expected consecutive %11!d! settings, but alt setting %12!d! missing %13!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbInterface::CreateSettings
{
m_InterfaceNumber, ItemLong -- 10
m_NumSettings, ItemLong -- 11
i, ItemLong -- 12
STATUS_INVALID_DEVICE_REQUEST, ItemNTSTATUS -- 13
}
#typev  FxUsbInterface_cpp272 11     "%0Interface Number %10!d! does not have contiguous alternate settings,expected %11!d! settings, found alt setting %12!d!, %13!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbInterface::CreateSettings
{
pDescriptor->bInterfaceNumber, ItemLong -- 10
m_NumSettings, ItemLong -- 11
pDescriptor->bAlternateSetting, ItemLong -- 12
STATUS_INVALID_DEVICE_REQUEST, ItemNTSTATUS -- 13
}
#typev  FxUsbInterface_cpp244 10     "%0Could not allocate memory for %10!d! settings for bInterfaceNumber %11!d! (Protocol %12!d!, Class %13!d!, SubClass %14!d!), %15!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbInterface::CreateSettings
{
m_NumSettings, ItemLong -- 10
m_InterfaceNumber, ItemLong -- 11
m_Protocol, ItemLong -- 12
m_Class, ItemLong -- 13
m_SubClass, ItemLong -- 14
STATUS_INSUFFICIENT_RESOURCES, ItemNTSTATUS -- 15
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
3a2810ba-3c2c-1645-b266-921ead3d5faa     core // SRC=globals.cpp MJ= MN=
#typev  globals_cpp654 10     "%0Initialize globals for %10!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDRIVER FUNC=FxInitialize
{
RegistryPath, ItemPWString -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
3a28d771-568f-f803-c0ee-319d5eb4a7f6     wmi // SRC=FxWmiAPI.cpp MJ= MN=
#typev  FxWmiAPI_cpp113 12     "%0InstanceConfig %10!p! Provider %11!p! and ProviderConfig %12!p! are both not NULL, only one can be, %13!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfWmiInstanceCreate
{
InstanceConfig, ItemPtr -- 10
InstanceConfig->Provider, ItemPtr -- 11
InstanceConfig->ProviderConfig, ItemPtr -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxWmiAPI_cpp102 11     "%0InstanceConfig %10!p! Provider and ProviderConfig are both NULL, only one can be, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfWmiInstanceCreate
{
InstanceConfig, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxWmiAPI_cpp91 10     "%0Expected InstanceConfig Size %10!d!, got %11!d!, %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfWmiInstanceCreate
{
InstanceConfig->Size, ItemLong -- 10
sizeof(*InstanceConfig), ItemLong -- 11
status, ItemNTSTATUS -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
3c783f7b-3417-9362-e9f6-c9dccad18eb7     pnp // SRC=InterruptObject.cpp MJ= MN=
#typev  InterruptObject_cpp809 15     "%0EvtInterruptDisable WDFDEVICE %10!p!, WDFINTERRUPT %11!p!, PKINTERRUPT %12!p! returned %13!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterrupt::Disconnect
{
m_Device->GetHandle(), ItemPtr -- 10
GetHandle(), ItemPtr -- 11
m_Interrupt, ItemPtr -- 12
status, ItemNTSTATUS -- 13
}
#typev  InterruptObject_cpp1093 16     "%0Force disconnect called on WDFDEVICE %10!p!, WDFINTERRUPT %11!p!, PKINTERRUPT %12!p!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxInterrupt::ForceDisconnect
{
m_Device->GetHandle(), ItemPtr -- 10
GetHandle(), ItemPtr -- 11
m_Interrupt, ItemPtr -- 12
}
#typev  InterruptObject_cpp711 14     "%0EvtInterruptEnable WDFDEVICE %10!p!, WDFINTERRUPT %11!p!, PKINTERRUPT %12!p! returned %13!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterrupt::Connect
{
m_Device->GetHandle(), ItemPtr -- 10
GetHandle(), ItemPtr -- 11
m_Interrupt, ItemPtr -- 12
status, ItemNTSTATUS -- 13
}
#typev  InterruptObject_cpp687 13     "%0IoConnectInterrupt(Ex) Failed %10!s!, vector 0x%11!x!, IRQL 0x%12!x!, Mode 0x%13!x!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterrupt::Connect
{
status, ItemNTSTATUS -- 10
m_InterruptInfo.Vector, ItemLong -- 11
m_InterruptInfo.Irql, ItemLong -- 12
m_InterruptInfo.Mode, ItemLong -- 13
}
#typev  InterruptObject_cpp1126 17     "%0Force connect called on WDFDEVICE %10!p!, WDFINTERRUPT %11!p!, PKINTERRUPT %12!p!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxInterrupt::ForceReconnect
{
m_Device->GetHandle(), ItemPtr -- 10
GetHandle(), ItemPtr -- 11
m_Interrupt, ItemPtr -- 12
}
#typev  InterruptObject_cpp199 12     "%0Could not assign parent %10!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterrupt::Initialize
{
status, ItemNTSTATUS -- 10
}
#typev  InterruptObject_cpp122 11     "%0Destroy Interrupt destroyed without calling WdfObjectDelete, or by Framework processing DeviceRemove. Possible reference count problem?"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterrupt::~FxInterrupt
{
}
#typev  InterruptObject_cpp114 10     "%0Destroy Interrupt destroyed without calling WdfObjectDelete, or by Framework processing DeviceRemove. Possible reference count problem?"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxInterrupt::~FxInterrupt
{
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
3d18ad95-580b-5e1c-166d-7b02c84adbbd     base // SRC=FxDmaTransaction.cpp MJ= MN=
#typev  FxDmaTransaction_cpp1223 38     "%0FlushAdapterBuffers on WDFDMATRANSACTION %10!p! failed, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaPacketTransaction::TransferCompleted
{
GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxDmaTransaction_cpp1196 37     "%0Exit WDFDMATRANSACTION %10!p!, status %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDMA FUNC=FxDmaPacketTransaction::StageTransfer
{
GetHandle(), ItemPtr -- 10
STATUS_SUCCESS, ItemNTSTATUS -- 11
}
#typev  FxDmaTransaction_cpp1143 36     "%0Enter WDFDMATRANSACTION %10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDMA FUNC=FxDmaPacketTransaction::StageTransfer
{
GetHandle(), ItemPtr -- 10
}
#typev  FxDmaTransaction_cpp1098 35     "%0Enter WDFDMATRANSACTION %10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDMA FUNC=FxDmaPacketTransaction::_AdapterControl
{
pDmaTransaction->GetHandle(), ItemPtr -- 10
}
#typev  FxDmaTransaction_cpp728 29     "%0Exit WDFDMATRANSACTION %10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDMA FUNC=FxDmaScatterGatherTransaction::_AdapterListControl
{
pDmaTransaction->GetHandle(), ItemPtr -- 10
}
#typev  FxDmaTransaction_cpp697 28     "%0Enter WDFDMATRANSACTION %10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDMA FUNC=FxDmaScatterGatherTransaction::_AdapterListControl
{
pDmaTransaction->GetHandle(), ItemPtr -- 10
}
#typev  FxDmaTransaction_cpp670 27     "%0Exit WDFDMATRANSACTION %10!p!, status %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDMA FUNC=FxDmaScatterGatherTransaction::StageTransfer
{
GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxDmaTransaction_cpp658 26     "%0Build or GetScatterGatherList failed for WDFDMATRANSACTION %10!p!, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaScatterGatherTransaction::StageTransfer
{
GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxDmaTransaction_cpp626 25     "%0WDFDMATRANSACTION %10!p! for MDL %11!p! is more fragmented (%12!d!) than the limit (%13!I64d!) specified by the driver, %14!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaScatterGatherTransaction::StageTransfer
{
GetHandle(), ItemPtr -- 10
m_CurrentFragmentMdl, ItemPtr -- 11
mapRegistersRequired, ItemLong -- 12
m_DmaEnabler->m_MaxSGElements, ItemLongLong -- 13
status, ItemNTSTATUS -- 14
}
#typev  FxDmaTransaction_cpp585 24     "%0Enter WDFDMATRANSACTION %10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDMA FUNC=FxDmaScatterGatherTransaction::StageTransfer
{
GetHandle(), ItemPtr -- 10
}
#typev  FxDmaTransaction_cpp525 22     "%0CalculateScatterGatherList failed for WDFDMATRANSACTION %10!p!, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaScatterGatherTransaction::InitializeResources
{
GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxDmaTransaction_cpp535 23     "%0WDFDMATRANSACTION %10!p! for MDL %11!p! is more fragmented (%12!d!) than the limit (%13!I64d!) specified by the driver, %14!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaScatterGatherTransaction::InitializeResources
{
GetHandle(), ItemPtr -- 10
nextMdl, ItemPtr -- 11
mapRegistersRequired, ItemLong -- 12
m_DmaEnabler->m_MaxSGElements, ItemLongLong -- 13
status, ItemNTSTATUS -- 14
}
#typev  FxDmaTransaction_cpp322 18     "%0Exit WDFDMATRANSACTION %10!p! Transitioned(%11!s!)"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDMA FUNC=FxDmaTransactionBase::DmaCompleted
{
GetHandle(), ItemPtr -- 10
hasTransitioned, ItemListByte(FALSE,TRUE) -- 11
}
#typev  FxDmaTransaction_cpp233 17     "%0WDFDMATRANSACTION %10!p! Transfered Length %11!I64d! can't be more than the length asked to transfer %12!I64d! %13!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaTransactionBase::DmaCompleted
{
GetHandle(), ItemPtr -- 10
TransferredLength, ItemLongLong -- 11
m_CurrentFragmentLength, ItemLongLong -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxDmaTransaction_cpp221 16     "%0WDFDMATRANSACTION %10!p! state %11!s! is invalid"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaTransactionBase::DmaCompleted
{
GetHandle(), ItemPtr -- 10
m_State, ItemListLong(FxDmaTransactionStateInvalid,FxDmaTransactionStateCreated,FxDmaTransactionStateInitialized,FxDmaTransactionStateTransfer,FxDmaTransactionStateTransferCompleted,FxDmaTransactionStateTransferFailed,FxDmaTransactionStateReleased,FxDmaTransactionStateDeleted) -- 11
}
#typev  FxDmaTransaction_cpp212 15     "%0Enter WDFDMATRANSACTION %10!p!, lenght %11!d!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDMA FUNC=FxDmaTransactionBase::DmaCompleted
{
GetHandle(), ItemPtr -- 10
(ULONG)TransferredLength, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxDmaTransaction_cpp1068 34     "%0Exit WDFDMATRANSACTION %10!p!, status %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDMA FUNC=FxDmaPacketTransaction::StartTransfer
{
GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxDmaTransaction_cpp1059 33     "%0AllocateAdapterChannel failed for WDFDMATRANSACTION %10!p!, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaPacketTransaction::StartTransfer
{
GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxDmaTransaction_cpp1037 32     "%0Only one transaction can be queued at one time on a packet based WDFDMAENABLER %10!p! %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaPacketTransaction::StartTransfer
{
m_DmaEnabler->GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxDmaTransaction_cpp1030 31     "%0Enter WDFDMATRANSACTION %10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDMA FUNC=FxDmaPacketTransaction::StartTransfer
{
GetHandle(), ItemPtr -- 10
}
#typev  FxDmaTransaction_cpp346 19     "%0WDFDMATRANSACTION %10!p! is already released, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGDMA FUNC=FxDmaTransactionBase::ReleaseForReuse
{
GetHandle(), ItemPtr -- 10
STATUS_SUCCESS, ItemNTSTATUS -- 11
}
#typev  FxDmaTransaction_cpp146 13     "%0Exit WDFDMATRANSACTION %10!p!, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDMA FUNC=FxDmaTransactionBase::Initialize
{
GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxDmaTransaction_cpp110 12     "%0WDFDMATRANSACTION %10!p! state %11!s! is invalid"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaTransactionBase::Initialize
{
GetHandle(), ItemPtr -- 10
m_State, ItemListLong(FxDmaTransactionStateInvalid,FxDmaTransactionStateCreated,FxDmaTransactionStateInitialized,FxDmaTransactionStateTransfer,FxDmaTransactionStateTransferCompleted,FxDmaTransactionStateTransferFailed,FxDmaTransactionStateReleased,FxDmaTransactionStateDeleted) -- 11
}
#typev  FxDmaTransaction_cpp102 11     "%0Enter WDFDMATRANSACTION %10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDMA FUNC=FxDmaTransactionBase::Initialize
{
GetHandle(), ItemPtr -- 10
}
#typev  FxDmaTransaction_cpp976 30     "%0Could not allocate memory for WDFTRANSACTION, %10!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaPacketTransaction::_Create
{
status, ItemNTSTATUS -- 10
}
#typev  FxDmaTransaction_cpp435 21     "%0Unable to allocate memory for SG List, WDFDMATRANSACTION %10!p!, %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaScatterGatherTransaction::_Create
{
pTransaction->GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxDmaTransaction_cpp414 20     "%0Could not allocate memory for WDFTRANSACTION, %10!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaScatterGatherTransaction::_Create
{
status, ItemNTSTATUS -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxDmaTransaction_cpp166 14     "%0WDFDMATRANSACTION %10!p! state %11!s! is invalid"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaTransactionExecute
{
GetHandle(), ItemPtr -- 10
m_State, ItemListLong(FxDmaTransactionStateInvalid,FxDmaTransactionStateCreated,FxDmaTransactionStateInitialized,FxDmaTransactionStateTransfer,FxDmaTransactionStateTransferCompleted,FxDmaTransactionStateTransferFailed,FxDmaTransactionStateReleased,FxDmaTransactionStateDeleted) -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
401fdef6-edad-23f0-451f-3b6c87ef6dc6     pnp // SRC=fxpkgfdo.cpp MJ= MN=
#typev  fxpkgfdo_cpp986 20     "%0Exiting %10!s!"      //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgFdo::_PnpQueryPnpDeviceState
{
status, ItemNTSTATUS -- 10
}
#typev  fxpkgfdo_cpp980 19     "%0Lower stack returned error for query pnp device state, %10!s!"      //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgFdo::_PnpQueryPnpDeviceState
{
status, ItemNTSTATUS -- 10
}
#typev  fxpkgfdo_cpp957 18     "%0Entering QueryPnpDeviceState handler"      //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgFdo::_PnpQueryPnpDeviceState
{
}
#typev  fxpkgfdo_cpp734 15     "%0Exiting QueryCapabilities handler %10!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgFdo::PnpQueryCapabilities
{
status, ItemNTSTATUS -- 10
}
#typev  fxpkgfdo_cpp609 14     "%0Entering QueryCapabilities handler"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgFdo::PnpQueryCapabilities
{
}
#typev  fxpkgfdo_cpp565 13     "%0Exiting QueryInterface handler, %10!s!"      //   GLOBALS=pThis->GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgFdo::_PnpQueryInterface
{
status, ItemNTSTATUS -- 10
}
#typev  fxpkgfdo_cpp548 12     "%0Entering QueryInterface handler"      //   GLOBALS=pThis->GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgFdo::_PnpQueryInterface
{
}
#typev  fxpkgfdo_cpp1684 24     "%0PNP start failed with %10!s!"      //   GLOBALS=pThis->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgFdo::_PnpStartDeviceCompletionRoutine
{
irp.GetStatus(), ItemNTSTATUS -- 10
}
#typev  fxpkgfdo_cpp1247 23     "%0PNP start preprocessing failed with %10!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgFdo::PnpSendStartDeviceDownTheStackOverload
{
status, ItemNTSTATUS -- 10
}
#typev  fxpkgfdo_cpp1064 22     "%0Could not convert object to handle"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgFdo::CreateDefaultDeviceList
{
}
#typev  fxpkgfdo_cpp1049 21     "%0No memory for WDFCHILDLIST handle"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgFdo::CreateDefaultDeviceList
{
}
#typev  fxpkgfdo_cpp923 17     "%0Exiting FilterResourceRequirements handler, %10!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgFdo::PnpFilterResourceRequirements
{
status, ItemNTSTATUS -- 10
}
#typev  fxpkgfdo_cpp779 16     "%0Entering FilterResourceRequirements handler"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgFdo::PnpFilterResourceRequirements
{
}
#typev  fxpkgfdo_cpp512 11     "%0Exiting QueryDeviceRelations handler, status %10!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgFdo::_PnpQueryDeviceRelations
{
status, ItemNTSTATUS -- 10
}
#typev  fxpkgfdo_cpp459 10     "%0Entering QueryDeviceRelations handler, type %10!d!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgFdo::_PnpQueryDeviceRelations
{
type, ItemLong -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
4089cfa5-ec4a-ea0b-3346-e0c989112950     core // SRC=FxWorkItem.cpp MJ= MN=
#typev  FxWorkItem_cpp490 14     "%0Calling WdfWorkItemFlush from within the WDFWORKITEM %10!p! callback, PRKTHREAD %11!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxWorkItem::FlushAndWait
{
GetHandle(), ItemPtr -- 10
m_WorkItemThread, ItemPtr -- 11
}
#typev  FxWorkItem_cpp287 13     "%0WorkItem 0x%10!p! already enqueued IoWorkItem 0x%11!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxWorkItem::Enqueue
{
this, ItemPtr -- 10
m_WorkItem, ItemPtr -- 11
}
#typev  FxWorkItem_cpp70 10     "%0WDFWORKITEM %10!p! destroyed without calling WdfObjectDelete, or by Framework processing DeviceRemove.  Possible reference count problem?"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxWorkItem::~FxWorkItem
{
GetObjectHandleUnchecked(), ItemPtr -- 10
}
#typev  FxWorkItem_cpp212 12     "%0Could not allocate IoWorkItem, %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxWorkItem::Initialize
{
status, ItemNTSTATUS -- 10
}
#typev  FxWorkItem_cpp194 11     "%0ParentObject %10!p! can not automatically synchronize callbacks with a WorkItem since it is not configured for passive level callback constraints.  Use a WDFDPC instead, or disable AutomaticSynchronization Disable AutomaticSynchronization.  %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxWorkItem::Initialize
{
Attributes->ParentObject, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
41528b12-d894-6e5b-72e2-8cda5101cba0     core // SRC=FxObjectAPI.cpp MJ= MN=
#typev  FxObjectAPI_cpp294 12     "%0Attempt to Delete an Object Which does not allow WdfDeleteObject Handle 0x%10!p!, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfObjectDelete
{
Object, ItemPtr -- 10
STATUS_CANNOT_DELETE, ItemNTSTATUS -- 11
}
#typev  FxObjectAPI_cpp258 11     "%0Invalid to call on WDFOBJECT 0x%10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfObjectReleaseLock
{
Object, ItemPtr -- 10
}
#typev  FxObjectAPI_cpp204 10     "%0Invalid to call on WDFOBJECT 0x%10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfObjectAcquireLock
{
Object, ItemPtr -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
41c3d5d1-1892-0b12-704c-7fba38cb215a     io // SRC=FxPkgIo.cpp MJ= MN=
#typev  FxPkgIo_cpp692 24     "%0I/O Package already has a default queue. SetFilter must be called before creating a default queue %10!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxDevice::SetFilter
{
STATUS_INVALID_DEVICE_REQUEST, ItemNTSTATUS -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxPkgIo_cpp307 16     "%0Default Queue Already Configured for FxPkgIo 0x%10!p!, WDFDEVICE 0x%11!p! %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgIo::InitializeDefaultQueue
{
this, ItemPtr -- 10
Device->GetHandle(), ItemPtr -- 11
STATUS_UNSUCCESSFUL, ItemNTSTATUS -- 12
}
#typev  FxPkgIo_cpp545 21     "%0%10!s! is already configured forWDFQUEUE 0x%11!p!, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgIo::ConfigureForwarding
{
RequestType, ItemEnum(_WDF_REQUEST_TYPE) -- 10
TargetQueue->GetObjectHandle(), ItemPtr -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxPkgIo_cpp531 20     "%0Default WDFQUEUE 0x%10!p! cannot be configured to dispatch specific type of request, %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgIo::ConfigureForwarding
{
TargetQueue->GetObjectHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxPkgIo_cpp515 19     "%0Must have EvtIoDefault or %10!s! specific dispatch event registered for WDFQUEUE 0x%11!p!, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgIo::ConfigureForwarding
{
RequestType, ItemEnum(_WDF_REQUEST_TYPE) -- 10
TargetQueue->GetObjectHandle(), ItemPtr -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxPkgIo_cpp79 11     "%0Destroyed FxPkgIo 0x%10!p!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxPkgIo::`scalar deleting destructor'
{
this, ItemPtr -- 10
}
#typev  FxPkgIo_cpp67 10     "%0Constructed FxPkgIo 0x%10!p!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxPkgIo::FxPkgIo
{
this, ItemPtr -- 10
}
#typev  FxPkgIo_cpp210 15     "%0No queue configured for WDFDEVICE 0x%10!p!, failing WDFREQUEST 0x%11!p!, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgIo::Dispatch
{
m_Device->GetHandle(), ItemPtr -- 10
pRequest->GetHandle(), ItemPtr -- 11
Status, ItemNTSTATUS -- 12
}
#typev  FxPkgIo_cpp131 14     "%0FxPkgIo::Dispatch Could not create WDFREQUEST, %10!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgIo::Dispatch
{
Status, ItemNTSTATUS -- 10
}
#typev  FxPkgIo_cpp120 13     "%0FxPkgIo::Dispatch Could not create WDFREQUEST for filter WDFDEVICE 0x%10!p!, but there is no WDFQUEUE for IRP MJ code 0x%11!x!, sending down stack"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIO FUNC=FxPkgIo::Dispatch
{
m_Device->GetHandle(), ItemPtr -- 10
irpStack->MajorFunction, ItemLong -- 11
}
#typev  FxPkgIo_cpp97 12     "%0!devobj 0x%10!p! %11!s!, IRP_MN %12!x!, IRP 0x%13!p!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxPkgIo::Dispatch
{
m_Device->GetDeviceObject(), ItemPtr -- 10
irpStack->MajorFunction, ItemListByte(IRP_MJ_CREATE,IRP_MJ_CREATE_NAMED_PIPE,IRP_MJ_CLOSE,IRP_MJ_READ,IRP_MJ_WRITE,IRP_MJ_QUERY_INFORMATION,IRP_MJ_SET_INFORMATION,IRP_MJ_QUERY_EA,IRP_MJ_SET_EA,IRP_MJ_FLUSH_BUFFERS,IRP_MJ_QUERY_VOLUME_INFORMATION,IRP_MJ_SET_VOLUME_INFORMATION,IRP_MJ_DIRECTORY_CONTROL,IRP_MJ_FILE_SYSTEM_CONTROL,IRP_MJ_DEVICE_CONTROL,IRP_MJ_INTERNAL_DEVICE_CONTROL,IRP_MJ_SHUTDOWN,IRP_MJ_LOCK_CONTROL,IRP_MJ_CLEANUP,IRP_MJ_CREATE_MAILSLOT,IRP_MJ_QUERY_SECURITY,IRP_MJ_SET_SECURITY,IRP_MJ_POWER,IRP_MJ_SYSTEM_CONTROL,IRP_MJ_DEVICE_CHANGE,IRP_MJ_QUERY_QUOTA,IRP_MJ_SET_QUOTA,IRP_MJ_PNP) -- 11
irpStack->MinorFunction, ItemLong -- 12
Irp, ItemPtr -- 13
}
#typev  FxPkgIo_cpp972 25     "%0Currently framework allow flushing of queues by fileobject on cleanup only at PASSIVE_LEVEL"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgIo::FlushAllQueuesByFileObject
{
}
#typev  FxPkgIo_cpp396 18     "%0No queue configured for WDFDEVICE 0x%10!p!, failing WDFREQUEST 0x%11!p! %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgIo::EnqueueRequest
{
Device->GetHandle(), ItemPtr -- 10
pRequest->GetObjectHandle(), ItemPtr -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxPkgIo_cpp358 17     "%0WDFREQUEST 0x%10!p!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxPkgIo::EnqueueRequest
{
pRequest->GetObjectHandle(), ItemPtr -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxPkgIo_cpp611 23     "%0Attributes->ParentObject 0x%10!p! ancestor is WDFDEVICE %11!p!, but not the same WDFDEVICE 0x%12!p! passed to WdfIoQueueCreate, %13!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgIo::CreateQueue
{
QueueAttributes->ParentObject, ItemPtr -- 10
pSearchDevice->GetHandle(), ItemPtr -- 11
m_Device->GetHandle(), ItemPtr -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxPkgIo_cpp600 22     "%0QueueAttributes->ParentObject 0x%10!p! must have WDFDEVICE as an eventual ancestor, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgIo::CreateQueue
{
QueueAttributes->ParentObject, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#enumv _WDF_REQUEST_TYPE
{
WdfRequestTypeCreate,0x0
WdfRequestTypeCreateNamedPipe,0x1
WdfRequestTypeClose,0x2
WdfRequestTypeRead,0x3
WdfRequestTypeWrite,0x4
WdfRequestTypeQueryInformation,0x5
WdfRequestTypeSetInformation,0x6
WdfRequestTypeQueryEA,0x7
WdfRequestTypeSetEA,0x8
WdfRequestTypeFlushBuffers,0x9
WdfRequestTypeQueryVolumeInformation,0xA
WdfRequestTypeSetVolumeInformation,0xB
WdfRequestTypeDirectoryControl,0xC
WdfRequestTypeFileSystemControl,0xD
WdfRequestTypeDeviceControl,0xE
WdfRequestTypeDeviceControlInternal,0xF
WdfRequestTypeShutdown,0x10
WdfRequestTypeLockControl,0x11
WdfRequestTypeCleanup,0x12
WdfRequestTypeCreateMailSlot,0x13
WdfRequestTypeQuerySecurity,0x14
WdfRequestTypeSetSecurity,0x15
WdfRequestTypePower,0x16
WdfRequestTypeSystemControl,0x17
WdfRequestTypeDeviceChange,0x18
WdfRequestTypeQueryQuota,0x19
WdfRequestTypeSetQuota,0x1A
WdfRequestTypePnp,0x1B
WdfRequestTypeOther,0x1C
WdfRequestTypeUsb,0x40
WdfRequestTypeNoFormat,0xFF
WdfRequestTypeMax,0x100
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
444ad6dd-6456-9d34-71c0-771fce5a473a     core // SRC=FxIrpQueue.cpp MJ= MN=
#typev  FxIrpQueue_cpp884 10     "%0Irp 0x%10!p! on Queue 0x%11!p! Cancelled"      //   GLOBALS=p->m_LockObject->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxIrpQueue::WdmCancelRoutineInternal
{
Irp, ItemPtr -- 10
p, ItemPtr -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
44b19c89-246c-b0ce-790a-26821f056029     pnp // SRC=FxPkgPnp.cpp MJ= MN=
#typev  FxPkgPnp_cpp782 19     "%0WDFDEVICE %10!p! could not allocate PNP_BUS_INFORMATION string,  %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPdo::_PnpQueryBusInformation
{
m_Device->GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxPkgPnp_cpp4450 56     "%0Removing DmaEnabler %10!p!, WDFDMAENABLER %11!p!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::RemoveDmaEnabler
{
Enabler, ItemPtr -- 10
Enabler->GetObjectHandle(), ItemPtr -- 11
}
#typev  FxPkgPnp_cpp4438 55     "%0Adding DmaEnabler %10!p!, WDFDMAENABLER %11!p!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::AddDmaEnabler
{
Enabler, ItemPtr -- 10
Enabler->GetObjectHandle(), ItemPtr -- 11
}
#typev  FxPkgPnp_cpp1133 24     "%0Invalid special file type %10!x!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::SetSpecialFileSupport
{
FileType, ItemLong -- 10
}
#typev  FxPkgPnp_cpp4541 57     "%0The driver failed to return from a callback routine in a reasonable period of time.  This prevented the machine from going to sleep or from hibernating.  The machine crashed because that was the best way to get data about the cause of the crash into a minidump file."      //   GLOBALS=pDevice->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxWatchdog::_WatchdogDpc
{
}
#typev  FxPkgPnp_cpp4354 53     "%0Adding FxChildList %10!p!, WDFCHILDLIST %11!p!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::AddChildList
{
List, ItemPtr -- 10
List->GetHandle(), ItemPtr -- 11
}
#typev  FxPkgPnp_cpp3524 40     "%0Not saving wake settings for WDFDEVICE %10!p! due to system power transition"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::SaveState
{
m_Device->GetHandle(), ItemPtr -- 10
}
#typev  FxPkgPnp_cpp2964 35     "%0WDFINTERRUPT %10!p! failed to disconnect, %11!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::NotifyResourceObjectsDx
{
pInterrupt->GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxPkgPnp_cpp1814 28     "%0WDFDEVICE %10!p!, !devobj %11!p! waiting for pwr state machine to finish"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::CleanupStateMachines
{
m_Device->GetHandle(), ItemPtr -- 10
m_Device->GetDeviceObject(), ItemPtr -- 11
}
#typev  FxPkgPnp_cpp1798 27     "%0WDFDEVICE %10!p!, !devobj %11!p! waiting for pwr pol state machine to finish"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::CleanupStateMachines
{
m_Device->GetHandle(), ItemPtr -- 10
m_Device->GetDeviceObject(), ItemPtr -- 11
}
#typev  FxPkgPnp_cpp1775 26     "%0WDFDEVICE %10!p!, !devobj %11!p! waiting for pnp state machine to finish"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::CleanupStateMachines
{
m_Device->GetHandle(), ItemPtr -- 10
m_Device->GetDeviceObject(), ItemPtr -- 11
}
#typev  FxPkgPnp_cpp1217 25     "%0WDFDEVICE %10!p! could not allocate IRP to send QI to parent !devobj %11!p!, %12!s!"      //   GLOBALS=Device->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=PnpPassThroughQI
{
Device->GetHandle(), ItemPtr -- 10
pTopOfStack, ItemPtr -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxPkgPnp_cpp917 20     "%0WDFDEVICE %10!p! could not allocate device relations for type %11!d! string,  %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::HandleQueryDeviceRelations
{
m_Device->GetHandle(), ItemPtr -- 10
type, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxPkgPnp_cpp465 11     "%0!devobj 0x%10!p! IRP_MJ_POWER, Minor 0x%11!x!  IRP 0x%12!p!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::Dispatch
{
m_Device->GetDeviceObject(), ItemPtr -- 10
irpStack->MinorFunction, ItemLong -- 11
Irp, ItemPtr -- 12
}
#typev  FxPkgPnp_cpp444 10     "%0!devobj 0x%10!p! IRP_MJ_PNP, %11!s! IRP 0x%12!p!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::Dispatch
{
m_Device->GetDeviceObject(), ItemPtr -- 10
irpStack->MinorFunction, ItemListByte(IRP_MN_START_DEVICE,IRP_MN_QUERY_REMOVE_DEVICE,IRP_MN_REMOVE_DEVICE,IRP_MN_CANCEL_REMOVE_DEVICE,IRP_MN_STOP_DEVICE,IRP_MN_QUERY_STOP_DEVICE,IRP_MN_CANCEL_STOP_DEVICE,IRP_MN_QUERY_DEVICE_RELATIONS,IRP_MN_QUERY_INTERFACE,IRP_MN_QUERY_CAPABILITIES,IRP_MN_QUERY_RESOURCES,IRP_MN_QUERY_RESOURCE_REQUIREMENTS,IRP_MN_QUERY_DEVICE_TEXT,IRP_MN_FILTER_RESOURCE_REQUIREMENTS,IRP_MN_PNP_14,IRP_MN_READ_CONFIG,IRP_MN_WRITE_CONFIG,IRP_MN_EJECT,IRP_MN_SET_LOCK,IRP_MN_QUERY_ID,IRP_MN_QUERY_PNP_DEVICE_STATE,IRP_MN_QUERY_BUS_INFORMATION,IRP_MN_DEVICE_USAGE_NOTIFICATION,IRP_MN_SURPRISE_REMOVAL) -- 11
Irp, ItemPtr -- 12
}
#typev  FxPkgPnp_cpp2907 34     "%0WDFINTERRUPT %10!p! failed to connect, %11!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::NotifyResourceObjectsD0
{
pInterrupt->GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxPkgPnp_cpp4333 52     "%0Could not allocate enum info for WDFDEVICE %10!p!, %11!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::AllocateEnumInfo
{
m_Device->GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxPkgPnp_cpp4597 59     "%0!devobj %10!p! could not initialize power thread, %11!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::CreatePowerThread
{
m_Device->GetDeviceObject(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxPkgPnp_cpp4586 58     "%0!devobj %10!p! could not allocate a thread for handling power requests, %11!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::CreatePowerThread
{
m_Device->GetDeviceObject(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxPkgPnp_cpp4208 51     "%0Could not allocate removal device list for WDFDEVICE %10!p!, %11!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::AddRemovalDevice
{
m_Device->GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxPkgPnp_cpp4141 50     "%0Could not allocate usage device list for WDFDEVICE %10!p!, %11!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::AddUsageDevice
{
m_Device->GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxPkgPnp_cpp4113 49     "%0After:  special count %10!d!, flags 0x%11!x!, device %12!p! (WDFDEVICE %13!p!)"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::ApplyUsageNotification
{
GetUsageCount(Type), ItemLong -- 10
newFlags, ItemLong -- 11
m_Device->GetDeviceObject(), ItemPtr -- 12
m_Device->GetHandle(), ItemPtr -- 13
}
#typev  FxPkgPnp_cpp4051 48     "%0Before:  type %10!d!, in path %11!d!, special count %12!d!, flags 0x%13!x!, device %14!p! (WDFDEVICE %15!p!), is pageable capable %16!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::ApplyUsageNotification
{
Type, ItemLong -- 10
InPath, ItemLong -- 11
GetUsageCount(Type), ItemLong -- 12
oldFlags, ItemLong -- 13
m_Device->GetDeviceObject(), ItemPtr -- 14
m_Device->GetHandle(), ItemPtr -- 15
m_Device->IsPowerPageableCapable(), ItemLong -- 16
}
#typev  FxPkgPnp_cpp3690 43     "%0Usage type %10!x! not supported, %11!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpDeviceUsageNotification
{
type, ItemLong -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxPkgPnp_cpp4024 47     "%0Exit %10!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpDeviceUsageNotification
{
status, ItemNTSTATUS -- 10
}
#typev  FxPkgPnp_cpp3847 46     "%0WDFDEVICE %10!p! could not allocate IRP to send usage notifications to related stacks, type %11!d!, inpath %12!d!, status %13!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpDeviceUsageNotification
{
m_Device->GetHandle(), ItemPtr -- 10
type, ItemLong -- 11
inPath, ItemLong -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxPkgPnp_cpp3731 45     "%0Exit %10!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpDeviceUsageNotification
{
status, ItemNTSTATUS -- 10
}
#typev  FxPkgPnp_cpp3707 44     "%0WDFDEVICE %10!p! could not allocate PIRP for parent !devobj %11!p! to send usage notification type %12!d!, inpath %13!d!, %14!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpDeviceUsageNotification
{
m_Device->GetHandle(), ItemPtr -- 10
pTopOfParentStack, ItemPtr -- 11
type, ItemLong -- 12
inPath, ItemLong -- 13
status, ItemNTSTATUS -- 14
}
#typev  FxPkgPnp_cpp3658 42     "%0type %10!x!, in path %11!x!, can support paging %12!x!, dump file %13!x!, hiber file %14!x!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpDeviceUsageNotification
{
type, ItemLong -- 10
inPath, ItemLong -- 11
IsUsageSupported(_SpecialTypeToUsage(WdfSpecialFilePaging)), ItemLong -- 12
IsUsageSupported(_SpecialTypeToUsage(WdfSpecialFileDump)), ItemLong -- 13
IsUsageSupported(_SpecialTypeToUsage(WdfSpecialFileHibernation)), ItemLong -- 14
}
#typev  FxPkgPnp_cpp3648 41     "%0Entering DeviceUsageNotification handler"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpDeviceUsageNotification
{
}
#typev  FxPkgPnp_cpp1950 29     "%0WDFDEVICE %10!p!, !devobj %11!p! waiting for remove event to finish processing"      //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::_PnpRemoveDevice
{
This->m_Device->GetHandle(), ItemPtr -- 10
This->m_Device->GetDeviceObject(), ItemPtr -- 11
}
#typev  FxPkgPnp_cpp1025 23     "%0Power Policy State Machine init failed, %10!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PostCreateDeviceInitialize
{
status, ItemNTSTATUS -- 10
}
#typev  FxPkgPnp_cpp1018 22     "%0Power State Machine init failed, %10!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PostCreateDeviceInitialize
{
status, ItemNTSTATUS -- 10
}
#typev  FxPkgPnp_cpp1011 21     "%0PnP State Machine init failed, %10!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PostCreateDeviceInitialize
{
status, ItemNTSTATUS -- 10
}
#typev  FxPkgPnp_cpp2242 33     "%0already have a ww irp %10!p!, failing new ww irp %11!p! with %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::DispatchWaitWake
{
oldIrp, ItemPtr -- 10
Irp->GetIrp(), ItemPtr -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxPkgPnp_cpp2129 32     "%0wait wake irp %10!p! already canceled"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::DispatchWaitWake
{
pIrp, ItemPtr -- 10
}
#typev  FxPkgPnp_cpp2100 31     "%0Failing wait wake irp %10!p! with %11!s! because wait wake irp %12!p! already pended"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::DispatchWaitWake
{
Irp->GetIrp(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
m_SharedPower.m_WaitWakeIrp, ItemPtr -- 12
}
#typev  FxPkgPnp_cpp2067 30     "%0Received wait wake power irp %10!p! on device %11!p!, but the irp was not requested by the device (the power policy owner)"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::DispatchWaitWake
{
Irp->GetIrp(), ItemPtr -- 10
m_Device->GetDeviceObject(), ItemPtr -- 11
}
#typev  FxPkgPnp_cpp735 18     "%0PDO %10!p!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::HandleQueryBusRelations
{
pRelations->Objects[i], ItemPtr -- 10
}
#typev  FxPkgPnp_cpp727 17     "%0PDO %10!p! PDO %11!p!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::HandleQueryBusRelations
{
pRelations->Objects[i], ItemPtr -- 10
pRelations->Objects[i+1], ItemPtr -- 11
}
#typev  FxPkgPnp_cpp718 16     "%0PDO %10!p! PDO %11!p! PDO %12!p!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::HandleQueryBusRelations
{
pRelations->Objects[i], ItemPtr -- 10
pRelations->Objects[i+1], ItemPtr -- 11
pRelations->Objects[i+2], ItemPtr -- 12
}
#typev  FxPkgPnp_cpp708 15     "%0PDO %10!p! PDO %11!p! PDO %12!p! PDO %13!p!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::HandleQueryBusRelations
{
pRelations->Objects[i], ItemPtr -- 10
pRelations->Objects[i+1], ItemPtr -- 11
pRelations->Objects[i+2], ItemPtr -- 12
pRelations->Objects[i+3], ItemPtr -- 13
}
#typev  FxPkgPnp_cpp696 14     "%0WDFDEVICE %10!p! returning %11!d! devices in relations %12!p!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::HandleQueryBusRelations
{
m_Device->GetHandle(), ItemPtr -- 10
pRelations->Count, ItemLong -- 11
pRelations, ItemPtr -- 12
}
#typev  FxPkgPnp_cpp686 13     "%0WDFDEVICE %10!p!, returning %11!s! from processing bus relations"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::HandleQueryBusRelations
{
m_Device->GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxPkgPnp_cpp652 12     "%0WDFDEVICE %10!p!, WDFCHILDLIST %11!p! returned %12!s! from processing bus relations"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::HandleQueryBusRelations
{
m_Device->GetHandle(), ItemPtr -- 10
pChildList->GetHandle(), ItemPtr -- 11
listStatus, ItemNTSTATUS -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxPkgPnp_cpp4366 54     "%0Removing FxChildList %10!p!, WDFCHILDLIST %11!p!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpEventRemovedCommonCode
{
List, ItemPtr -- 10
List->GetHandle(), ItemPtr -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
4b4340cf-c5bf-759e-063a-f5be28ab30a2     usb // SRC=FxUsbInterfaceAPI.cpp MJ= MN=
#typev  FxUsbInterfaceAPI_cpp245 11     "%0EndpointInfo Size %10!d! incorrect, expected %11!d!, %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbInterfaceGetEndpointInformation
{
EndpointInfo->Size, ItemLong -- 10
sizeof(WDF_USB_PIPE_INFORMATION), ItemLong -- 11
STATUS_INFO_LENGTH_MISMATCH, ItemNTSTATUS -- 12
}
#typev  FxUsbInterfaceAPI_cpp401 12     "%0PipeInfo Size %10!d! incorrect, expected %11!d!, %12!s!"      //   GLOBALS=GetFxDriverGlobals(DriverGlobals) LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbInterfaceGetConfiguredPipe
{
PipeInfo->Size, ItemLong -- 10
sizeof(WDF_USB_PIPE_INFORMATION), ItemLong -- 11
status, ItemNTSTATUS -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxUsbInterfaceAPI_cpp77 10     "%0Params size %10!d!, expected %11!d! %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbInterfaceSelectSetting
{
Params->Size, ItemLong -- 10
sizeof(WDF_USB_INTERFACE_SELECT_SETTING_PARAMS), ItemLong -- 11
status, ItemNTSTATUS -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
4b5c53a1-db50-8bcb-9308-d23d9c38e631     support // SRC=FxSpinLockAPI.cpp MJ= MN=
#typev  FxSpinLockAPI_cpp145 11     "%0WDFSPINLOCK %10!p! is associated with an interrupt, cannot be used for normal sync operations"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfSpinLockRelease
{
SpinLock, ItemPtr -- 10
}
#typev  FxSpinLockAPI_cpp112 10     "%0WDFSPINLOCK %10!p! is associated with an interrupt, cannot be used for normal sync operations"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfSpinLockAcquire
{
SpinLock, ItemPtr -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
4e96062c-a1ee-bbbb-f23c-37e5923e2b9f     core // SRC=FxFileObject.cpp MJ= MN=
#typev  FxFileObject_cpp389 18     "%0Did a different PFILE_OBJECT get passed to the request than was to IRP_MJ_CREATE?"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxFileObject::GetFileObjectFromWdm
{
}
#typev  FxFileObject_cpp385 17     "%0Could not locate WDFFILEOBJECT for PFILE_OBJECT 0x%10!p!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxFileObject::GetFileObjectFromWdm
{
pWdmFileObject, ItemPtr -- 10
}
#typev  FxFileObject_cpp371 16     "%0Since this is a serial port device, framework is using a workaround to allow this"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGDEVICE FUNC=FxFileObject::GetFileObjectFromWdm
{
}
#typev  FxFileObject_cpp366 15     "%0The PFILE_OBJECT 0x%10!p! in this request (cleanup/close) is different from the one specified in create request 0x%11!p!.This is bad!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGDEVICE FUNC=FxFileObject::GetFileObjectFromWdm
{
pWdmFileObject, ItemPtr -- 10
((f != NULL) ? f->m_FileObject : NULL), ItemPtr -- 11
}
#typev  FxFileObject_cpp289 14     "%0NULL passed for PFILE_OBJECT when FileObject support is requested in an I/O request"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxFileObject::GetFileObjectFromWdm
{
}
#typev  FxFileObject_cpp230 13     "%0Did a different PFILE_OBJECT get passed to IRP_MJ_CLOSE than did to IRP_MJ_CREATE?"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxFileObject::DestroyFileObject
{
}
#typev  FxFileObject_cpp226 12     "%0Could not find WDFFILEOBJECT for PFILE_OBJECT 0x%10!p!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxFileObject::DestroyFileObject
{
pWdmFileObject, ItemPtr -- 10
}
#typev  FxFileObject_cpp192 11     "%0FxFileObject::DestroyFileObject PFILE_OBJECT for IRP_MJ_CLOSE == NULL, *Possible Leak of FxFileObject*"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxFileObject::DestroyFileObject
{
}
#typev  FxFileObject_cpp98 10     "%0FxFileObject::CreateFileObject WdfFileObjectWdfCanUseFsContexts  is specified, but the Create IRP doesn't have a fileObject"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxFileObject::CreateFileObject
{
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
4f52dfe2-134d-04ae-29d9-54077143a384     pnp // SRC=PnpStateMachine.cpp MJ= MN=
#typev  PnpStateMachine_cpp1797 23     "%0Failing QueryStopDevice due to open special file counts (paging %10!d!, hiber %11!d!, dump %12!d!)"      //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpEventQueryStopStaticCheck
{
This->GetUsageCount(WdfSpecialFilePaging), ItemLong -- 10
This->GetUsageCount(WdfSpecialFileHibernation), ItemLong -- 11
This->GetUsageCount(WdfSpecialFileDump), ItemLong -- 12
}
#typev  PnpStateMachine_cpp1788 22     "%0Failing QueryStopDevice because the driver has indicated that it cannot be stopped, count %10!d!"      //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpEventQueryStopStaticCheck
{
This->m_DeviceStopCount, ItemLong -- 10
}
#typev  PnpStateMachine_cpp1597 19     "%0Failing QueryRemoveDevice due to open special file counts (paging %10!d!, hiber %11!d!, dump %12!d!)"      //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpEventQueryRemoveStaticCheck
{
This->GetUsageCount(WdfSpecialFilePaging), ItemLong -- 10
This->GetUsageCount(WdfSpecialFileHibernation), ItemLong -- 11
This->GetUsageCount(WdfSpecialFileDump), ItemLong -- 12
}
#typev  PnpStateMachine_cpp1588 18     "%0Failing QueryRemoveDevice because the driver has indicated that it cannot be stopped, count %10!d!"      //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpEventQueryRemoveStaticCheck
{
This->m_DeviceStopCount, ItemLong -- 10
}
#typev  PnpStateMachine_cpp2997 26     "%0EvtDeviceReleaseHardware failed with %10!s!"      //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpEventRestartReleaseHardware
{
status, ItemNTSTATUS -- 10
}
#typev  PnpStateMachine_cpp2428 25     "%0EvtDeviceReleaseHardware failed - %10!s!"      //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpEventStopped
{
status, ItemNTSTATUS -- 10
}
#typev  PnpStateMachine_cpp1700 20     "%0EvtDeviceQueryStop failed, %10!s!"      //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpEventQueryStopAskDriver
{
status, ItemNTSTATUS -- 10
}
#typev  PnpStateMachine_cpp1500 16     "%0EvtDeviceQueryRemove failed, %10!s!"      //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpEventQueryRemoveAskDriver
{
status, ItemNTSTATUS -- 10
}
#typev  PnpStateMachine_cpp1105 14     "%0!devobj 0x%10!p! entering PnP State %11!s! from %12!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpEnterNewState
{
m_Device->GetDeviceObject(), ItemPtr -- 10
newState, ItemEnum(_WDF_DEVICE_PNP_STATE) -- 11
currentState, ItemEnum(_WDF_DEVICE_PNP_STATE) -- 12
}
#typev  PnpStateMachine_cpp1029 13     "%0!devobj %10!p! current state %11!s!, policy event %12!s! is not a known dropped event, known dropped events are %13!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpProcessEventInner
{
m_Device->GetDeviceObject(), ItemPtr -- 10
m_Device->GetDevicePnpState(), ItemEnum(_WDF_DEVICE_PNP_STATE) -- 11
event, ItemEnum(FxPnpEvent) -- 12
entry->StateInfo.Bits.KnownDroppedEvents, ItemEnum(FxPnpEvent) -- 13
}
#typev  PnpStateMachine_cpp1020 12     "%0!devobj 0x%10!p! current pnp state %11!s! dropping event %12!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpProcessEventInner
{
m_Device->GetDeviceObject(), ItemPtr -- 10
m_Device->GetDevicePnpState(), ItemEnum(_WDF_DEVICE_PNP_STATE) -- 11
event, ItemEnum(FxPnpEvent) -- 12
}
#typev  PnpStateMachine_cpp1751 21     "%0StopIdle on WDFDEVICE %10!p! failed, %11!s!, failing query stop"      //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpEventQueryStopPending
{
This->m_Device->GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  PnpStateMachine_cpp1548 17     "%0StopIdle on WDFDEVICE %10!p! failed, %11!s!, failing query remove"      //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpEventQueryRemovePending
{
This->m_Device->GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  PnpStateMachine_cpp3745 31     "%0Exiting PnpMatchResources %10!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpMatchResources
{
status, ItemNTSTATUS -- 10
}
#typev  PnpStateMachine_cpp3648 30     "%0Could not allocate raw resource list %10!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpMatchResources
{
status, ItemNTSTATUS -- 10
}
#typev  PnpStateMachine_cpp3639 29     "%0Could not allocate cooked resource list %10!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpMatchResources
{
status, ItemNTSTATUS -- 10
}
#typev  PnpStateMachine_cpp3619 28     "%0Entering PnpMatchResources"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpMatchResources
{
}
#typev  PnpStateMachine_cpp3318 27     "%0EvtDevicePrepareHardware failed %10!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpPrepareHardware
{
status, ItemNTSTATUS -- 10
}
#typev  PnpStateMachine_cpp1379 15     "%0could not query caps for stack, %10!s!"      //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpEventHardwareAvailable
{
status, ItemNTSTATUS -- 10
}
#typev  PnpStateMachine_cpp819 11     "%0!devobj 0x%10!p! current pnp state %11!s! dropping event %12!s! because of a closed queue"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpProcessEvent
{
m_Device->GetDeviceObject(), ItemPtr -- 10
m_Device->GetDevicePnpState(), ItemEnum(_WDF_DEVICE_PNP_STATE) -- 11
Event, ItemEnum(FxPnpEvent) -- 12
}
#typev  PnpStateMachine_cpp803 10     "%0!devobj 0x%10!p! current pnp state %11!s! dropping event %12!s! because of a full queue"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpProcessEvent
{
m_Device->GetDeviceObject(), ItemPtr -- 10
m_Device->GetDevicePnpState(), ItemEnum(_WDF_DEVICE_PNP_STATE) -- 11
Event, ItemEnum(FxPnpEvent) -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  PnpStateMachine_cpp2216 24     "%0EvtDeviceReleaseHardware %10!p! failed, %11!s!"      //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PnpEventRemovingDisableInterfaces
{
This->m_Device->GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#enumv _WDF_DEVICE_PNP_STATE
{
WdfDevStatePnpInvalid,0x0
WdfDevStatePnpObjectCreated,0x100
WdfDevStatePnpCheckForDevicePresence,0x101
WdfDevStatePnpEjectFailed,0x102
WdfDevStatePnpEjectHardware,0x103
WdfDevStatePnpEjectedWaitingForRemove,0x104
WdfDevStatePnpInit,0x105
WdfDevStatePnpInitStarting,0x106
WdfDevStatePnpInitSurpriseRemoved,0x107
WdfDevStatePnpHardwareAvailable,0x108
WdfDevStatePnpEnableInterfaces,0x109
WdfDevStatePnpHardwareAvailablePowerPolicyFailed,0x10A
WdfDevStatePnpQueryRemoveAskDriver,0x10B
WdfDevStatePnpQueryRemovePending,0x10C
WdfDevStatePnpQueryRemoveStaticCheck,0x10D
WdfDevStatePnpQueriedRemoving,0x10E
WdfDevStatePnpQueryStopAskDriver,0x10F
WdfDevStatePnpQueryStopPending,0x110
WdfDevStatePnpQueryStopStaticCheck,0x111
WdfDevStatePnpQueryCanceled,0x112
WdfDevStatePnpRemoved,0x113
WdfDevStatePnpPdoRemoved,0x114
WdfDevStatePnpRemovedPdoWait,0x115
WdfDevStatePnpRemovedPdoSurpriseRemoved,0x116
WdfDevStatePnpRemovingDisableInterfaces,0x117
WdfDevStatePnpRestarting,0x118
WdfDevStatePnpStarted,0x119
WdfDevStatePnpStartedCancelStop,0x11A
WdfDevStatePnpStartedCancelRemove,0x11B
WdfDevStatePnpStartedRemoving,0x11C
WdfDevStatePnpStartingFromStopped,0x11D
WdfDevStatePnpStopped,0x11E
WdfDevStatePnpStoppedWaitForStartCompletion,0x11F
WdfDevStatePnpStartedStopping,0x120
WdfDevStatePnpSurpriseRemove,0x121
WdfDevStatePnpInitQueryRemove,0x122
WdfDevStatePnpInitQueryRemoveCanceled,0x123
WdfDevStatePnpFdoRemoved,0x124
WdfDevStatePnpRemovedWaitForChildren,0x125
WdfDevStatePnpQueriedSurpriseRemove,0x126
WdfDevStatePnpSurpriseRemoveIoStarted,0x127
WdfDevStatePnpFailedPowerDown,0x128
WdfDevStatePnpFailedIoStarting,0x129
WdfDevStatePnpFailedOwnHardware,0x12A
WdfDevStatePnpFailed,0x12B
WdfDevStatePnpFailedSurpriseRemoved,0x12C
WdfDevStatePnpFailedStarted,0x12D
WdfDevStatePnpFailedWaitForRemove,0x12E
WdfDevStatePnpFailedInit,0x12F
WdfDevStatePnpPdoInitFailed,0x130
WdfDevStatePnpRestart,0x131
WdfDevStatePnpRestartReleaseHardware,0x132
WdfDevStatePnpRestartHardwareAvailable,0x133
WdfDevStatePnpPdoRestart,0x134
WdfDevStatePnpFinal,0x135
WdfDevStatePnpNull,0x136
}
#enumv FxPnpEvent
{
PnpEventInvalid,0x0
PnpEventAddDevice,0x1
PnpEventStartDevice,0x2
PnpEventStartDeviceComplete,0x4
PnpEventStartDeviceFailed,0x8
PnpEventQueryRemove,0x10
PnpEventQueryStop,0x20
PnpEventCancelRemove,0x40
PnpEventCancelStop,0x80
PnpEventStop,0x100
PnpEventRemove,0x200
PnpEventSurpriseRemove,0x400
PnpEventEject,0x800
PnpEventPwrPolStopped,0x1000
PnpEventPwrPolStopFailed,0x2000
PnpEventPowerUpFailed,0x4000
PnpEventPowerDownFailed,0x8000
PnpEventParentRemoved,0x10000
PnpEventChildrenRemovalComplete,0x20000
PnpEventPwrPolStarted,0x40000
PnpEventPwrPolStartFailed,0x80000
PnpEventPending,0xDF4
PnpPriorityEventsMask,0xCF000
PnpEventNull,0xFF
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
60c7eef3-9f90-5887-4a07-e662a9c766bd     io // SRC=FxIoQueueApi.cpp MJ= MN=
#typev  FxIoQueueApi_cpp882 17     "%0Invalid WDF_REQUEST_PARAMETERS size %10!d! %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=imp_WdfIoQueueFindRequest
{
Parameters->Size, ItemLong -- 10
STATUS_INVALID_PARAMETER_4, ItemNTSTATUS -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxIoQueueApi_cpp224 16     "%0Created WDFQUEUE 0x%10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=imp_WdfIoQueueCreate
{
pQueue->GetObjectHandle(), ItemPtr -- 10
}
#typev  FxIoQueueApi_cpp212 15     "%0Create failed for FxPkgIo 0x%10!p!, WDFDEVICE 0x%11!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=imp_WdfIoQueueCreate
{
pPkgIo, ItemPtr -- 10
Device, ItemPtr -- 11
}
#typev  FxIoQueueApi_cpp192 14     "%0Queue Creation failed for WDFDEVICE 0x%10!p!, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=imp_WdfIoQueueCreate
{
Device, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxIoQueueApi_cpp177 13     "%0Default queue can only be created before the WDFDEVICE 0x%10!p! is started, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfIoQueueCreate
{
Device, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxIoQueueApi_cpp162 12     "%0Default queue can only be created before WdfControlDeviceFinishInitializingon the WDFDEVICE %10!p! is called %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfIoQueueCreate
{
Device, ItemPtr -- 10
STATUS_INVALID_DEVICE_STATE, ItemNTSTATUS -- 11
}
#typev  FxIoQueueApi_cpp129 11     "%0Parameter to receive WDFQUEUE handle is not optional for non default queue %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=imp_WdfIoQueueCreate
{
status, ItemNTSTATUS -- 10
}
#typev  FxIoQueueApi_cpp116 10     "%0WDF_IO_QUEUE_CONFIG Size 0x%10!x!, expected 0x%11!x!, %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=imp_WdfIoQueueCreate
{
Config->Size, ItemLong -- 10
sizeof(WDF_IO_QUEUE_CONFIG), ItemLong -- 11
status, ItemNTSTATUS -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
60ce611f-c83b-75b3-952c-d86486c32125     core // SRC=FxChildList.cpp MJ= MN=
#typev  FxChildList_cpp2772 51     "%0Config->EvtChildListCreateDevice, NULL is not allowed"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxChildList::_ValidateConfig
{
}
#typev  FxChildList_cpp2767 50     "%0Config->IdentificationDescriptionSize must be non zero"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxChildList::_ValidateConfig
{
}
#typev  FxChildList_cpp2761 49     "%0Config->Size incorrect, expected %10!d!, got %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxChildList::_ValidateConfig
{
sizeof(WDF_CHILD_LIST_CONFIG), ItemLong -- 10
Config->Size, ItemLong -- 11
}
#typev  FxChildList_cpp2755 48     "%0Invalid Config, NULL is not allowed"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxChildList::_ValidateConfig
{
}
#typev  FxChildList_cpp1208 20     "%0Requested reenumeration for PDO WDFDEVICE %10!p!, !devobj %11!p! no possible (pending mod %12!d!, currently present %13!d!)"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxChildList::ReenumerateEntryLocked
{
Entry->m_Pdo->GetHandle(), ItemPtr -- 10
Entry->m_Pdo->GetDeviceObject(), ItemPtr -- 11
IsListEmpty(&Entry->m_ModificationLink), ItemLong -- 12
Entry->IsPresent(), ItemLong -- 13
}
#typev  FxChildList_cpp1189 19     "%0Inserting clone modification for PDO WDFDEVICE %10!p!, !devobj %11!p!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxChildList::ReenumerateEntryLocked
{
Entry->m_Pdo->GetHandle(), ItemPtr -- 10
Entry->m_Pdo->GetDeviceObject(), ItemPtr -- 11
}
#typev  FxChildList_cpp709 16     "%0Begin iteration on WDFCHILDLIST %10!p!, scan count %11!d!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxChildList::BeginIteration
{
GetHandle(), ItemPtr -- 10
m_ScanCount, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxChildList_cpp759 18     "%0WDFCHILDLIST %10!p! cannot retrieve next device if the list is not locked for iteration, %11!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxChildList::GetNextDevice
{
GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxChildList_cpp1528 22     "%0clone successful (new entry is %10!p!), marking PDO WDFDEVICE %11!p!, !devobj %12!p! as missing"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxChildList::CloneEntryLocked
{
pClone, ItemPtr -- 10
Entry->m_Pdo->GetHandle(), ItemPtr -- 11
Entry->m_Pdo->GetDeviceObject(), ItemPtr -- 12
}
#typev  FxChildList_cpp1501 21     "%0attempting to clone PDO WDFDEVICE %10!p!, !devobj %11!p!, From QDR %12!d!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxChildList::CloneEntryLocked
{
Entry->m_Pdo->GetHandle(), ItemPtr -- 10
Entry->m_Pdo->GetDeviceObject(), ItemPtr -- 11
FromQDR, ItemLong -- 12
}
#typev  FxChildList_cpp1585 23     "%0Not processing modifictions on WDFCHILDLIST %10!p! (list state %11!d!, scan count %12!d!)"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxChildList::ProcessModificationsLocked
{
GetObjectHandle(), ItemPtr -- 10
m_State, ItemLong -- 11
m_ScanCount, ItemLong -- 12
}
#typev  FxChildList_cpp1741 30     "%0end processing modifications on WDFCHILDLIST %10!p!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxChildList::ProcessModificationsLocked
{
GetObjectHandle(), ItemPtr -- 10
}
#typev  FxChildList_cpp1703 29     "%0marking entry %10!p! as needing instantiation"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxChildList::ProcessModificationsLocked
{
pEntry, ItemPtr -- 10
}
#typev  FxChildList_cpp1670 27     "%0entry %10!p! never reported to pnp, mark for deletion"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxChildList::ProcessModificationsLocked
{
pEntry, ItemPtr -- 10
}
#typev  FxChildList_cpp1679 28     "%0committing PDO WDFDEVICE %10!p!, !devobj %11!p! as not present"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxChildList::ProcessModificationsLocked
{
pEntry->m_Pdo->GetHandle(), ItemPtr -- 10
pEntry->m_Pdo->GetDeviceObject(), ItemPtr -- 11
}
#typev  FxChildList_cpp1653 26     "%0processing remove on entry %10!p!, description state is %11!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxChildList::ProcessModificationsLocked
{
pEntry, ItemPtr -- 10
pEntry->m_DescriptionState, ItemListLong(DescriptionUnspecified,DescriptionPresentNeedsInstantiation,DescriptionInstantiatedHasObject,DescriptionReportedMissing,DescriptionNotPresent) -- 11
}
#typev  FxChildList_cpp1639 25     "%0entry %10!p!, mod state is %11!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxChildList::ProcessModificationsLocked
{
pEntry, ItemPtr -- 10
pEntry->m_ModificationState, ItemListLong(ModificationUnspecified,ModificationInsert,ModificationRemove,ModificationRemoveNotify,ModificationClone) -- 11
}
#typev  FxChildList_cpp1592 24     "%0Begin processing modifications on WDFCHILDLIST %10!p!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxChildList::ProcessModificationsLocked
{
GetObjectHandle(), ItemPtr -- 10
}
#typev  FxChildList_cpp614 15     "%0marking PDO (entry %10!p!) which needs instantiation as not present"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxChildList::EndScan
{
pEntry, ItemPtr -- 10
}
#typev  FxChildList_cpp606 14     "%0marking PDO WDFDEVICE %10!p!, !devobj %11!p! as not present"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxChildList::EndScan
{
pEntry->m_Pdo->GetHandle(), ItemPtr -- 10
pEntry->m_Pdo->GetDeviceObject(), ItemPtr -- 11
}
#typev  FxChildList_cpp561 13     "%0clone of PDO WDFDEVICE %10!p!, !devobj %11!p! dropped because it is missing"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxChildList::EndScan
{
pEntry->m_Pdo->GetHandle(), ItemPtr -- 10
pEntry->m_Pdo->GetDeviceObject(), ItemPtr -- 11
}
#typev  FxChildList_cpp543 12     "%0entry %10!p! modified in last scan, mod state  %11!s!,desc state %12!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxChildList::EndScan
{
pEntry, ItemPtr -- 10
pEntry->m_ModificationState, ItemListLong(ModificationUnspecified,ModificationInsert,ModificationRemove,ModificationRemoveNotify,ModificationClone) -- 11
pEntry->m_DescriptionState, ItemListLong(DescriptionUnspecified,DescriptionPresentNeedsInstantiation,DescriptionInstantiatedHasObject,DescriptionReportedMissing,DescriptionNotPresent) -- 12
}
#typev  FxChildList_cpp521 11     "%0End scan on WDFCHILDLIST %10!p!, scan count %11!d!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxChildList::EndScan
{
GetHandle(), ItemPtr -- 10
m_ScanCount, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxChildList_cpp721 17     "%0end iteration on WDFCHILDLIST"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxChildList::EndIteration
{
}
#typev  FxChildList_cpp2712 47     "%0Removing entry %10!p!, WDFDEVICE %11!p!, PDO %12!p!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxChildList::NotifyDeviceRemove
{
pEntry, ItemPtr -- 10
pEntry->m_Pdo->GetHandle(), ItemPtr -- 11
pEntry->m_Pdo->GetPhysicalDevice(), ItemPtr -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxChildList_cpp2664 46     "%0WDFCHILDLIST %10!p!:  removing children"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxChildList::NotifyDeviceRemove
{
GetHandle(), ItemPtr -- 10
}
#typev  FxChildList_cpp2108 31     "%0WDFDEVICE %10!p! !devobj %11!p! created, but EvtChildListCreateDevice returned status %12!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxChildList::CreateDevice
{
init.CreatedDevice->GetHandle(), ItemPtr -- 10
init.CreatedDevice->GetDeviceObject(), ItemPtr -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxChildList_cpp2508 45     "%0Freeing prior relations %10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxChildList::ProcessBusRelations
{
pPriorRelations, ItemPtr -- 10
}
#typev  FxChildList_cpp2445 43     "%0Reporting PDO WDFDEVICE %10!p! !devobj %11!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxChildList::ProcessBusRelations
{
pEntry->m_Pdo->GetHandle(), ItemPtr -- 10
pEntry->m_Pdo->GetDeviceObject(), ItemPtr -- 11
}
#typev  FxChildList_cpp2436 42     "%0PDO created successfully, WDFDEVICE %10!p! !devobj %11!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxChildList::ProcessBusRelations
{
pEntry->m_Pdo->GetHandle(), ItemPtr -- 10
pEntry->m_Pdo->GetDeviceObject(), ItemPtr -- 11
}
#typev  FxChildList_cpp2430 41     "%0Creating PDO device object from reported device"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxChildList::ProcessBusRelations
{
}
#typev  FxChildList_cpp2460 44     "%0PDO WDFDEVICE %10!p! !devobj %11!p! reported as missing to pnp"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxChildList::ProcessBusRelations
{
pEntry->m_Pdo->GetHandle(), ItemPtr -- 10
pEntry->m_Pdo->GetDeviceObject(), ItemPtr -- 11
}
#typev  FxChildList_cpp2401 40     "%0WDFCHILDLIST %10!p! prior relations %11!p! contained %12!d! objects"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxChildList::ProcessBusRelations
{
GetHandle(), ItemPtr -- 10
pPriorRelations, ItemPtr -- 11
pPriorRelations->Count, ItemLong -- 12
}
#typev  FxChildList_cpp2365 38     "%0PDO WDFDEVICE %10!p! !devobj %11!p! being cloned because of the failure to allocate device relations"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxChildList::ProcessBusRelations
{
pEntry->m_Pdo->GetHandle(), ItemPtr -- 10
pEntry->m_Pdo->GetDeviceObject(), ItemPtr -- 11
}
#typev  FxChildList_cpp2355 37     "%0PDO WDFDEVICE %10!p! !devobj %11!p! being marked as missing because of failure to allocate device relations and an already existing relations %12!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxChildList::ProcessBusRelations
{
pEntry->m_Pdo->GetHandle(), ItemPtr -- 10
pEntry->m_Pdo->GetDeviceObject(), ItemPtr -- 11
pPriorRelations, ItemPtr -- 12
}
#typev  FxChildList_cpp2382 39     "%0PDO WDFDEVICE %10!p! !devobj %11!p! reported as missing to pnp (by using existing relations)"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxChildList::ProcessBusRelations
{
pEntry->m_Pdo->GetHandle(), ItemPtr -- 10
pEntry->m_Pdo->GetDeviceObject(), ItemPtr -- 11
}
#typev  FxChildList_cpp2311 36     "%0WDFCHILDLIST %10!p! retried %11!d! times to report relations, but failed each time"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxChildList::ProcessBusRelations
{
GetHandle(), ItemPtr -- 10
FX_CHILD_LIST_MAX_RETRIES, ItemLong -- 11
}
#typev  FxChildList_cpp2304 35     "%0WDFCHILDLIST %10!p! could not allocate relations required for reporting children as missing after max retries"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxChildList::ProcessBusRelations
{
GetHandle(), ItemPtr -- 10
}
#typev  FxChildList_cpp2286 34     "%0Could not allocate relations for %10!d! devices"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxChildList::ProcessBusRelations
{
totalCount, ItemLong -- 10
}
#typev  FxChildList_cpp2253 33     "%0Nothing to report on WDFCHILLIST %10!p!, returning early"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxChildList::ProcessBusRelations
{
GetHandle(), ItemPtr -- 10
}
#typev  FxChildList_cpp2215 32     "%0PDO WDFDEVICE %10!p! !devobj %11!p! in a not present state, need to report as missing"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxChildList::ProcessBusRelations
{
pEntry->m_Pdo->GetHandle(), ItemPtr -- 10
pEntry->m_Pdo->GetDeviceObject(), ItemPtr -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxChildList_cpp457 10     "%0Begin scan on WDFCHILDLIST %10!p!, scan count %11!d!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=imp_WdfChildListBeginScan
{
GetHandle(), ItemPtr -- 10
m_ScanCount, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
60d85372-071f-f79e-98b7-ef56d2a66f4e     support // SRC=FxStringAPI.cpp MJ= MN=
#typev  FxStringAPI_cpp95 10     "%0Could not allocate WDFSTRING handle, %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfStringCreate
{
status, ItemNTSTATUS -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
64a7b421-ad19-9724-31ba-2dc5b95135d0     base // SRC=FxDmaEnablerAPI.cpp MJ= MN=
#typev  FxDmaEnablerAPI_cpp307 16     "%0Invalid value for Dma direction %10!d!, %11!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaEnablerWdmGetDmaAdapter
{
DmaDirection, ItemLong -- 10
DmaEnabler, ItemPtr -- 11
}
#typev  FxDmaEnablerAPI_cpp265 15     "%0Invalid value for Dma direction %10!d!, %11!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaEnablerGetFragmentLength
{
DmaDirection, ItemLong -- 10
DmaEnabler, ItemPtr -- 11
}
#typev  FxDmaEnablerAPI_cpp218 14     "%0Cannot set MaximumElements of zero on WDFDMAENABLER %10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaEnablerSetMaximumScatterGatherElements
{
DmaEnabler, ItemPtr -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxDmaEnablerAPI_cpp93 11     "%0DMA Profile value %10!d! is unknown, %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaEnablerCreate
{
Config->Profile, ItemLong -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxDmaEnablerAPI_cpp128 13     "%0Could not allocate memory for a WDFDMAENABLER, %10!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaEnablerCreate
{
status, ItemNTSTATUS -- 10
}
#typev  FxDmaEnablerAPI_cpp103 12     "%0Config MaximumLength of zero is invalid, %10!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaEnablerCreate
{
status, ItemNTSTATUS -- 10
}
#typev  FxDmaEnablerAPI_cpp75 10     "%0WDF_DMA_ENABLER_CONFIG Size 0x%10!x!, expected 0x%11!x!, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaEnablerCreate
{
Config->Size, ItemLong -- 10
sizeof(WDF_DMA_ENABLER_CONFIG), ItemLong -- 11
status, ItemNTSTATUS -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
6758c4ef-3114-0522-575c-7e9684ff89de     core // SRC=FxTimerApi.cpp MJ= MN=
#typev  FxTimerApi_cpp103 11     "%0Period value %10!d! for a periodic timer cannot be negative"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfTimerCreate
{
Config->Period, ItemLong -- 10
}
#typev  FxTimerApi_cpp92 10     "%0PWDF_TIMER_CONFIG Size %10!d!, expected %11!d!, %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfTimerCreate
{
Config->Size, ItemLong -- 10
sizeof(WDF_TIMER_CONFIG), ItemLong -- 11
status, ItemNTSTATUS -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
69c0299e-b453-2ff6-6e17-f11cf9fb7ad3     support // SRC=FxSpinLock.cpp MJ= MN=
#typev  FxSpinLock_cpp104 11     "%0WDFSPINLOCK 0x%10!p! not owned by thread 0x%11!p!, owned by thread 0x%12!p!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=FxSpinLock::ReleaseLock
{
GetObjectHandle(), ItemPtr -- 10
KeGetCurrentThread(), ItemPtr -- 11
pHistory->OwningThread, ItemPtr -- 12
}
#typev  FxSpinLock_cpp98 10     "%0WDFSPINLOCK %10!p! being released by thread 0x%11!p!, but was never acquired!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=FxSpinLock::ReleaseLock
{
GetObjectHandle(), ItemPtr -- 10
KeGetCurrentThread(), ItemPtr -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
6bfd06d9-5fb4-a4fd-060b-2a33f997b3ef     core // SRC=FxDeviceFdoAPI.cpp MJ= MN=
#typev  FxDeviceFdoAPI_cpp421 17     "%0WDFDEVICE %10!p! is not an FDO"      //   GLOBALS=GetFxDriverGlobals(DriverGlobals) LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfFdoGetDefaultChildList
{
Fdo, ItemPtr -- 10
}
#typev  FxDeviceFdoAPI_cpp434 18     "%0Default child list for FDO %10!p! not configured, call WdfFdoInitSetDefaultChildListConfig to do so"      //   GLOBALS=GetFxDriverGlobals(DriverGlobals) LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfFdoGetDefaultChildList
{
Fdo, ItemPtr -- 10
}
#typev  FxDeviceFdoAPI_cpp368 16     "%0WDFDEVICE 0x%10!p! Device is either legacy or is not a Fdo %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfFdoQueryForInterface
{
Fdo, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxDeviceFdoAPI_cpp214 13     "%0Invalid Flags 0x%10!x!"      //   GLOBALS=GetFxDriverGlobals(DriverGlobals) LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfFdoRetrieveNextStaticChild
{
Flags, ItemLong -- 10
}
#typev  FxDeviceFdoAPI_cpp230 14     "%0WDFDEVICE %10!p! is not an FDO"      //   GLOBALS=GetFxDriverGlobals(DriverGlobals) LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfFdoRetrieveNextStaticChild
{
Fdo, ItemPtr -- 10
}
#typev  FxDeviceFdoAPI_cpp153 12     "%0Invalid WDFDEVICE %10!p! is not an FDO"      //   GLOBALS=GetFxDriverGlobals(DriverGlobals) LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfFdoLockStaticChildListForIteration
{
Fdo, ItemPtr -- 10
}
#typev  FxDeviceFdoAPI_cpp79 10     "%0WDFDEVICE 0x%10!p! is either legacy or is not a Fdo, %11!s!"      //   GLOBALS=GetFxDriverGlobals(DriverGlobals) LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfFdoAddStaticChild
{
Fdo, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxDeviceFdoAPI_cpp95 11     "%0WDFDEVICE Child 0x%10!p! is either legacy or is not a PDO, %11!s!"      //   GLOBALS=GetFxDriverGlobals(DriverGlobals) LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfFdoAddStaticChild
{
Child, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxDeviceFdoAPI_cpp278 15     "%0WDFDEVICE %10!p! is not an FDO"      //   GLOBALS=GetFxDriverGlobals(DriverGlobals) LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfFdoUnlockStaticChildListFromIteration
{
Fdo, ItemPtr -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
6d078f73-fa0a-6e31-3202-4974174001d6     pnp // SRC=fdopower.cpp MJ= MN=
#typev  fdopower_cpp302 10     "%0Received wait wake power irp %10!p! on device %11!p!, but the irp was not requested by the device (the power policy owner)"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgFdo::DispatchDeviceSetPower
{
Irp->GetIrp(), ItemPtr -- 10
m_Device->GetDeviceObject(), ItemPtr -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
700f2ab8-84d8-babe-a760-ee7b9dac8a52     core // SRC=FxChildListAPI.cpp MJ= MN=
#typev  FxChildListAPI_cpp305 24     "%0Iterator Flags 0x%10!x! not correct, valid mask 0x%11!x!, %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfChildListBeginIteration
{
Iterator->Flags, ItemLong -- 10
WdfRetrieveAllChildren, ItemLong -- 11
STATUS_INVALID_PARAMETER, ItemNTSTATUS -- 12
}
#typev  FxChildListAPI_cpp296 23     "%0Iterator Size %10!d! not correct, expected %11!d!, %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfChildListBeginIteration
{
Iterator->Size, ItemLong -- 10
sizeof(WDF_CHILD_LIST_ITERATOR), ItemLong -- 11
STATUS_INFO_LENGTH_MISMATCH, ItemNTSTATUS -- 12
}
#typev  FxChildListAPI_cpp290 22     "%0Enter: WDFCHILDLIST %10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=imp_WdfChildListBeginIteration
{
DeviceList, ItemPtr -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxChildListAPI_cpp240 20     "%0Enter: WDFCHILDLIST %10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=imp_WdfChildListBeginScan
{
DeviceList, ItemPtr -- 10
}
#typev  FxChildListAPI_cpp139 14     "%0Enter: WDFCHILDLIST %10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=imp_WdfChildListGetDevice
{
DeviceList, ItemPtr -- 10
}
#typev  FxChildListAPI_cpp784 54     "%0PDO WDFDEVICE %10!p! not reported yet to pnp, cannot eject!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfChildListRequestChildEject
{
device->GetHandle(), ItemPtr -- 10
}
#typev  FxChildListAPI_cpp767 53     "%0found: WDFCHILDLIST %10!p!, WDFDEVICE PDO %11!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=imp_WdfChildListRequestChildEject
{
DeviceList, ItemPtr -- 10
device == NULL ? NULL : device->GetHandle(), ItemPtr -- 11
}
#typev  FxChildListAPI_cpp752 52     "%0identification description size 0x%10!x! incorrect, expected 0x%11!x!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfChildListRequestChildEject
{
IdentificationDescription->IdentificationDescriptionSize, ItemLong -- 10
pList->GetIdentificationDescriptionSize(), ItemLong -- 11
}
#typev  FxChildListAPI_cpp740 51     "%0Enter: WDFCHILDLIST %10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=imp_WdfChildListRequestChildEject
{
DeviceList, ItemPtr -- 10
}
#typev  FxChildListAPI_cpp716 50     "%0Exit: WDFCHILDLIST %10!p!, WDFDEVICE Pdo %11!p!, %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=imp_WdfChildListRetrievePdo
{
DeviceList, ItemPtr -- 10
handle, ItemPtr -- 11
retrieveStatus, ItemEnum(_WDF_CHILD_LIST_RETRIEVE_DEVICE_STATUS) -- 12
}
#typev  FxChildListAPI_cpp692 49     "%0address description size %10!d! incorrect, expected %11!d!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfChildListRetrievePdo
{
pAddr->AddressDescriptionSize, ItemLong -- 10
pList->GetAddressDescriptionSize(), ItemLong -- 11
}
#typev  FxChildListAPI_cpp684 48     "%0cannot retrieve an address description from a list which was not initialized to use them, %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfChildListRetrievePdo
{
STATUS_INVALID_DEVICE_REQUEST, ItemNTSTATUS -- 10
}
#typev  FxChildListAPI_cpp672 47     "%0identification description size %10!d! incorrect, expected %11!d!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfChildListRetrievePdo
{
pId->IdentificationDescriptionSize, ItemLong -- 10
pList->GetIdentificationDescriptionSize(), ItemLong -- 11
}
#typev  FxChildListAPI_cpp659 46     "%0Invalid ID Description, %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfChildListRetrievePdo
{
STATUS_INVALID_PARAMETER, ItemNTSTATUS -- 10
}
#typev  FxChildListAPI_cpp649 45     "%0Invalid RetrieveInfo Size %10!x!, expected %11!d!, %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfChildListRetrievePdo
{
RetrieveInfo->Size, ItemLong -- 10
sizeof(WDF_CHILD_RETRIEVE_INFO), ItemLong -- 11
STATUS_INFO_LENGTH_MISMATCH, ItemNTSTATUS -- 12
}
#typev  FxChildListAPI_cpp643 44     "%0Enter: WDFCHILDLIST %10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=imp_WdfChildListRetrievePdo
{
DeviceList, ItemPtr -- 10
}
#typev  FxChildListAPI_cpp412 30     "%0address description size %10!d! incorrect, expected %11!d!, %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfChildListRetrieveNextDevice
{
Info->AddressDescription->AddressDescriptionSize, ItemLong -- 10
pList->GetAddressDescriptionSize(), ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxChildListAPI_cpp400 29     "%0cannot retrieve an address description from a list which was not initialized to use them, %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfChildListRetrieveNextDevice
{
status, ItemNTSTATUS -- 10
}
#typev  FxChildListAPI_cpp386 28     "%0identification description size %10!d! incorrect, expected %11!d!%12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfChildListRetrieveNextDevice
{
Info->IdentificationDescription->IdentificationDescriptionSize, ItemLong -- 10
pList->GetIdentificationDescriptionSize(), ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxChildListAPI_cpp374 27     "%0Invalid RetrieveInfo Size %10!d!, expected %11!d!, %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfChildListRetrieveNextDevice
{
Info->Size, ItemLong -- 10
sizeof(WDF_CHILD_RETRIEVE_INFO), ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxChildListAPI_cpp359 26     "%0Iterator Flags 0x%10!x! not correct, valid mask 0x%11!x!, %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfChildListRetrieveNextDevice
{
Iterator->Flags, ItemLong -- 10
WdfRetrieveAllChildren, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxChildListAPI_cpp351 25     "%0Iterator Size %10!d! not correct, expected %11!d!, %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfChildListRetrieveNextDevice
{
Iterator->Size, ItemLong -- 10
sizeof(WDF_CHILD_LIST_ITERATOR), ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxChildListAPI_cpp219 19     "%0Exit: WDFCHILDLIST %10!p!, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=imp_WdfChildListRetrieveAddressDescription
{
DeviceList, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxChildListAPI_cpp208 18     "%0description size %10!d! incorrect, expected %11!d!, %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfChildListRetrieveAddressDescription
{
AddressDescription->AddressDescriptionSize, ItemLong -- 10
pList->GetAddressDescriptionSize(), ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxChildListAPI_cpp196 17     "%0cannot retrieve an address description from a list which was not initialized to use them, %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfChildListRetrieveAddressDescription
{
status, ItemNTSTATUS -- 10
}
#typev  FxChildListAPI_cpp184 16     "%0identification description size %10!d! incorrect, expected %11!d!, %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfChildListRetrieveAddressDescription
{
IdentificationDescription->IdentificationDescriptionSize, ItemLong -- 10
pList->GetIdentificationDescriptionSize(), ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxChildListAPI_cpp169 15     "%0Enter: WDFCHILDLIST %10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=imp_WdfChildListRetrieveAddressDescription
{
DeviceList, ItemPtr -- 10
}
#typev  FxChildListAPI_cpp116 13     "%0Could not convert object to handle, %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfChildListCreate
{
status, ItemNTSTATUS -- 10
}
#typev  FxChildListAPI_cpp100 12     "%0No memory for WDFCHILDLIST handle, %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfChildListCreate
{
status, ItemNTSTATUS -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxChildListAPI_cpp73 11     "%0WDFDEVICE 0x%10!p! Config is invalid"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfChildListCreate
{
Device, ItemPtr -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxChildListAPI_cpp58 10     "%0Enter, WDFDEVICE %10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=imp_WdfChildListCreate
{
Device, ItemPtr -- 10
}
#typev  FxChildListAPI_cpp620 43     "%0Exit: WDFCHILDLIST %10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=imp_WdfChildListUpdateAllChildDescriptionsAsPresent
{
DeviceList, ItemPtr -- 10
}
#typev  FxChildListAPI_cpp610 42     "%0Enter: WDFCHILDLIST %10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=imp_WdfChildListUpdateAllChildDescriptionsAsPresent
{
DeviceList, ItemPtr -- 10
}
#typev  FxChildListAPI_cpp590 41     "%0Exit: WDFCHILDLIST %10!p!, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=imp_WdfChildListUpdateChildDescriptionAsMissing
{
DeviceList, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxChildListAPI_cpp579 40     "%0identification description size %10!d! incorrect, expected %11!d!, %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfChildListUpdateChildDescriptionAsMissing
{
IdentificationDescription->IdentificationDescriptionSize, ItemLong -- 10
pList->GetIdentificationDescriptionSize(), ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxChildListAPI_cpp565 39     "%0Enter: WDFCHILDLIST %10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=imp_WdfChildListUpdateChildDescriptionAsMissing
{
DeviceList, ItemPtr -- 10
}
#typev  FxChildListAPI_cpp542 38     "%0Exit: WDFCHILDLIST %10!p!, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=imp_WdfChildListAddOrUpdateChildDescriptionAsPresent
{
DeviceList, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxChildListAPI_cpp531 37     "%0identification description size %10!d! incorrect, expected %11!d!, %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfChildListAddOrUpdateChildDescriptionAsPresent
{
IdentificationDescription->IdentificationDescriptionSize, ItemLong -- 10
pList->GetIdentificationDescriptionSize(), ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxChildListAPI_cpp517 36     "%0address description size %10!d! incorrect, expected %11!d!, %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfChildListAddOrUpdateChildDescriptionAsPresent
{
AddressDescription->AddressDescriptionSize, ItemLong -- 10
pList->GetAddressDescriptionSize(), ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxChildListAPI_cpp506 35     "%0cannot retrieve an address description from a list which was not initialized to use them, %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfChildListAddOrUpdateChildDescriptionAsPresent
{
status, ItemNTSTATUS -- 10
}
#typev  FxChildListAPI_cpp492 34     "%0Enter: WDFCHILDLIST %10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=imp_WdfChildListAddOrUpdateChildDescriptionAsPresent
{
DeviceList, ItemPtr -- 10
}
#typev  FxChildListAPI_cpp264 21     "%0Enter: WDFCHILDLIST %10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=imp_WdfChildListEndScan
{
DeviceList, ItemPtr -- 10
}
#typev  FxChildListAPI_cpp456 33     "%0Iterator Flags 0x%10!x! not correct, valid mask 0x%11!x!, %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfChildListEndIteration
{
Iterator->Flags, ItemLong -- 10
WdfRetrieveAllChildren, ItemLong -- 11
STATUS_INVALID_PARAMETER, ItemNTSTATUS -- 12
}
#typev  FxChildListAPI_cpp447 32     "%0Iterator Size %10!d! not correct, expected %11!d!, %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfChildListEndIteration
{
Iterator->Size, ItemLong -- 10
sizeof(WDF_CHILD_LIST_ITERATOR), ItemLong -- 11
STATUS_INFO_LENGTH_MISMATCH, ItemNTSTATUS -- 12
}
#typev  FxChildListAPI_cpp441 31     "%0Enter: WDFCHILDLIST %10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=imp_WdfChildListEndIteration
{
DeviceList, ItemPtr -- 10
}
#enumv _WDF_CHILD_LIST_RETRIEVE_DEVICE_STATUS
{
WdfChildListRetrieveDeviceUndefined,0x0
WdfChildListRetrieveDeviceSuccess,0x1
WdfChildListRetrieveDeviceNotYetCreated,0x2
WdfChildListRetrieveDeviceNoSuchDevice,0x3
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
76c6d586-7d7f-d4a9-ec2f-7073005367c5     core // SRC=FxDriverApi.cpp MJ= MN=
#typev  FxDriverApi_cpp677 15     "%0IsVersionAvailable, current KMDF ver major %10!d!, minor %11!d!, caller asking about major %12!d!, minor %13!d!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGDRIVER FUNC=imp_WdfDriverIsVersionAvailable
{
__WDF_MAJOR_VERSION, ItemLong -- 10
__WDF_MINOR_VERSION, ItemLong -- 11
VersionAvailableParams->MajorVersion, ItemLong -- 12
VersionAvailableParams->MinorVersion, ItemLong -- 13
}
#typev  FxDriverApi_cpp662 14     "%0VersionAvailableParams Size 0x%10!x!, expected 0x%11!x!, %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDRIVER FUNC=imp_WdfDriverIsVersionAvailable
{
VersionAvailableParams->Size, ItemLong -- 10
sizeof(WDF_DRIVER_VERSION_AVAILABLE_PARAMS), ItemLong -- 11
status, ItemNTSTATUS -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxDriverApi_cpp144 12     "%0WdfDriverCreate can only be called one time per WDM PDRIVER_OBJECT %10!p!, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDRIVER FUNC=imp_WdfDriverCreate
{
DriverObject, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxDriverApi_cpp179 13     "%0Invalid Driver flags or EvtDriverDeviceAdd callback already addedSTATUS_INVALID_PARAMETER"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDRIVER FUNC=imp_WdfDriverCreate
{
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxDriverApi_cpp117 11     "%0DriverInitFlags 0x%10!x! invalid, valid flags are 0x%11!x!, %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDRIVER FUNC=imp_WdfDriverCreate
{
DriverConfig->DriverInitFlags, ItemLong -- 10
validFlags, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxDriverApi_cpp106 10     "%0WDF_DRIVER_CONFIG got Size %10!d!, expected %11!d!, %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDRIVER FUNC=imp_WdfDriverCreate
{
DriverConfig->Size, ItemLong -- 10
sizeof(WDF_DRIVER_CONFIG), ItemLong -- 11
status, ItemNTSTATUS -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
7c15d030-73f9-7203-81f5-6c44f9ae5617     core // SRC=FxRequest.cpp MJ= MN=
#typev  FxRequest_cpp3486 86     "%0WDFREQUEST 0x%10!p! is already completed, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxRequest::VerifierVerifyRequestIsNotCompleted
{
GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxRequest_cpp3459 85     "%0This call is valid only in EvtIoInCallerContext callback, WDFREQUEST 0x%10!p!, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxRequest::VerifierVerifyRequestIsInCallerContext
{
GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxRequest_cpp3431 84     "%0WDFREQUEST 0x%10!p! should be unmarked cancelable by calling WdfRequestUnmarkCancelable, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxRequest::VerifierVerifyRequestIsNotCancelable
{
GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxRequest_cpp3404 83     "%0WDFREQUEST 0x%10!p! is not cancelable, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxRequest::VerifierVerifyRequestIsCancelable
{
GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxRequest_cpp3373 82     "%0WDFREQUEST 0x%10!p! has been used as a TagRequest in WdfIoQueueFindRequest. A TagRequest cannot be used until it is retreived by WdfIoQueueRetrieveFoundRequest"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxRequest::VerifierVerifyRequestIsDriverOwned
{
GetHandle(), ItemPtr -- 10
}
#typev  FxRequest_cpp3364 81     "%0WDFREQUEST 0x%10!p! is not owned by the driver, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxRequest::VerifierVerifyRequestIsDriverOwned
{
GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxRequest_cpp2898 70     "%0Attempt to release an IRP reference without adding one first WDFREQUEST 0x%10!p!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::ReleaseIrpReference
{
GetHandle(), ItemPtr -- 10
}
#typev  FxRequest_cpp2547 68     "%0WDFREQUEST 0x%10!p! not on IrpQueue"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::RemoveFromIrpQueue
{
GetHandle(), ItemPtr -- 10
}
#typev  FxRequest_cpp2323 65     "%0WDFREQUEST 0x%10!p! has already been completed"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::SetCompletionState
{
GetHandle(), ItemPtr -- 10
}
#typev  FxRequest_cpp2794 69     "%0No WDFFILEOBJECT support configured for device, %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetFileObject
{
status, ItemNTSTATUS -- 10
}
#typev  FxRequest_cpp2221 63     "%0WDFREQUEST 0x%10!p!, SystemBuffer length is 0, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetDeviceControlOutputMdl
{
GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxRequest_cpp2215 62     "%0WDFREQUEST 0x%10!p!, SystemBuffer is NULL, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetDeviceControlOutputMdl
{
GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxRequest_cpp2242 64     "%0WDFREQUEST %10!p! could not allocate MDL for buffer 0x%11!p! Length %12!d!, %13!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetDeviceControlOutputMdl
{
GetHandle(), ItemPtr -- 10
pBuffer, ItemPtr -- 11
length, ItemLong -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxRequest_cpp2148 58     "%0WDFREQUEST 0x%10!p!, METHOD_IN_DIRECT IOCTL, PMDL is NULL, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetDeviceControlOutputMdl
{
GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxRequest_cpp2170 59     "%0WDFREQUEST 0x%10!p!, METHOD_OUT_DIRECT IOCTL, PMDL is NULL, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetDeviceControlOutputMdl
{
GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxRequest_cpp2192 61     "%0Driver must use METHOD_BUFFERED or METHOD_xx_DIRECT I/O for this call, or use WdfDeviceInitSetIoInCallerContextCallback to probe and lock user mode memory"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetDeviceControlOutputMdl
{
}
#typev  FxRequest_cpp2185 60     "%0Attempt to get UserMode Buffer Pointer for METHOD_NEITHER DeviceControl 0x%10!x!, WDFDEVICE 0x%11!p!, WDFREQUEST 0x%12!p!, %13!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetDeviceControlOutputMdl
{
stack->Parameters.DeviceIoControl.IoControlCode, ItemLong -- 10
GetDevice()->GetHandle(), ItemPtr -- 11
GetHandle(), ItemPtr -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxRequest_cpp2108 57     "%0WDFREQUEST %10!p! (MajorFunction is 0x%11!x!) this call is only valid for IOCTLs, %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetDeviceControlOutputMdl
{
GetHandle(), ItemPtr -- 10
stack->MajorFunction, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxRequest_cpp1978 55     "%0WDFREQUEST 0x%10!p!, SystemBuffer length is 0, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetMdl
{
GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxRequest_cpp1972 54     "%0WDFREQUEST 0x%10!p!, SystemBuffer is NULL, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetMdl
{
GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxRequest_cpp1999 56     "%0Could not allocate MDL for buffer 0x%10!p! Length %11!d!, %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetMdl
{
pBuffer, ItemPtr -- 10
length, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxRequest_cpp1825 47     "%0Driver must use METHOD_BUFFERED or METHOD_xx_DIRECT I/O for this call, or use WdfDeviceInitSetIoInCallerContextCallback to probe and lock user mode memory"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetMdl
{
}
#typev  FxRequest_cpp1818 46     "%0Attempt to get UserMode MDL for METHOD_NEITHER DeviceControl 0x%10!x!, WDFDEVICE 0x%11!p!, WDFREQUEST 0x%12!p!, %13!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetMdl
{
stack->Parameters.DeviceIoControl.IoControlCode, ItemLong -- 10
TestAndGetDeviceHandle(), ItemPtr -- 11
GetHandle(), ItemPtr -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxRequest_cpp1948 53     "%0Unrecognized I/O Type %10!d! on WDFDEVICE 0x%11!p!, WDFREQUEST 0x%12!p!, %13!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetMdl
{
ioType, ItemLong -- 10
pDevice->GetHandle(), ItemPtr -- 11
GetHandle(), ItemPtr -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxRequest_cpp1933 52     "%0Driver must use buffered or direct I/O for this call, or use WdfDeviceInitSetIoInCallerContextCallback to probe and lock user mode memory"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetMdl
{
}
#typev  FxRequest_cpp1927 51     "%0Attempt to get UserMode Buffer Pointer for WDFDEVICE 0x%10!p!, WDFREQUEST 0x%11!p!, %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetMdl
{
pDevice->GetHandle(), ItemPtr -- 10
GetHandle(), ItemPtr -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxRequest_cpp1911 50     "%0WDFREQUEST 0x%10!p! for a direct io device, PMDL is NULL, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetMdl
{
GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxRequest_cpp1885 49     "%0WDFREQUEST %10!p! no Automatic MDL mapping for buffered requestmajor function 0x%11!x! available for WDFDEVICE 0x%12!p!, %13!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetMdl
{
GetHandle(), ItemPtr -- 10
stack->MajorFunction, ItemLong -- 11
pDevice->GetHandle(), ItemPtr -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxRequest_cpp1850 48     "%0DeviceObject == NULL! Must be set for proper I/O Type WDFREQUEST 0x%10!p!, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetMdl
{
GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxRequest_cpp1536 36     "%0WDFREQUEST 0x%10!p!, IOCTL output buffer length is zero, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetDeviceControlOutputMemoryObject
{
GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxRequest_cpp1591 38     "%0WDFREQUEST 0x%10!p! could not get a system address for PMDL0x%11!p!, %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetDeviceControlOutputMemoryObject
{
GetHandle(), ItemPtr -- 10
pMdl, ItemPtr -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxRequest_cpp1564 37     "%0WDFREQUEST 0x%10!p!, METHOD_IN_DIRECT IOCTL PMDL is NULL, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetDeviceControlOutputMemoryObject
{
GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxRequest_cpp1643 40     "%0WDFREQUEST 0x%10!p! could not get a system address for PMDL0x%11!p!, %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetDeviceControlOutputMemoryObject
{
GetHandle(), ItemPtr -- 10
pMdl, ItemPtr -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxRequest_cpp1617 39     "%0WDFREQUEST 0x%10!p!, METHOD_IN_DIRECT IOCTL PMDL is NULL, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetDeviceControlOutputMemoryObject
{
GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxRequest_cpp1671 41     "%0WDFREQUEST 0x%10!p! KernelMode or internal IOCTL output buffer length is zero, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetDeviceControlOutputMemoryObject
{
GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxRequest_cpp1692 43     "%0Driver must use METHOD_BUFFERED or METHOD_xx_DIRECT I/O for this call, or use WdfDeviceInitSetIoInCallerContextCallback to probe and lock user mode memory"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxRequest::GetDeviceControlOutputMemoryObject
{
}
#typev  FxRequest_cpp1684 42     "%0Attempt to get UserMode Buffer Pointer for METHOD_NEITHER DeviceControl 0x%10!x!, WDFDEVICE 0x%11!p!, WDFREQUEST 0x%12!p!, %13!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxRequest::GetDeviceControlOutputMemoryObject
{
stack->Parameters.DeviceIoControl.IoControlCode, ItemLong -- 10
GetDevice()->GetObjectHandle(), ItemPtr -- 11
GetObjectHandle(), ItemPtr -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxRequest_cpp1707 44     "%0WDFREQUEST 0x%10!p! unrecognized IOCTL type 0x%11!x!, %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetDeviceControlOutputMemoryObject
{
GetHandle(), ItemPtr -- 10
stack->Parameters.DeviceIoControl.IoControlCode & 0x3, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxRequest_cpp1722 45     "%0WDFREQUEST 0x%10!p! (MajorFunction = 0x%11!x!) is not an IOCTL, %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxRequest::GetDeviceControlOutputMemoryObject
{
GetObjectHandle(), ItemPtr -- 10
stack->MajorFunction, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxRequest_cpp1253 27     "%0Driver must use METHOD_BUFFERED or METHOD_xx_DIRECT I/O for this call, or use WdfDeviceInitSetIoInCallerContextCallback to probe and lock user mode memory %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetMemoryObject
{
STATUS_INVALID_DEVICE_REQUEST, ItemNTSTATUS -- 10
}
#typev  FxRequest_cpp1245 26     "%0Attempt to get UserMode Buffer Pointer for METHOD_NEITHER DeviceControl 0x%10!x!, WDFDEVICE 0x%11!p!, WDFREQUEST 0x%12!p!, %13!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetMemoryObject
{
stack->Parameters.DeviceIoControl.IoControlCode, ItemLong -- 10
TestAndGetDeviceHandle(), ItemPtr -- 11
GetHandle(), ItemPtr -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxRequest_cpp1185 25     "%0WDFREQUEST %10!p! InputBufferLength length is zero, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetMemoryObject
{
GetObjectHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxRequest_cpp1304 29     "%0Unrecognized Major Function 0x%10!x! on WDFDEVICE 0x%11!p! WDFREQUEST 0x%12!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetMemoryObject
{
stack->MajorFunction, ItemLong -- 10
GetDevice()->GetHandle(), ItemPtr -- 11
GetHandle(), ItemPtr -- 12
}
#typev  FxRequest_cpp1408 34     "%0Driver must use buffered or direct I/O for this call, or use WdfDeviceInitSetIoInCallerContextCallback to probe and lock user mode memory"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetMemoryObject
{
}
#typev  FxRequest_cpp1402 33     "%0Attempt to get UserMode Buffer Pointer for WDFDEVICE 0x%10!p!, WDFREQUEST 0x%11!p!, %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetMemoryObject
{
GetDevice()->GetHandle(), ItemPtr -- 10
GetHandle(), ItemPtr -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxRequest_cpp1373 32     "%0WDFREQUEST 0x%10!p! could not get a system address for PMDL 0x%11!p!, %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetMemoryObject
{
GetHandle(), ItemPtr -- 10
pMdl, ItemPtr -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxRequest_cpp1346 31     "%0WDFREQUEST 0x%10!p!, direct io device, PMDL is NULL, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetMemoryObject
{
GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxRequest_cpp1422 35     "%0Unrecognized I/O Type %10!s! on WDFDEVICE 0x%11!p!, WDFREQUEST 0x%12!p!, %13!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetMemoryObject
{
ioType, ItemEnum(_WDF_DEVICE_IO_TYPE) -- 10
GetDevice()->GetHandle(), ItemPtr -- 11
GetHandle(), ItemPtr -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxRequest_cpp1318 30     "%0WDFREQUEST 0x%10!p! length is zero, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetMemoryObject
{
GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxRequest_cpp1279 28     "%0DeviceObject in the IRP stack location is NULL. There must be valid deviceobject to know the I/O Type of WDFREQUEST 0x%10!p!, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::GetMemoryObject
{
GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxRequest_cpp585 16     "%0WDFREQUEST %10!p!, MJ 0x%11!x!, Information 0x%12!I64x! is greater then buffer length 0x%13!x!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::VerifierValidateCompletedRequest
{
GetHandle(), ItemPtr -- 10
stack->MajorFunction, ItemLong -- 11
m_Irp.GetInformation(), ItemLongLongX -- 12
length, ItemLong -- 13
}
#typev  FxRequest_cpp504 15     "%0Completing Cancelable WDFREQUEST %10!p!.  This results in a race condition in the device driver that can cause double completions.  Call WdfRequestUnmarkCancelable before WdfRequestComplete.  If WdfRequestUnmarkCancelable returns STATUS_CANCELLED, do not complete the request until the EvtIoCancel handler is called.  The straightforward way to ensure this is to complete a canceled request from the EvIoCancel callback."      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::VerifierValidateCompletedRequest
{
GetHandle(), ItemPtr -- 10
}
#typev  FxRequest_cpp2452 67     "%0Already in Queue 0x%10!p! WDFREQUEST 0x%11!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::InsertHeadIrpQueue
{
IrpQueue, ItemPtr -- 10
GetHandle(), ItemPtr -- 11
}
#typev  FxRequest_cpp2381 66     "%0Already in FxIrpQueue 0x%10!p! WDFREQUEST 0x%11!p! %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::InsertTailIrpQueue
{
IrpQueue, ItemPtr -- 10
GetHandle(), ItemPtr -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxRequest_cpp955 24     "%0WDFREQUEST %10!p! cannot send and forget a create request which has a WDFFILEOBJECT created for it, it must have a completion routine and be post processsed"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::PreProcessSendAndForget
{
GetHandle(), ItemPtr -- 10
}
#typev  FxRequest_cpp931 23     "%0WDFREQUEST %10!p! cannot send and forget will not execute completion routine %11!p!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::PreProcessSendAndForget
{
GetHandle(), ItemPtr -- 10
m_CancelAndCompletion.m_RequestMethod.Completion, ItemPtr -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxRequest_cpp3221 80     "%0Exception is raised for Address 0x%10!p!, Length %11!d! %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::ProbeAndLockForWrite
{
Buffer, ItemPtr -- 10
Length, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxRequest_cpp3212 79     "%0Failed to allocate MDL %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::ProbeAndLockForWrite
{
status, ItemNTSTATUS -- 10
}
#typev  FxRequest_cpp3194 78     "%0Attempt to access user mode memory from the wrong process Irp->Tail.Overlay.Thread 0x%10!p!, PsGetCurrentThread 0x%11!p!, %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::ProbeAndLockForWrite
{
thread, ItemPtr -- 10
PsGetCurrentThread(), ItemPtr -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxRequest_cpp3162 77     "%0WDFREQUEST %10!p! has already been completed or has no PIRP assignment, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::ProbeAndLockForWrite
{
GetObjectHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxRequest_cpp3149 76     "%0Length of zero not allowed, %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::ProbeAndLockForWrite
{
status, ItemNTSTATUS -- 10
}
#typev  FxRequest_cpp3034 75     "%0Exception is raised for Address 0x%10!p!, Length %11!d! %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::ProbeAndLockForRead
{
Buffer, ItemPtr -- 10
Length, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxRequest_cpp3025 74     "%0Failed to allocate MDL %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::ProbeAndLockForRead
{
status, ItemNTSTATUS -- 10
}
#typev  FxRequest_cpp3006 73     "%0Attempt to access user mode memory from the wrong process Irp->Tail.Overlay.Thread 0x%10!p!, PsGetCurrentThread 0x%11!p!, %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::ProbeAndLockForRead
{
thread, ItemPtr -- 10
PsGetCurrentThread(), ItemPtr -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxRequest_cpp2973 72     "%0WDFREQUEST %10!p! has already been completed or has no PIRP assignment, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::ProbeAndLockForRead
{
GetObjectHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxRequest_cpp2960 71     "%0Length of zero not allowed, %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::ProbeAndLockForRead
{
status, ItemNTSTATUS -- 10
}
#typev  FxRequest_cpp822 22     "%0IOCTL output WDFMEMORY 0x%10!p!, buffer %11!p!, PMDL %12!p!, length %13!I64d! bytes"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_FATAL FLAGS=TRACINGREQUEST FUNC=FxRequest::CompleteInternal
{
m_OutputBuffer.GetHandle(), ItemPtr -- 10
m_OutputBuffer.GetBuffer(), ItemPtr -- 11
m_OutputBuffer.GetMdl(), ItemPtr -- 12
m_OutputBuffer.GetBufferSize(), ItemLongLong -- 13
}
#typev  FxRequest_cpp813 21     "%0WDFMEMORY 0x%10!p!, buffer %11!p!, PMDL %12!p!, length %13!I64d! bytes"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_FATAL FLAGS=TRACINGREQUEST FUNC=FxRequest::CompleteInternal
{
m_SystemBuffer.GetHandle(), ItemPtr -- 10
m_SystemBuffer.GetBuffer(), ItemPtr -- 11
m_SystemBuffer.GetMdl(), ItemPtr -- 12
m_SystemBuffer.GetBufferSize(), ItemLongLong -- 13
}
#typev  FxRequest_cpp800 20     "%0WDFREQUEST 0x%10!p!, PIRP 0x%11!p!, Major Function 0x%12!x!,  completed with outstanding references on WDFMEMORY 0x%13!p! or 0x%14!p! retrieved from this request"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_FATAL FLAGS=TRACINGREQUEST FUNC=FxRequest::CompleteInternal
{
GetObjectHandle(), ItemPtr -- 10
m_Irp.GetIrp(), ItemPtr -- 11
m_Irp.GetMajorFunction(), ItemLong -- 12
(m_RequestBaseFlags & FxRequestBaseSystemBufferValid) ?                  m_SystemBuffer.GetHandle() : NULL, ItemPtr -- 13
(m_RequestBaseFlags & FxRequestBaseOutputBufferValid) ?                  m_OutputBuffer.GetHandle() : NULL, ItemPtr -- 14
}
#typev  FxRequest_cpp702 19     "%0... to %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::CompleteInternal
{
Status, ItemNTSTATUS -- 10
}
#typev  FxRequest_cpp695 18     "%0Unknown WDF NTSTATUS 0x%10!x!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::CompleteInternal
{
Status, ItemLong -- 10
}
#typev  FxRequest_cpp676 17     "%0Converting WDF NTSTATUS value 0x%10!x!..."      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::CompleteInternal
{
Status, ItemLong -- 10
}
#typev  FxRequest_cpp461 14     "%0Completing WDFREQUEST 0x%10!p! for IRP 0x%11!p! with Information 0x%12!I64x!, %13!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxRequest::Complete
{
GetHandle(), ItemPtr -- 10
m_Irp.GetIrp(), ItemPtr -- 11
m_Irp.GetInformation(), ItemLongLongX -- 12
RequestStatus, ItemNTSTATUS -- 13
}
#typev  FxRequest_cpp225 13     "%0Irp %10!p! Ownership %11!s! FxRequest %12!p!, status %13!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=FxRequest::_Create
{
Irp, ItemPtr -- 10
Ownership, ItemEnum(FxRequestIrpOwnership) -- 11
*Request, ItemPtr -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxRequest_cpp206 12     "%0Handle create failed %10!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::_Create
{
status, ItemNTSTATUS -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxRequest_cpp159 11     "%0Could not commit FxRequest %10!s!"      //   GLOBALS=Device->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::_CreateForPackage
{
status, ItemNTSTATUS -- 10
}
#typev  FxRequest_cpp146 10     "%0Memory allocation failed %10!s!"      //   GLOBALS=Device->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGREQUEST FUNC=FxRequest::_CreateForPackage
{
STATUS_INSUFFICIENT_RESOURCES, ItemNTSTATUS -- 10
}
#enumv _WDF_DEVICE_IO_TYPE
{
WdfDeviceIoUndefined,0x0
WdfDeviceIoNeither,0x1
WdfDeviceIoBuffered,0x2
WdfDeviceIoDirect,0x3
}
#enumv FxRequestIrpOwnership
{
FxRequestOwnsIrp,0x1
FxRequestDoesNotOwnIrp,0x2
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
7c89ee63-bfcf-04e0-53b5-e07b0c31c1f8     core // SRC=FxLookasideListAPI.cpp MJ= MN=
#typev  FxLookasideListAPI_cpp152 11     "%0Lookaside Attributes ancestor WDFDEVICE %10!p! (from ParentObject %11!p!)  is not the same as Memory Attributes ancestor WDFDEVICE %12!p! (from ParentObject %13!p!), %14!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfLookasideListCreate
{
pLookasideDB->GetHandle(), ItemPtr -- 10
LookasideAttributes->ParentObject, ItemPtr -- 11
pMemoryDB->GetHandle(), ItemPtr -- 12
MemoryAttributes->ParentObject, ItemPtr -- 13
status, ItemNTSTATUS -- 14
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxLookasideListAPI_cpp97 10     "%0Zero BufferSize not allowed, %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfLookasideListCreate
{
status, ItemNTSTATUS -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
7e9e3c8b-7fe5-c525-ca75-47219e4993c5     core // SRC=FxObject.hpp MJ= MN=
#typev  FxObject_hpp279 10     "%0Object %10!p!, WDFOBJECT %11!p! transitioning from %12!s! to %13!s!"      //   GLOBALS=m_Globals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGOBJECT FUNC=FxObject::PerformEarlyDisposeWorkerAndUnlock
{
this, ItemPtr -- 10
GetObjectHandleUnchecked(), ItemPtr -- 11
m_ObjectState, ItemEnum(FxObjectState) -- 12
NewState, ItemEnum(FxObjectState) -- 13
}
#typev  FxObject_hpp662 11     "%0Object %10!p!, WDFOBJECT %11!p!, state %12!s! dropping event %13!s!"      //   GLOBALS=m_Globals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGOBJECT FUNC=FxObject::ParentDeleteEvent
{
this, ItemPtr -- 10
GetObjectHandleUnchecked(), ItemPtr -- 11
m_ObjectState, ItemEnum(FxObjectState) -- 12
Event, ItemEnum(FxObjectDroppedEvent) -- 13
}
#typev  FxObject_hpp662 11     "%0Object %10!p!, WDFOBJECT %11!p!, state %12!s! dropping event %13!s!"      //   GLOBALS=m_Globals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGOBJECT FUNC=FxObject::PerformEarlyDispose
{
this, ItemPtr -- 10
GetObjectHandleUnchecked(), ItemPtr -- 11
m_ObjectState, ItemEnum(FxObjectState) -- 12
Event, ItemEnum(FxObjectDroppedEvent) -- 13
}
#typev  FxObject_hpp662 11     "%0Object %10!p!, WDFOBJECT %11!p!, state %12!s! dropping event %13!s!"      //   GLOBALS=m_Globals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGOBJECT FUNC=FxObject::PerformEarlyDispose
{
this, ItemPtr -- 10
GetObjectHandleUnchecked(), ItemPtr -- 11
m_ObjectState, ItemEnum(FxObjectState) -- 12
Event, ItemEnum(FxObjectDroppedEvent) -- 13
}
#typev  FxObject_hpp279 10     "%0Object %10!p!, WDFOBJECT %11!p! transitioning from %12!s! to %13!s!"      //   GLOBALS=m_Globals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGOBJECT FUNC=FxObject::DeletedAndDisposedWorkerLocked
{
this, ItemPtr -- 10
GetObjectHandleUnchecked(), ItemPtr -- 11
m_ObjectState, ItemEnum(FxObjectState) -- 12
NewState, ItemEnum(FxObjectState) -- 13
}
#typev  FxObject_hpp279 10     "%0Object %10!p!, WDFOBJECT %11!p! transitioning from %12!s! to %13!s!"      //   GLOBALS=m_Globals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGOBJECT FUNC=FxObject::DisposeChildrenWorker
{
this, ItemPtr -- 10
GetObjectHandleUnchecked(), ItemPtr -- 11
m_ObjectState, ItemEnum(FxObjectState) -- 12
NewState, ItemEnum(FxObjectState) -- 13
}
#typev  FxObject_hpp279 10     "%0Object %10!p!, WDFOBJECT %11!p! transitioning from %12!s! to %13!s!"      //   GLOBALS=m_Globals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGOBJECT FUNC=FxObject::DisposeChildrenWorker
{
this, ItemPtr -- 10
GetObjectHandleUnchecked(), ItemPtr -- 11
m_ObjectState, ItemEnum(FxObjectState) -- 12
NewState, ItemEnum(FxObjectState) -- 13
}
#typev  FxObject_hpp279 10     "%0Object %10!p!, WDFOBJECT %11!p! transitioning from %12!s! to %13!s!"      //   GLOBALS=m_Globals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGOBJECT FUNC=FxObject::DisposeChildrenWorker
{
this, ItemPtr -- 10
GetObjectHandleUnchecked(), ItemPtr -- 11
m_ObjectState, ItemEnum(FxObjectState) -- 12
NewState, ItemEnum(FxObjectState) -- 13
}
#typev  FxObject_hpp279 10     "%0Object %10!p!, WDFOBJECT %11!p! transitioning from %12!s! to %13!s!"      //   GLOBALS=m_Globals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGOBJECT FUNC=FxObject::PerformDisposingDisposeChildrenLocked
{
this, ItemPtr -- 10
GetObjectHandleUnchecked(), ItemPtr -- 11
m_ObjectState, ItemEnum(FxObjectState) -- 12
NewState, ItemEnum(FxObjectState) -- 13
}
#typev  FxObject_hpp279 10     "%0Object %10!p!, WDFOBJECT %11!p! transitioning from %12!s! to %13!s!"      //   GLOBALS=m_Globals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGOBJECT FUNC=FxObject::PerformDisposingDisposeChildrenLocked
{
this, ItemPtr -- 10
GetObjectHandleUnchecked(), ItemPtr -- 11
m_ObjectState, ItemEnum(FxObjectState) -- 12
NewState, ItemEnum(FxObjectState) -- 13
}
#typev  FxObject_hpp279 10     "%0Object %10!p!, WDFOBJECT %11!p! transitioning from %12!s! to %13!s!"      //   GLOBALS=m_Globals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGOBJECT FUNC=FxObject::DeferredDisposeWorkItem
{
this, ItemPtr -- 10
GetObjectHandleUnchecked(), ItemPtr -- 11
m_ObjectState, ItemEnum(FxObjectState) -- 12
NewState, ItemEnum(FxObjectState) -- 13
}
#typev  FxObject_hpp279 10     "%0Object %10!p!, WDFOBJECT %11!p! transitioning from %12!s! to %13!s!"      //   GLOBALS=m_Globals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGOBJECT FUNC=FxObject::EarlyDispose
{
this, ItemPtr -- 10
GetObjectHandleUnchecked(), ItemPtr -- 11
m_ObjectState, ItemEnum(FxObjectState) -- 12
NewState, ItemEnum(FxObjectState) -- 13
}
#typev  FxObject_hpp279 10     "%0Object %10!p!, WDFOBJECT %11!p! transitioning from %12!s! to %13!s!"      //   GLOBALS=m_Globals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGOBJECT FUNC=FxObject::QueueDeferredDisposeLocked
{
this, ItemPtr -- 10
GetObjectHandleUnchecked(), ItemPtr -- 11
m_ObjectState, ItemEnum(FxObjectState) -- 12
NewState, ItemEnum(FxObjectState) -- 13
}
#typev  FxObject_hpp279 10     "%0Object %10!p!, WDFOBJECT %11!p! transitioning from %12!s! to %13!s!"      //   GLOBALS=m_Globals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGOBJECT FUNC=FxObject::DeleteWorkerAndUnlock
{
this, ItemPtr -- 10
GetObjectHandleUnchecked(), ItemPtr -- 11
m_ObjectState, ItemEnum(FxObjectState) -- 12
NewState, ItemEnum(FxObjectState) -- 13
}
#typev  FxObject_hpp279 10     "%0Object %10!p!, WDFOBJECT %11!p! transitioning from %12!s! to %13!s!"      //   GLOBALS=m_Globals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGOBJECT FUNC=FxObject::DeleteObject
{
this, ItemPtr -- 10
GetObjectHandleUnchecked(), ItemPtr -- 11
m_ObjectState, ItemEnum(FxObjectState) -- 12
NewState, ItemEnum(FxObjectState) -- 13
}
#typev  FxObject_hpp279 10     "%0Object %10!p!, WDFOBJECT %11!p! transitioning from %12!s! to %13!s!"      //   GLOBALS=m_Globals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGOBJECT FUNC=FxObject::DeleteObject
{
this, ItemPtr -- 10
GetObjectHandleUnchecked(), ItemPtr -- 11
m_ObjectState, ItemEnum(FxObjectState) -- 12
NewState, ItemEnum(FxObjectState) -- 13
}
#typev  FxObject_hpp662 11     "%0Object %10!p!, WDFOBJECT %11!p!, state %12!s! dropping event %13!s!"      //   GLOBALS=m_Globals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGOBJECT FUNC=FxObject::DeleteObject
{
this, ItemPtr -- 10
GetObjectHandleUnchecked(), ItemPtr -- 11
m_ObjectState, ItemEnum(FxObjectState) -- 12
Event, ItemEnum(FxObjectDroppedEvent) -- 13
}
#typev  FxObject_hpp662 11     "%0Object %10!p!, WDFOBJECT %11!p!, state %12!s! dropping event %13!s!"      //   GLOBALS=m_Globals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGOBJECT FUNC=FxObject::DeleteObject
{
this, ItemPtr -- 10
GetObjectHandleUnchecked(), ItemPtr -- 11
m_ObjectState, ItemEnum(FxObjectState) -- 12
Event, ItemEnum(FxObjectDroppedEvent) -- 13
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxObject_hpp662 11     "%0Object %10!p!, WDFOBJECT %11!p!, state %12!s! dropping event %13!s!"      //   GLOBALS=m_Globals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGOBJECT FUNC=FxObject::RemoveChildObjectInternal
{
this, ItemPtr -- 10
GetObjectHandleUnchecked(), ItemPtr -- 11
m_ObjectState, ItemEnum(FxObjectState) -- 12
Event, ItemEnum(FxObjectDroppedEvent) -- 13
}
#typev  FxObject_hpp662 11     "%0Object %10!p!, WDFOBJECT %11!p!, state %12!s! dropping event %13!s!"      //   GLOBALS=m_Globals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGOBJECT FUNC=FxObject::AddChildObjectInternal
{
this, ItemPtr -- 10
GetObjectHandleUnchecked(), ItemPtr -- 11
m_ObjectState, ItemEnum(FxObjectState) -- 12
Event, ItemEnum(FxObjectDroppedEvent) -- 13
}
#typev  FxObject_hpp662 11     "%0Object %10!p!, WDFOBJECT %11!p!, state %12!s! dropping event %13!s!"      //   GLOBALS=m_Globals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGOBJECT FUNC=FxObject::AssignParentObject
{
this, ItemPtr -- 10
GetObjectHandleUnchecked(), ItemPtr -- 11
m_ObjectState, ItemEnum(FxObjectState) -- 12
Event, ItemEnum(FxObjectDroppedEvent) -- 13
}
#typev  FxObject_hpp279 10     "%0Object %10!p!, WDFOBJECT %11!p! transitioning from %12!s! to %13!s!"      //   GLOBALS=m_Globals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGOBJECT FUNC=FxObject::~FxObject
{
this, ItemPtr -- 10
GetObjectHandleUnchecked(), ItemPtr -- 11
m_ObjectState, ItemEnum(FxObjectState) -- 12
NewState, ItemEnum(FxObjectState) -- 13
}
#enumv FxObjectState
{
FxObjectStateInvalid,0x0
FxObjectStateCreated,0x1
FxObjectStateDisposed,0x2
FxObjectStateDisposingEarly,0x3
FxObjectStateDisposingDisposeChildren,0x4
FxObjectStateDeferedDisposing,0x5
FxObjectStateDeferedDeleting,0x6
FxObjectStateWaitingForEarlyDispose,0x7
FxObjectStateWaitingForParentDeleteAndDisposed,0x8
FxObjectStateDeletedDisposing,0x9
FxObjectStateDeletedAndDisposed,0xA
FxObjectStateDeferedDestroy,0xB
FxObjectStateDestroyed,0xC
FxObjectStateMaximum,0xD
}
#enumv FxObjectDroppedEvent
{
FxObjectDroppedEventAssignParentObject,0x0
FxObjectDroppedEventAddChildObjectInternal,0x1
FxObjectDroppedEventRemoveChildObjectInternal,0x2
FxObjectDroppedEventDeleteObject,0x3
FxObjectDroppedEventPerformEarlyDispose,0x4
FxObjectDroppedEventRemoveParentAssignment,0x5
FxObjectDroppedEventParentDeleteEvent,0x6
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
80086f8b-6b01-45ac-dd58-6ef38233e4de     general // SRC=FxIoTarget.cpp MJ= MN=
#typev  FxIoTarget_cpp788 13     "%0Init WDFIOTARGET %10!p!, unexpected NULL, m_InStackDevice %11!p!, m_TargetDevice %12!p!, m_TargetPdo %13!p!, m_Driver %14!p!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::Init
{
GetObjectHandle(), ItemPtr -- 10
m_InStackDevice, ItemPtr -- 11
m_TargetDevice, ItemPtr -- 12
m_TargetPdo, ItemPtr -- 13
m_Driver, ItemPtr -- 14
}
#typev  FxIoTarget_cpp536 12     "%0WDFIOTARGET %10!p! stopped, but is current in the %11!s! state, not started or stopped"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::GotoStopState
{
GetHandle(), ItemPtr -- 10
m_State, ItemEnum(_WDF_IO_TARGET_STATE) -- 11
}
#typev  FxIoTarget_cpp1494 27     "%0WDFIOTARGET %10!p!, WDFREQUEST %11!p!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::RemoveCompletedRequestLocked
{
GetObjectHandle(), ItemPtr -- 10
Request->GetTraceObjectHandle(), ItemPtr -- 11
}
#typev  FxIoTarget_cpp345 11     "%0WDFIOTARGET %10!p!, WDFREQUEST %11!p! is being canceled on another thread, allowing other thread to complete request, not resending"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::DrainPendedRequestsLocked
{
GetObjectHandle(), ItemPtr -- 10
pRequest->GetTraceObjectHandle(), ItemPtr -- 11
}
#typev  FxIoTarget_cpp2376 52     "%0Could not retrieve buffer %10!d!, status %11!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::FormatInternalIoctlOthersRequest
{
i+1, ItemLong -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxIoTarget_cpp2341 51     "%0Could not allocate context for request"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::FormatInternalIoctlOthersRequest
{
}
#typev  FxIoTarget_cpp2211 46     "%0Could not retrieve output buffer, %10!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::FormatIoctlRequest
{
status, ItemNTSTATUS -- 10
}
#typev  FxIoTarget_cpp2196 45     "%0Could not retrieve input buffer, %10!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::FormatIoctlRequest
{
status, ItemNTSTATUS -- 10
}
#typev  FxIoTarget_cpp2185 44     "%0Could not allocate common buffer"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::FormatIoctlRequest
{
}
#typev  FxIoTarget_cpp2264 48     "%0Could not retrieve output buffer as a PMDL, %10!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::FormatIoctlRequest
{
status, ItemNTSTATUS -- 10
}
#typev  FxIoTarget_cpp2240 47     "%0Could not retrieve input buffer as a PVOID, %10!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::FormatIoctlRequest
{
status, ItemNTSTATUS -- 10
}
#typev  FxIoTarget_cpp2288 50     "%0Could not retrieve input buffer as a PVOID, %10!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::FormatIoctlRequest
{
status, ItemNTSTATUS -- 10
}
#typev  FxIoTarget_cpp2276 49     "%0Could not retrieve output buffer as a PVOID, %10!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::FormatIoctlRequest
{
status, ItemNTSTATUS -- 10
}
#typev  FxIoTarget_cpp2131 43     "%0Could not allocate context for request"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::FormatIoctlRequest
{
}
#typev  FxIoTarget_cpp2047 41     "%0Could not retrieve io buffer as a PVOID, %10!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::FormatIoRequest
{
status, ItemNTSTATUS -- 10
}
#typev  FxIoTarget_cpp1980 39     "%0Could not retrieve io buffer, %10!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::FormatIoRequest
{
status, ItemNTSTATUS -- 10
}
#typev  FxIoTarget_cpp1967 38     "%0Could not allocate common buffer"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::FormatIoRequest
{
}
#typev  FxIoTarget_cpp2029 40     "%0Could not retrieve io buffer as a PMDL, %10!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::FormatIoRequest
{
status, ItemNTSTATUS -- 10
}
#typev  FxIoTarget_cpp2057 42     "%0Trying to format closed WDFIOTARGET %10!p!, %11!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::FormatIoRequest
{
GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxIoTarget_cpp1921 37     "%0could not allocate context for request"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::FormatIoRequest
{
}
#typev  FxIoTarget_cpp1834 36     "%0WDFIOTARGET %10!p!, setting stop event %11!p!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::RequestCompletionRoutine
{
GetObjectHandle(), ItemPtr -- 10
m_SentIoEvent.GetEvent(), ItemPtr -- 11
}
#typev  FxIoTarget_cpp1826 35     "%0WDFREQUEST %10!p! completed in completion routine"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::RequestCompletionRoutine
{
Request->GetTraceObjectHandle(), ItemPtr -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxIoTarget_cpp1817 34     "%0WDFREQUEST %10!p! deferring completion due to outstanding completion references"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::RequestCompletionRoutine
{
Request->GetTraceObjectHandle(), ItemPtr -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxIoTarget_cpp1771 33     "%0WDFREQUEST %10!p!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::RequestCompletionRoutine
{
Request->GetTraceObjectHandle(), ItemPtr -- 10
}
#typev  FxIoTarget_cpp1740 32     "%0WDFIOTARGET %10!p!, setting stop event %11!p!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::CompleteCanceledRequest
{
GetObjectHandle(), ItemPtr -- 10
m_SentIoEvent.GetEvent(), ItemPtr -- 11
}
#typev  FxIoTarget_cpp1733 31     "%0WDFREQUEST %10!p! completed in from cancel"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::CompleteCanceledRequest
{
Request->GetTraceObjectHandle(), ItemPtr -- 10
}
#typev  FxIoTarget_cpp2412 53     "%0Pended WDFREQUEST %10!p! canceled"      //   GLOBALS=pRequest->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::_RequestCancelled
{
pRequest->GetTraceObjectHandle(), ItemPtr -- 10
}
#typev  FxIoTarget_cpp1696 30     "%0WDFIOTARGET %10!p!, setting stop event %11!p! in timer callback"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::TimerCallback
{
GetObjectHandle(), ItemPtr -- 10
m_SentIoEvent.GetEvent(), ItemPtr -- 11
}
#typev  FxIoTarget_cpp1687 29     "%0WDFREQUEST %10!p! completed in timer callback"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::TimerCallback
{
Request->GetTraceObjectHandle(), ItemPtr -- 10
}
#typev  FxIoTarget_cpp1625 28     "%0WDFIOTARGET %10!p!, WDFREQUEST %11!p!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::TimerCallback
{
GetObjectHandle(), ItemPtr -- 10
Request->GetTraceObjectHandle(), ItemPtr -- 11
}
#typev  FxIoTarget_cpp1139 22     "%0Pending WDFREQUEST %10!p!, WDFIOTARGET %11!p! is paused, %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::SubmitLocked
{
Request->GetTraceObjectHandle(), ItemPtr -- 10
GetObjectHandle(), ItemPtr -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxIoTarget_cpp1174 23     "%0Starting timer on WDFREQUEST %10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::SubmitLocked
{
Request->GetTraceObjectHandle(), ItemPtr -- 10
}
#typev  FxIoTarget_cpp1028 21     "%0failing WDFREQUEST %10!p!, WDFIOTARGET %11!p! not accepting reqeusts, state %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::SubmitLocked
{
Request->GetTraceObjectHandle(), ItemPtr -- 10
GetObjectHandle(), ItemPtr -- 11
m_State, ItemEnum(_WDF_IO_TARGET_STATE) -- 12
}
#typev  FxIoTarget_cpp995 20     "%0ignoring WDFIOTARGET %10!p! state, sending WDFREQUEST %11!p!, state %12!d!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::SubmitLocked
{
GetObjectHandle(), ItemPtr -- 10
Request->GetTraceObjectHandle(), ItemPtr -- 11
m_State, ItemLong -- 12
}
#typev  FxIoTarget_cpp983 19     "%0WDFIOTARGET %10!p! state %11!s!, sending WDFREQUEST %12!p! cannot ignore current state, %13!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::SubmitLocked
{
GetObjectHandle(), ItemPtr -- 10
m_State, ItemEnum(_WDF_IO_TARGET_STATE) -- 11
Request->GetTraceObjectHandle(), ItemPtr -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxIoTarget_cpp956 18     "%0WDFREQUEST %10!p!, could not create timer, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::SubmitLocked
{
Request->GetTraceObjectHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxIoTarget_cpp924 17     "%0WDFREQUEST %10!p!, PIRP %11!p! does not have enough stack locations %12!d! for this WDFIOTARGET %13!p! (requires %14!d! locations),  %15!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::SubmitLocked
{
Request->GetTraceObjectHandle(), ItemPtr -- 10
irp, ItemPtr -- 11
irp->CurrentLocation - 1, ItemLong -- 12
GetHandle(), ItemPtr -- 13
m_TargetStackSize, ItemLong -- 14
status, ItemNTSTATUS -- 15
}
#typev  FxIoTarget_cpp907 16     "%0WDFREQUEST %10!p! is already pending on a WDFIOTARGET"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::SubmitLocked
{
Request->GetTraceObjectHandle(), ItemPtr -- 10
}
#typev  FxIoTarget_cpp897 15     "%0WDFREQUEST %10!p! has not been formatted, cannot send, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::SubmitLocked
{
Request->GetTraceObjectHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxIoTarget_cpp866 14     "%0WDFREQUEST %10!p! already sent to a target"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::SubmitLocked
{
Request->GetTraceObjectHandle(), ItemPtr -- 10
}
#typev  FxIoTarget_cpp158 10     "%0Sending WDFREQUEST %10!p!, Irp %11!p!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::SubmitPendedRequest
{
Request->GetTraceObjectHandle(), ItemPtr -- 10
Request->GetSubmitIrp(), ItemPtr -- 11
}
#typev  FxIoTarget_cpp1299 26     "%0Sending WDFREQUEST %10!p!, Irp %11!p!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::SubmitSync
{
Request->GetTraceObjectHandle(), ItemPtr -- 10
Request->GetSubmitIrp(), ItemPtr -- 11
}
#typev  FxIoTarget_cpp1286 25     "%0action 0x%10!x!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::SubmitSync
{
action, ItemLong -- 10
}
#typev  FxIoTarget_cpp1231 24     "%0WDFIOTARGET %10!p!, WDFREQUEST %11!p!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTarget::SubmitSync
{
GetObjectHandle(), ItemPtr -- 10
Request->GetTraceObjectHandle(), ItemPtr -- 11
}
#enumv _WDF_IO_TARGET_STATE
{
WdfIoTargetStateUndefined,0x0
WdfIoTargetStarted,0x1
WdfIoTargetStopped,0x2
WdfIoTargetClosedForQueryRemove,0x3
WdfIoTargetClosed,0x4
WdfIoTargetDeleted,0x5
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
83f85279-2bd5-2114-fd08-c735a00ba07a     general // SRC=FxIoTargetRemote.cpp MJ= MN=
#typev  FxIoTargetRemote_cpp790 34     "%0WDFIOTARGET %10!p! cleared pointers %11!p! state %12!s!, open state %13!d!, pdo %14!p!, fileobj %15!p!, handle %16!p!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::ClearTargetPointers
{
GetObjectHandle(), ItemPtr -- 10
m_ClearedPointers, ItemPtr -- 11
m_State, ItemEnum(_WDF_IO_TARGET_STATE) -- 12
m_OpenState, ItemLong -- 13
m_TargetPdo, ItemPtr -- 14
m_TargetFileObject, ItemPtr -- 15
m_TargetHandle, ItemPtr -- 16
}
#typev  FxIoTargetRemote_cpp777 33     "%0WDFIOTARGET %10!p! closing handle %11!p! on close"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::Close
{
GetObjectHandle(), ItemPtr -- 10
pointers.TargetHandle, ItemPtr -- 11
}
#typev  FxIoTargetRemote_cpp769 32     "%0WDFIOTARGET %10!p! derefing FileObj %11!p! on close"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::Close
{
GetObjectHandle(), ItemPtr -- 10
pointers.TargetFileObject, ItemPtr -- 11
}
#typev  FxIoTargetRemote_cpp760 31     "%0WDFIOTARGET %10!p! derefing PDO %11!p! on close"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::Close
{
GetObjectHandle(), ItemPtr -- 10
pointers.TargetPdo, ItemPtr -- 11
}
#typev  FxIoTargetRemote_cpp728 30     "%0target %10!p!, waiting for stop to complete"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::Close
{
GetObjectHandle(), ItemPtr -- 10
}
#typev  FxIoTargetRemote_cpp692 29     "%0WDFIOTARGET %10!p!:  fileobj %11!p!, devobj %12!p!, handle %13!p!, notify handle %14!p!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::Close
{
GetObjectHandle(), ItemPtr -- 10
m_TargetFileObject, ItemPtr -- 11
m_TargetDevice, ItemPtr -- 12
m_TargetHandle, ItemPtr -- 13
m_TargetNotifyHandle, ItemPtr -- 14
}
#typev  FxIoTargetRemote_cpp682 28     "%0Closing target %10!p! which is not open"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::Close
{
GetObjectHandle(), ItemPtr -- 10
}
#typev  FxIoTargetRemote_cpp666 27     "%0Closing WDFIOTARGET %10!p!, reason:   close"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::Close
{
GetObjectHandle(), ItemPtr -- 10
}
#typev  FxIoTargetRemote_cpp660 26     "%0Closing WDFIOTARGET %10!p!, reason:   query remove"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::Close
{
GetObjectHandle(), ItemPtr -- 10
}
#typev  FxIoTargetRemote_cpp652 25     "%0Closing target %10!p!, reason:   delete"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::Close
{
GetObjectHandle(), ItemPtr -- 10
}
#typev  FxIoTargetRemote_cpp638 24     "%0Closing target %10!p! which is opening, waiting on event %11!p!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::Close
{
GetObjectHandle(), ItemPtr -- 10
m_OpenedEvent.GetEvent(), ItemPtr -- 11
}
#typev  FxIoTargetRemote_cpp613 23     "%0enter:  Target %10!p!, reason %11!d!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::Close
{
GetObjectHandle(), ItemPtr -- 10
Reason, ItemLong -- 11
}
#typev  FxIoTargetRemote_cpp125 12     "%0Could not allocate memory for WDFIOTARGET, %10!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::_Create
{
status, ItemNTSTATUS -- 10
}
#typev  FxIoTargetRemote_cpp108 11     "%0Attributes->ParentObject 0x%10!p! ancestor is WDFDEVICE %11!p!, but not the same WDFDEVICE 0x%12!p! passed to WdfIoTargetCreate, %13!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::_Create
{
Attributes->ParentObject, ItemPtr -- 10
pSearchDevice->GetHandle(), ItemPtr -- 11
Device->GetHandle(), ItemPtr -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxIoTargetRemote_cpp97 10     "%0Attributes->ParentObject 0x%10!p! must have WDFDEVICE as an eventual ancestor, %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::_Create
{
Attributes->ParentObject, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxIoTargetRemote_cpp558 22     "%0Target %10!p! could not transition to started state, %11!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::Open
{
GetObjectHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxIoTargetRemote_cpp527 21     "%0target %10!p!, could not register pnp notification, %11!s! not treated as an error"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::Open
{
GetObjectHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxIoTargetRemote_cpp393 20     "%0Target %10!p!, could not convert handle %11!p! to fileobject, status %12!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::Open
{
GetObjectHandle(), ItemPtr -- 10
m_TargetHandle, ItemPtr -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxIoTargetRemote_cpp384 19     "%0Target %10!p!, could not convert filobj %11!p! to devobj"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::Open
{
GetObjectHandle(), ItemPtr -- 10
m_TargetFileObject, ItemPtr -- 11
}
#typev  FxIoTargetRemote_cpp360 18     "%0ZwCreateFile for target %10!p! returned status %11!s!, info 0x%12!x!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::Open
{
GetObjectHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
(ULONG) ioStatus.Information, ItemLong -- 12
}
#typev  FxIoTargetRemote_cpp267 17     "%0Opening target %10!p!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::Open
{
GetObjectHandle(), ItemPtr -- 10
}
#typev  FxIoTargetRemote_cpp260 16     "%0Opening an already open target %10!p!, open state %11!d!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::Open
{
GetObjectHandle(), ItemPtr -- 10
m_OpenState, ItemLong -- 11
}
#typev  FxIoTargetRemote_cpp250 15     "%0Opening target %10!p! which is removed, state %11!d!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::Open
{
GetObjectHandle(), ItemPtr -- 10
m_State, ItemLong -- 11
}
#typev  FxIoTargetRemote_cpp232 14     "%0Could not allocate memory for target name for handle %10!p!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::Open
{
GetObjectHandle(), ItemPtr -- 10
}
#typev  FxIoTargetRemote_cpp218 13     "%0Could not allocate memory for target name for handle %10!p!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::Open
{
GetObjectHandle(), ItemPtr -- 10
}
#typev  FxIoTargetRemote_cpp930 40     "%0Target %10!p!: remove canceled, default action (reopen)"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::_PlugPlayNotification
{
pThis->GetObjectHandle(), ItemPtr -- 10
}
#typev  FxIoTargetRemote_cpp920 39     "%0Target %10!p!: remove canceled notification"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::_PlugPlayNotification
{
pThis->GetObjectHandle(), ItemPtr -- 10
}
#typev  FxIoTargetRemote_cpp907 38     "%0Target %10!p!: remove complete, default action (close)"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::_PlugPlayNotification
{
pThis->GetObjectHandle(), ItemPtr -- 10
}
#typev  FxIoTargetRemote_cpp895 37     "%0Target %10!p!: remove complete notification"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::_PlugPlayNotification
{
pThis->GetObjectHandle(), ItemPtr -- 10
}
#typev  FxIoTargetRemote_cpp882 36     "%0Target %10!p!: query remove, default action (close for QR)"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::_PlugPlayNotification
{
pThis->GetObjectHandle(), ItemPtr -- 10
}
#typev  FxIoTargetRemote_cpp867 35     "%0Target %10!p!: query remove notification"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetRemote::_PlugPlayNotification
{
pThis->GetObjectHandle(), ItemPtr -- 10
}
#enumv _WDF_IO_TARGET_STATE
{
WdfIoTargetStateUndefined,0x0
WdfIoTargetStarted,0x1
WdfIoTargetStopped,0x2
WdfIoTargetClosedForQueryRemove,0x3
WdfIoTargetClosed,0x4
WdfIoTargetDeleted,0x5
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
86d65c59-faf1-ba07-1fc9-d831073e0f19     pnp // SRC=NotPowerPolicyOwnerStateMachine.cpp MJ= MN=
#typev  NotPowerPolicyOwnerStateMachine_cpp220 10     "%0!devobj 0x%10!p! entering not power policy owner state %11!s! from %12!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::NotPowerPolicyOwnerEnterNewState
{
m_Device->GetDeviceObject(), ItemPtr -- 10
newState, ItemEnum(_WDF_DEVICE_POWER_POLICY_STATE) -- 11
currentState, ItemEnum(_WDF_DEVICE_POWER_POLICY_STATE) -- 12
}
#enumv _WDF_DEVICE_POWER_POLICY_STATE
{
WdfDevStatePwrPolInvalid,0x0
WdfDevStatePwrPolObjectCreated,0x500
WdfDevStatePwrPolStarting,0x501
WdfDevStatePwrPolStartingSucceeded,0x502
WdfDevStatePwrPolStartingFailed,0x503
WdfDevStatePwrPolStartingDecideS0Wake,0x504
WdfDevStatePwrPolStartedIdleCapable,0x505
WdfDevStatePwrPolTimerExpiredNoWake,0x506
WdfDevStatePwrPolTimerExpiredNoWakeCompletePowerDown,0x507
WdfDevStatePwrPolWaitingUnarmed,0x508
WdfDevStatePwrPolWaitingUnarmedQueryIdle,0x509
WdfDevStatePwrPolS0NoWakePowerUp,0x50A
WdfDevStatePwrPolS0NoWakeCompletePowerUp,0x50B
WdfDevStatePwrPolSystemSleepFromDeviceWaitingUnarmed,0x50C
WdfDevStatePwrPolSystemSleepNeedWake,0x50D
WdfDevStatePwrPolSystemSleepNeedWakeCompletePowerUp,0x50E
WdfDevStatePwrPolSystemSleepPowerRequestFailed,0x50F
WdfDevStatePwrPolCheckPowerPageable,0x510
WdfDevStatePwrPolSleepingWakeWakeArrived,0x511
WdfDevStatePwrPolSleepingWakeRevertArmWake,0x512
WdfDevStatePwrPolSystemAsleepWakeArmed,0x513
WdfDevStatePwrPolSystemWakeDeviceWakeEnabled,0x514
WdfDevStatePwrPolSystemWakeDeviceWakeEnabledWakeCanceled,0x515
WdfDevStatePwrPolSystemWakeDeviceWakeDisarm,0x516
WdfDevStatePwrPolSystemWakeDeviceWakeTriggered,0x517
WdfDevStatePwrPolSystemWakeDeviceWakeTriggeredS0,0x518
WdfDevStatePwrPolSystemWakeDeviceWokeDisarm,0x519
WdfDevStatePwrPolSleepingWakeWakeArrivedNP,0x851A
WdfDevStatePwrPolSleepingWakeRevertArmWakeNP,0x851B
WdfDevStatePwrPolSleepingWakePowerDownFailed,0x51C
WdfDevStatePwrPolSleepingWakePowerDownFailedWakeCanceled,0x51D
WdfDevStatePwrPolSystemAsleepWakeArmedNP,0x851E
WdfDevStatePwrPolSystemWakeDeviceWakeEnabledNP,0x851F
WdfDevStatePwrPolSystemWakeDeviceWakeEnabledWakeCanceledNP,0x8520
WdfDevStatePwrPolSystemWakeDeviceWakeDisarmNP,0x8521
WdfDevStatePwrPolSystemWakeDeviceWakeTriggeredNP,0x8522
WdfDevStatePwrPolSystemWakeDeviceWakeTriggeredS0NP,0x8523
WdfDevStatePwrPolSystemWakeDeviceWokeDisarmNP,0x8524
WdfDevStatePwrPolSystemWakeDeviceWakeCompletePowerUp,0x525
WdfDevStatePwrPolSleeping,0x526
WdfDevStatePwrPolSleepingNoWakePowerDown,0x527
WdfDevStatePwrPolSleepingNoWakeCompletePowerDown,0x528
WdfDevStatePwrPolSleepingNoWakeDxRequestFailed,0x529
WdfDevStatePwrPolSleepingWakePowerDown,0x52A
WdfDevStatePwrPolSleepingSendWake,0x52B
WdfDevStatePwrPolSystemAsleepNoWake,0x52C
WdfDevStatePwrPolSystemWakeDeviceWakeDisabled,0x52D
WdfDevStatePwrPolSystemWakeDeviceToD0,0x52E
WdfDevStatePwrPolSystemWakeDeviceToD0CompletePowerUp,0x52F
WdfDevStatePwrPolSystemWakeQueryIdle,0x530
WdfDevStatePwrPolStartedWakeCapable,0x531
WdfDevStatePwrPolTimerExpiredDecideUsbSS,0x532
WdfDevStatePwrPolTimerExpiredWakeCapablePowerDown,0x533
WdfDevStatePwrPolTimerExpiredWakeCapableSendWake,0x534
WdfDevStatePwrPolTimerExpiredWakeCapableUsbSS,0x535
WdfDevStatePwrPolTimerExpiredWakeCapableWakeArrived,0x536
WdfDevStatePwrPolTimerExpiredWakeCapableCancelWake,0x537
WdfDevStatePwrPolTimerExpiredWakeCapableWakeCanceled,0x538
WdfDevStatePwrPolTimerExpiredWakeCapableCleanup,0x539
WdfDevStatePwrPolTimerExpiredWakeCapableDxAllocFailed,0x53A
WdfDevStatePwrPolTimerExpiredWakeCompletedPowerDown,0x53B
WdfDevStatePwrPolTimerExpiredWakeCompletedPowerUp,0x53C
WdfDevStatePwrPolWaitingArmedUsbSS,0x53D
WdfDevStatePwrPolWaitingArmed,0x53E
WdfDevStatePwrPolWaitingArmedQueryIdle,0x53F
WdfDevStatePwrPolIoPresentArmed,0x540
WdfDevStatePwrPolIoPresentArmedWakeCanceled,0x541
WdfDevStatePwrPolS0WakeDisarm,0x542
WdfDevStatePwrPolS0WakeCompletePowerUp,0x543
WdfDevStatePwrPolTimerExpiredWakeSucceeded,0x544
WdfDevStatePwrPolTimerExpiredWakeCompletedDisarm,0x545
WdfDevStatePwrPolTimerExpiredWakeCapableWakeSucceeded,0x546
WdfDevStatePwrPolTimerExpiredWakeCapableWakeFailed,0x547
WdfDevStatePwrPolWakeFailedUsbSS,0x548
WdfDevStatePwrPolTimerExpiredWakeCapablePowerDownFailedCancelWake,0x549
WdfDevStatePwrPolTimerExpiredWakeCapablePowerDownFailedWakeCanceled,0x54A
WdfDevStatePwrPolTimerExpiredWakeCapablePowerDownFailedUsbSS,0x54B
WdfDevStatePwrPolCancelingWakeForSystemSleep,0x54C
WdfDevStatePwrPolCancelingWakeForSystemSleepWakeCanceled,0x54D
WdfDevStatePwrPolDisarmingWakeForSystemSleepCompletePowerUp,0x54E
WdfDevStatePwrPolPowerUpForSystemSleepFailed,0x54F
WdfDevStatePwrPolWokeFromS0UsbSS,0x550
WdfDevStatePwrPolWokeFromS0,0x551
WdfDevStatePwrPolWokeFromS0NotifyDriver,0x552
WdfDevStatePwrPolStoppingResetDevice,0x553
WdfDevStatePwrPolStoppingResetDeviceCompletePowerUp,0x554
WdfDevStatePwrPolStoppingResetDeviceFailed,0x555
WdfDevStatePwrPolStoppingD0,0x556
WdfDevStatePwrPolStoppingD0Failed,0x557
WdfDevStatePwrPolStoppingDisarmWake,0x558
WdfDevStatePwrPolStoppingDisarmWakeCancelWake,0x559
WdfDevStatePwrPolStoppingDisarmWakeWakeCanceled,0x55A
WdfDevStatePwrPolStopping,0x55B
WdfDevStatePwrPolStoppingFailed,0x55C
WdfDevStatePwrPolStoppingSendStatus,0x55D
WdfDevStatePwrPolStoppingCancelTimer,0x55E
WdfDevStatePwrPolStoppingWaitForIdleTimeout,0x55F
WdfDevStatePwrPolStoppingCancelUsbSS,0x560
WdfDevStatePwrPolStoppingWaitForUsbSSCompletion,0x561
WdfDevStatePwrPolStoppingCancelWake,0x562
WdfDevStatePwrPolStopped,0x563
WdfDevStatePwrPolCancelUsbSS,0x564
WdfDevStatePwrPolStarted,0x565
WdfDevStatePwrPolStartedCancelTimer,0x566
WdfDevStatePwrPolStartedWaitForIdleTimeout,0x567
WdfDevStatePwrPolStartedWakeCapableCancelTimerForSleep,0x568
WdfDevStatePwrPolStartedWakeCapableWaitForIdleTimeout,0x569
WdfDevStatePwrPolStartedWakeCapableSleepingUsbSS,0x56A
WdfDevStatePwrPolStartedIdleCapableCancelTimerForSleep,0x56B
WdfDevStatePwrPolStartedIdleCapableWaitForIdleTimeout,0x56C
WdfDevStatePwrPolDeviceD0PowerRequestFailed,0x56D
WdfDevStatePwrPolDevicePowerRequestFailed,0x56E
WdfDevStatePwrPolGotoDx,0x56F
WdfDevStatePwrPolGotoDxInDx,0x570
WdfDevStatePwrPolDx,0x571
WdfDevStatePwrPolGotoD0,0x572
WdfDevStatePwrPolGotoD0InD0,0x573
WdfDevStatePwrPolFinal,0x574
WdfDevStatePwrPolSleepingPowerDownNotProcessed,0x575
WdfDevStatePwrPolTimerExpiredWakeCapablePowerDownNotProcessed,0x576
WdfDevStatePwrPolTimerExpiredNoWakePowerDownNotProcessed,0x577
WdfDevStatePwrPolNull,0x578
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
896755ce-9251-2b8d-f176-36bedfe2fdc9     core // SRC=FxMemoryBufferPreallocatedAPI.cpp MJ= MN=
#typev  FxMemoryBufferPreallocatedAPI_cpp138 11     "%0Zero BufferSize not allowed, %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfMemoryAssignBuffer
{
status, ItemNTSTATUS -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxMemoryBufferPreallocatedAPI_cpp89 10     "%0Zero BufferSize not allowed, %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfMemoryCreatePreallocated
{
status, ItemNTSTATUS -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
8bde9d35-ffe9-eaf4-ff66-2654bf338144     core // SRC=FxDeviceApi.cpp MJ= MN=
#typev  FxDeviceApi_cpp2202 64     "%0No default Queue configured for Device 0x%10!p!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGIO FUNC=imp_WdfDeviceGetDefaultQueue
{
Device, ItemPtr -- 10
}
#typev  FxDeviceApi_cpp1755 53     "%0WDFDEVICE 0x%10!p! PowerCapabilities WDF_TRI_STATE %11!s! value out of range, value is %12!d!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceSetPowerCapabilities
{
Device, ItemPtr -- 10
offsets[i].Name, ItemString -- 11
value, ItemLong -- 12
}
#typev  FxDeviceApi_cpp1770 54     "%0WDFDEVICE 0x%10!p! PowerCapabilities DeviceState is invalid"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceSetPowerCapabilities
{
Device, ItemPtr -- 10
}
#typev  FxDeviceApi_cpp1783 55     "%0WDFDEVICE 0x%10!p! PowerCapabilities DeviceWake %11!d! is out of range"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceSetPowerCapabilities
{
Device, ItemPtr -- 10
PowerCapabilities->DeviceWake, ItemLong -- 11
}
#typev  FxDeviceApi_cpp1796 56     "%0WDFDEVICE 0x%10!p! PowerCapabilities SystemWake %11!d! is out of range"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceSetPowerCapabilities
{
Device, ItemPtr -- 10
PowerCapabilities->SystemWake, ItemLong -- 11
}
#typev  FxDeviceApi_cpp1825 58     "%0WDFDEVICE 0x%10!p! PowerCapabilities IdealDxStateForSx %11!d! is out of range"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceSetPowerCapabilities
{
Device, ItemPtr -- 10
PowerCapabilities->IdealDxStateForSx, ItemLong -- 11
}
#typev  FxDeviceApi_cpp1808 57     "%0WDFDEVICE 0x%10!p! PowerCapabilities IdealDxStateForSx %11!d! can only be set by the power policy owner"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceSetPowerCapabilities
{
Device, ItemPtr -- 10
PowerCapabilities->IdealDxStateForSx, ItemLong -- 11
}
#typev  FxDeviceApi_cpp1724 52     "%0WDFDEVICE 0x%10!p! PowerCapabilities Size %11!d!, expected %12!d!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceSetPowerCapabilities
{
Device, ItemPtr -- 10
PowerCapabilities->Size, ItemLong -- 11
sizeof(WDF_DEVICE_POWER_CAPABILITIES), ItemLong -- 12
}
#typev  FxDeviceApi_cpp1466 45     "%0Invalid FailedAction %10!d!"      //   GLOBALS=GetFxDriverGlobals(DriverGlobals) LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceSetFailed
{
FailedAction, ItemLong -- 10
}
#typev  FxDeviceApi_cpp1478 46     "%0WDFDEVICE %10!p!, !devobj %11!p! SetFailed %12!s!"      //   GLOBALS=GetFxDriverGlobals(DriverGlobals) LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceSetFailed
{
Device, ItemPtr -- 10
pDevice->GetDeviceObject(), ItemPtr -- 11
FailedAction, ItemEnum(_WDF_DEVICE_FAILED_ACTION) -- 12
}
#typev  FxDeviceApi_cpp847 22     "%0WDFDEVICE 0x%10!p! FileType %11!d! specified is not in valid range"      //   GLOBALS=GetFxDriverGlobals(DriverGlobals) LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceSetSpecialFileSupport
{
Device, ItemPtr -- 10
FileType, ItemLong -- 11
}
#typev  FxDeviceApi_cpp1548 49     "%0WdfDeviceResumeIdle does nothing if you are not the power policy owner for the stack"      //   GLOBALS=GetFxDriverGlobals(DriverGlobals) LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceResumeIdle
{
}
#typev  FxDeviceApi_cpp1252 38     "%0exit WDFDEVICE %10!p!, Property %11!d!, %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceQueryProperty
{
Device, ItemPtr -- 10
DeviceProperty, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxDeviceApi_cpp1239 37     "%0WDFDEVICE %10!p! has no PDO (not reported yet) %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceQueryProperty
{
Device, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxDeviceApi_cpp1224 36     "%0WDFDEVICE 0x%10!p! is not a PnP device %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceQueryProperty
{
Device, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxDeviceApi_cpp2135 63     "%0Queue cannot be configured for automatic dispatchingafter the WDFDEVICE %10!p! is started, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfDeviceConfigureRequestDispatching
{
Device, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxDeviceApi_cpp2118 62     "%0Queue cannot be configured for automatic dispatching after WdfControlDeviceFinishInitializingis called on the WDFDEVICE %10!p! is called %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfDeviceConfigureRequestDispatching
{
Device, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxDeviceApi_cpp2102 61     "%0Input WDFQUEUE 0x%10!p! doesn't belong to the WDFDEVICE 0x%11!p!, %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=imp_WdfDeviceConfigureRequestDispatching
{
Queue, ItemPtr -- 10
Device, ItemPtr -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxDeviceApi_cpp2076 60     "%0Invalid RequestType %10!s!, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=imp_WdfDeviceConfigureRequestDispatching
{
RequestType, ItemEnum(_WDF_REQUEST_TYPE) -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxDeviceApi_cpp2007 59     "%0FxFileObject::GetFileObjectFromWdm returned an error %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceGetFileObject
{
status, ItemNTSTATUS -- 10
}
#typev  FxDeviceApi_cpp1656 51     "%0WDFDEVICE 0x%10!p! PnpCapabilities WDF_TRI_STATE %11!s! value out of range, value is %12!d!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceSetPnpCapabilities
{
Device, ItemPtr -- 10
offsets[i].Name, ItemString -- 11
value, ItemLong -- 12
}
#typev  FxDeviceApi_cpp1627 50     "%0WDFDEVICE 0x%10!p! PnpCapabilities Size %11!d!, expected %12!d!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceSetPnpCapabilities
{
Device, ItemPtr -- 10
PnpCapabilities->Size, ItemLong -- 11
sizeof(WDF_DEVICE_PNP_CAPABILITIES), ItemLong -- 12
}
#typev  FxDeviceApi_cpp1524 48     "%0WDFDEVICE %10!p! WdfDeviceStopIdle, WaitForD0 %11!d! %12!s!"      //   GLOBALS=GetFxDriverGlobals(DriverGlobals) LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceStopIdle
{
Device, ItemPtr -- 10
WaitForD0, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxDeviceApi_cpp1515 47     "%0WDFDEVICE %10!p! WdfDeviceStopIdle does nothing if you are not the power policy owner for the stack, %11!s!"      //   GLOBALS=GetFxDriverGlobals(DriverGlobals) LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceStopIdle
{
Device, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxDeviceApi_cpp1155 35     "%0WDFDEVICE %10!p!  create sybolic link failed, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceCreateSymbolicLink
{
Device, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxDeviceApi_cpp1139 34     "%0WDFDEVICE %10!p! allocate buffer for symbolic name failed, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceCreateSymbolicLink
{
Device, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxDeviceApi_cpp1118 33     "%0WDFDEVICE %10!p! IoGetDeviceProperty failed second time, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceCreateSymbolicLink
{
Device, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxDeviceApi_cpp1098 32     "%0WDFDEVICE %10!p! could not allocate buffer for PDO name, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceCreateSymbolicLink
{
Device, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxDeviceApi_cpp1086 31     "%0WDFDEVICE %10!p! PDO name length is zero, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceCreateSymbolicLink
{
Device, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxDeviceApi_cpp1073 30     "%0WDFDEVICE %10!p! PDO name too long (%11!d!, max is %12!d!), %13!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceCreateSymbolicLink
{
Device, ItemPtr -- 10
length, ItemLong -- 11
USHORT_MAX, ItemLong -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxDeviceApi_cpp1064 29     "%0WDFDEVICE %10!p! IoGetDeviceProperty failed %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceCreateSymbolicLink
{
Device, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxDeviceApi_cpp1047 28     "%0WDFDEVICE %10!p! has not yet been reported to pnp, cannot call IoGetDeviceProperty in this state, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceCreateSymbolicLink
{
Device, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxDeviceApi_cpp1032 27     "%0WDFDEVICE %10!p! has no device name (use WdfDeviceInitAssignName), %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceCreateSymbolicLink
{
Device, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxDeviceApi_cpp1009 26     "%0WDFDEVICE %10!p! already has a symbolic link associated with it, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceCreateSymbolicLink
{
Device, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxDeviceApi_cpp984 25     "%0WDFDEVICE %10!p!, SymbolicLinkName has no length, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceCreateSymbolicLink
{
Device, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxDeviceApi_cpp802 21     "%0WDFDEVICE 0x%10!p! DeviceState WDF_TRI_STATE %11!s! value out of range, value is %12!d!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceSetDeviceState
{
Device, ItemPtr -- 10
offsets[i].Name, ItemString -- 11
value, ItemLong -- 12
}
#typev  FxDeviceApi_cpp773 20     "%0WDFDEVICE 0x%10!p!, DeviceState Size %11!d!, expected %12!d!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceSetDeviceState
{
Device, ItemPtr -- 10
DeviceState->Size, ItemLong -- 11
sizeof(WDF_DEVICE_STATE), ItemLong -- 12
}
#typev  FxDeviceApi_cpp383 11     "%0WDFDEVICE %10!p! couldn't creat duplicate buffer, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceAssignMofResourceName
{
Device, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxDeviceApi_cpp370 10     "%0WDFDEVICE %10!p! MofResourceName already assigned, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceAssignMofResourceName
{
Device, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxDeviceApi_cpp727 19     "%0WDFDEVICE 0x%10!p! DeviceState Size %11!d!, expected %12!d!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceGetDeviceState
{
Device, ItemPtr -- 10
DeviceState->Size, ItemLong -- 11
sizeof(WDF_DEVICE_STATE), ItemLong -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxDeviceApi_cpp692 18     "%0WDFDEVICE 0x%10!p!  Underlying PDO is NULL"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceOpenRegistryKey
{
Device, ItemPtr -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxDeviceApi_cpp1379 42     "%0NULL WDFDEVICE handle %10!p! or invalid %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceIndicateWakeStatus
{
Device, ItemPtr -- 10
WaitWakeStatus, ItemNTSTATUS -- 11
}
#typev  FxDeviceApi_cpp1410 44     "%0WDFDEVICE 0x%10!p!  Not the waitwake owner STATUS_INVALID_DEVICE_STATE"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceIndicateWakeStatus
{
Device, ItemPtr -- 10
}
#typev  FxDeviceApi_cpp1398 43     "%0WDFDEVICE 0x%10!p!  No request to complete STATUS_INVALID_DEVICE_REQUEST"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceIndicateWakeStatus
{
Device, ItemPtr -- 10
}
#typev  FxDeviceApi_cpp1353 41     "%0exit WDFDEVICE %10!p!, Property %11!d!, %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceAllocAndQueryProperty
{
Device, ItemPtr -- 10
DeviceProperty, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxDeviceApi_cpp1339 40     "%0WDFDEVICE %10!p! has no PDO (not reported yet), %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceAllocAndQueryProperty
{
Device, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxDeviceApi_cpp1324 39     "%0WDFDEVICE %10!p! is not a PnP device, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceAllocAndQueryProperty
{
Device, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxDeviceApi_cpp640 17     "%0a field (DxState, Enabled, or UserControlOfIdleSettings) is out range, %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceAssignSxWakeSettings
{
status, ItemNTSTATUS -- 10
}
#typev  FxDeviceApi_cpp627 16     "%0Expected Settings Size %10!x!, got %11!x!, %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceAssignSxWakeSettings
{
Settings->Size, ItemLong -- 10
sizeof(WDF_DEVICE_POWER_POLICY_WAKE_SETTINGS), ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxDeviceApi_cpp614 15     "%0Device 0x%10!p! is not the power policy owner, caller cannot set Sx wake settings %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfDeviceAssignSxWakeSettings
{
Device, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxDeviceApi_cpp577 14     "%0a field (DxState, IdleCaps, Enabled, or UserControlOfIdleSettings) is out range, %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceAssignS0IdleSettings
{
status, ItemNTSTATUS -- 10
}
#typev  FxDeviceApi_cpp559 13     "%0Expected Settings Size %10!d!, got %11!d!, %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceAssignS0IdleSettings
{
Settings->Size, ItemLong -- 10
sizeof(WDF_DEVICE_POWER_POLICY_IDLE_SETTINGS), ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxDeviceApi_cpp546 12     "%0Device 0x%10!p! is not the power policy owner, caller cannot set S0 idle settings %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfDeviceAssignS0IdleSettings
{
Device, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxDeviceApi_cpp939 24     "%0Device init: has device class or SDDL set, but does not have a name, %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceCreate
{
status, ItemNTSTATUS -- 10
}
#typev  FxDeviceApi_cpp917 23     "%0WDFDEVICE 0x%10!p!   already createdSTATUS_INVALID_DEVICE_STATE"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceCreate
{
Device, ItemPtr -- 10
}
#enumv _WDF_DEVICE_FAILED_ACTION
{
WdfDeviceFailedUndefined,0x0
WdfDeviceFailedAttemptRestart,0x1
WdfDeviceFailedNoRestart,0x2
}
#enumv _WDF_REQUEST_TYPE
{
WdfRequestTypeCreate,0x0
WdfRequestTypeCreateNamedPipe,0x1
WdfRequestTypeClose,0x2
WdfRequestTypeRead,0x3
WdfRequestTypeWrite,0x4
WdfRequestTypeQueryInformation,0x5
WdfRequestTypeSetInformation,0x6
WdfRequestTypeQueryEA,0x7
WdfRequestTypeSetEA,0x8
WdfRequestTypeFlushBuffers,0x9
WdfRequestTypeQueryVolumeInformation,0xA
WdfRequestTypeSetVolumeInformation,0xB
WdfRequestTypeDirectoryControl,0xC
WdfRequestTypeFileSystemControl,0xD
WdfRequestTypeDeviceControl,0xE
WdfRequestTypeDeviceControlInternal,0xF
WdfRequestTypeShutdown,0x10
WdfRequestTypeLockControl,0x11
WdfRequestTypeCleanup,0x12
WdfRequestTypeCreateMailSlot,0x13
WdfRequestTypeQuerySecurity,0x14
WdfRequestTypeSetSecurity,0x15
WdfRequestTypePower,0x16
WdfRequestTypeSystemControl,0x17
WdfRequestTypeDeviceChange,0x18
WdfRequestTypeQueryQuota,0x19
WdfRequestTypeSetQuota,0x1A
WdfRequestTypePnp,0x1B
WdfRequestTypeOther,0x1C
WdfRequestTypeUsb,0x40
WdfRequestTypeNoFormat,0xFF
WdfRequestTypeMax,0x100
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
90b9cb5c-1766-bd32-765f-79427abfe152     core // SRC=FxDeviceControlAPI.cpp MJ= MN=
#typev  FxDeviceControlAPI_cpp54 10     "%0WDFDEVICE %10!p! not a control device"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfControlFinishInitializing
{
Device, ItemPtr -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
936f15f2-3801-5d1b-6209-a4e28cf45fa0     core // SRC=FxValidateFunctions.hpp MJ= MN=
#typev  FxValidateFunctions_hpp312 28     "%0UNICODE_STRING %10!p!, Length %11!d! > MaximumLength %12!d!, %13!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryAssignString
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
String->MaximumLength, ItemLong -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxValidateFunctions_hpp303 27     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! > 0, Buffer is NULL, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryAssignString
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp294 26     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryAssignString
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp285 25     "%0UNICODE_STRING %10!p!, Length %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryAssignString
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp312 28     "%0UNICODE_STRING %10!p!, Length %11!d! > MaximumLength %12!d!, %13!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryAssignULong
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
String->MaximumLength, ItemLong -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxValidateFunctions_hpp303 27     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! > 0, Buffer is NULL, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryAssignULong
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp294 26     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryAssignULong
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp285 25     "%0UNICODE_STRING %10!p!, Length %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryAssignULong
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp312 28     "%0UNICODE_STRING %10!p!, Length %11!d! > MaximumLength %12!d!, %13!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryAssignMemory
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
String->MaximumLength, ItemLong -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxValidateFunctions_hpp303 27     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! > 0, Buffer is NULL, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryAssignMemory
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp294 26     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryAssignMemory
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp285 25     "%0UNICODE_STRING %10!p!, Length %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryAssignMemory
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp312 28     "%0UNICODE_STRING %10!p!, Length %11!d! > MaximumLength %12!d!, %13!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryAssignValue
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
String->MaximumLength, ItemLong -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxValidateFunctions_hpp303 27     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! > 0, Buffer is NULL, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryAssignValue
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp294 26     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryAssignValue
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp285 25     "%0UNICODE_STRING %10!p!, Length %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryAssignValue
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp312 28     "%0UNICODE_STRING %10!p!, Length %11!d! > MaximumLength %12!d!, %13!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryQueryULong
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
String->MaximumLength, ItemLong -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxValidateFunctions_hpp303 27     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! > 0, Buffer is NULL, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryQueryULong
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp294 26     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryQueryULong
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp285 25     "%0UNICODE_STRING %10!p!, Length %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryQueryULong
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp312 28     "%0UNICODE_STRING %10!p!, Length %11!d! > MaximumLength %12!d!, %13!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryRemoveValue
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
String->MaximumLength, ItemLong -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxValidateFunctions_hpp303 27     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! > 0, Buffer is NULL, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryRemoveValue
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp294 26     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryRemoveValue
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp285 25     "%0UNICODE_STRING %10!p!, Length %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryRemoveValue
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp312 28     "%0UNICODE_STRING %10!p!, Length %11!d! > MaximumLength %12!d!, %13!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryAssignMultiString
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
String->MaximumLength, ItemLong -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxValidateFunctions_hpp303 27     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! > 0, Buffer is NULL, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryAssignMultiString
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp294 26     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryAssignMultiString
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp285 25     "%0UNICODE_STRING %10!p!, Length %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryAssignMultiString
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp312 28     "%0UNICODE_STRING %10!p!, Length %11!d! > MaximumLength %12!d!, %13!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryAssignUnicodeString
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
String->MaximumLength, ItemLong -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxValidateFunctions_hpp303 27     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! > 0, Buffer is NULL, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryAssignUnicodeString
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp294 26     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryAssignUnicodeString
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp285 25     "%0UNICODE_STRING %10!p!, Length %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryAssignUnicodeString
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp312 28     "%0UNICODE_STRING %10!p!, Length %11!d! > MaximumLength %12!d!, %13!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryAssignUnicodeString
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
String->MaximumLength, ItemLong -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxValidateFunctions_hpp303 27     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! > 0, Buffer is NULL, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryAssignUnicodeString
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp294 26     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryAssignUnicodeString
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp285 25     "%0UNICODE_STRING %10!p!, Length %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryAssignUnicodeString
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp312 28     "%0UNICODE_STRING %10!p!, Length %11!d! > MaximumLength %12!d!, %13!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryQueryUnicodeString
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
String->MaximumLength, ItemLong -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxValidateFunctions_hpp303 27     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! > 0, Buffer is NULL, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryQueryUnicodeString
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp294 26     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryQueryUnicodeString
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp285 25     "%0UNICODE_STRING %10!p!, Length %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryQueryUnicodeString
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp312 28     "%0UNICODE_STRING %10!p!, Length %11!d! > MaximumLength %12!d!, %13!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryQueryUnicodeString
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
String->MaximumLength, ItemLong -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxValidateFunctions_hpp303 27     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! > 0, Buffer is NULL, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryQueryUnicodeString
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp294 26     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryQueryUnicodeString
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp285 25     "%0UNICODE_STRING %10!p!, Length %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryQueryUnicodeString
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp312 28     "%0UNICODE_STRING %10!p!, Length %11!d! > MaximumLength %12!d!, %13!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryQueryValue
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
String->MaximumLength, ItemLong -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxValidateFunctions_hpp303 27     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! > 0, Buffer is NULL, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryQueryValue
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp294 26     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryQueryValue
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp285 25     "%0UNICODE_STRING %10!p!, Length %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryQueryValue
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp312 28     "%0UNICODE_STRING %10!p!, Length %11!d! > MaximumLength %12!d!, %13!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryQueryString
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
String->MaximumLength, ItemLong -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxValidateFunctions_hpp303 27     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! > 0, Buffer is NULL, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryQueryString
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp294 26     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryQueryString
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp285 25     "%0UNICODE_STRING %10!p!, Length %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryQueryString
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp312 28     "%0UNICODE_STRING %10!p!, Length %11!d! > MaximumLength %12!d!, %13!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryQueryMultiString
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
String->MaximumLength, ItemLong -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxValidateFunctions_hpp303 27     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! > 0, Buffer is NULL, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryQueryMultiString
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp294 26     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryQueryMultiString
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp285 25     "%0UNICODE_STRING %10!p!, Length %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryQueryMultiString
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp312 28     "%0UNICODE_STRING %10!p!, Length %11!d! > MaximumLength %12!d!, %13!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryCreateKey
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
String->MaximumLength, ItemLong -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxValidateFunctions_hpp303 27     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! > 0, Buffer is NULL, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryCreateKey
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp294 26     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryCreateKey
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp285 25     "%0UNICODE_STRING %10!p!, Length %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryCreateKey
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp312 28     "%0UNICODE_STRING %10!p!, Length %11!d! > MaximumLength %12!d!, %13!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryOpenKey
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
String->MaximumLength, ItemLong -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxValidateFunctions_hpp303 27     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! > 0, Buffer is NULL, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryOpenKey
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp294 26     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryOpenKey
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp285 25     "%0UNICODE_STRING %10!p!, Length %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryOpenKey
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp312 28     "%0UNICODE_STRING %10!p!, Length %11!d! > MaximumLength %12!d!, %13!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryQueryMemory
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
String->MaximumLength, ItemLong -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxValidateFunctions_hpp303 27     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! > 0, Buffer is NULL, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryQueryMemory
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp294 26     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryQueryMemory
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp285 25     "%0UNICODE_STRING %10!p!, Length %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryQueryMemory
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp312 28     "%0UNICODE_STRING %10!p!, Length %11!d! > MaximumLength %12!d!, %13!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDriverCreate
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
String->MaximumLength, ItemLong -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxValidateFunctions_hpp303 27     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! > 0, Buffer is NULL, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDriverCreate
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp294 26     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDriverCreate
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp285 25     "%0UNICODE_STRING %10!p!, Length %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDriverCreate
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp312 28     "%0UNICODE_STRING %10!p!, Length %11!d! > MaximumLength %12!d!, %13!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceSetDeviceInterfaceState
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
String->MaximumLength, ItemLong -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxValidateFunctions_hpp303 27     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! > 0, Buffer is NULL, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceSetDeviceInterfaceState
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp294 26     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceSetDeviceInterfaceState
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp285 25     "%0UNICODE_STRING %10!p!, Length %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceSetDeviceInterfaceState
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp312 28     "%0UNICODE_STRING %10!p!, Length %11!d! > MaximumLength %12!d!, %13!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceRetrieveDeviceInterfaceString
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
String->MaximumLength, ItemLong -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxValidateFunctions_hpp303 27     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! > 0, Buffer is NULL, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceRetrieveDeviceInterfaceString
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp294 26     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceRetrieveDeviceInterfaceString
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp285 25     "%0UNICODE_STRING %10!p!, Length %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceRetrieveDeviceInterfaceString
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp312 28     "%0UNICODE_STRING %10!p!, Length %11!d! > MaximumLength %12!d!, %13!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceCreateDeviceInterface
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
String->MaximumLength, ItemLong -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxValidateFunctions_hpp303 27     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! > 0, Buffer is NULL, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceCreateDeviceInterface
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp294 26     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceCreateDeviceInterface
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp285 25     "%0UNICODE_STRING %10!p!, Length %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceCreateDeviceInterface
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp312 28     "%0UNICODE_STRING %10!p!, Length %11!d! > MaximumLength %12!d!, %13!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfPdoInitAddDeviceText
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
String->MaximumLength, ItemLong -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxValidateFunctions_hpp303 27     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! > 0, Buffer is NULL, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfPdoInitAddDeviceText
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp294 26     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfPdoInitAddDeviceText
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp285 25     "%0UNICODE_STRING %10!p!, Length %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfPdoInitAddDeviceText
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp312 28     "%0UNICODE_STRING %10!p!, Length %11!d! > MaximumLength %12!d!, %13!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfPdoInitAddDeviceText
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
String->MaximumLength, ItemLong -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxValidateFunctions_hpp303 27     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! > 0, Buffer is NULL, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfPdoInitAddDeviceText
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp294 26     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfPdoInitAddDeviceText
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp285 25     "%0UNICODE_STRING %10!p!, Length %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfPdoInitAddDeviceText
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp312 28     "%0UNICODE_STRING %10!p!, Length %11!d! > MaximumLength %12!d!, %13!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfControlDeviceInitAllocate
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
String->MaximumLength, ItemLong -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxValidateFunctions_hpp303 27     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! > 0, Buffer is NULL, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfControlDeviceInitAllocate
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp294 26     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfControlDeviceInitAllocate
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp285 25     "%0UNICODE_STRING %10!p!, Length %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfControlDeviceInitAllocate
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp312 28     "%0UNICODE_STRING %10!p!, Length %11!d! > MaximumLength %12!d!, %13!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfPdoInitAddCompatibleID
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
String->MaximumLength, ItemLong -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxValidateFunctions_hpp303 27     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! > 0, Buffer is NULL, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfPdoInitAddCompatibleID
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp294 26     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfPdoInitAddCompatibleID
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp285 25     "%0UNICODE_STRING %10!p!, Length %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfPdoInitAddCompatibleID
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp312 28     "%0UNICODE_STRING %10!p!, Length %11!d! > MaximumLength %12!d!, %13!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfPdoInitAddHardwareID
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
String->MaximumLength, ItemLong -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxValidateFunctions_hpp303 27     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! > 0, Buffer is NULL, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfPdoInitAddHardwareID
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp294 26     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfPdoInitAddHardwareID
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp285 25     "%0UNICODE_STRING %10!p!, Length %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfPdoInitAddHardwareID
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp312 28     "%0UNICODE_STRING %10!p!, Length %11!d! > MaximumLength %12!d!, %13!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfPdoInitAssignInstanceID
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
String->MaximumLength, ItemLong -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxValidateFunctions_hpp303 27     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! > 0, Buffer is NULL, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfPdoInitAssignInstanceID
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp294 26     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfPdoInitAssignInstanceID
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp285 25     "%0UNICODE_STRING %10!p!, Length %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfPdoInitAssignInstanceID
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp312 28     "%0UNICODE_STRING %10!p!, Length %11!d! > MaximumLength %12!d!, %13!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfPdoInitAssignDeviceID
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
String->MaximumLength, ItemLong -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxValidateFunctions_hpp303 27     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! > 0, Buffer is NULL, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfPdoInitAssignDeviceID
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp294 26     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfPdoInitAssignDeviceID
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp285 25     "%0UNICODE_STRING %10!p!, Length %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfPdoInitAssignDeviceID
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp312 28     "%0UNICODE_STRING %10!p!, Length %11!d! > MaximumLength %12!d!, %13!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceInitAssignSDDLString
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
String->MaximumLength, ItemLong -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxValidateFunctions_hpp303 27     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! > 0, Buffer is NULL, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceInitAssignSDDLString
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp294 26     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceInitAssignSDDLString
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp285 25     "%0UNICODE_STRING %10!p!, Length %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceInitAssignSDDLString
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp312 28     "%0UNICODE_STRING %10!p!, Length %11!d! > MaximumLength %12!d!, %13!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceInitAssignName
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
String->MaximumLength, ItemLong -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxValidateFunctions_hpp303 27     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! > 0, Buffer is NULL, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceInitAssignName
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp294 26     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceInitAssignName
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp285 25     "%0UNICODE_STRING %10!p!, Length %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceInitAssignName
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp312 28     "%0UNICODE_STRING %10!p!, Length %11!d! > MaximumLength %12!d!, %13!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfStringCreate
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
String->MaximumLength, ItemLong -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxValidateFunctions_hpp303 27     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! > 0, Buffer is NULL, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfStringCreate
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp294 26     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfStringCreate
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp285 25     "%0UNICODE_STRING %10!p!, Length %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfStringCreate
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp312 28     "%0UNICODE_STRING %10!p!, Length %11!d! > MaximumLength %12!d!, %13!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceCreateSymbolicLink
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
String->MaximumLength, ItemLong -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxValidateFunctions_hpp303 27     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! > 0, Buffer is NULL, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceCreateSymbolicLink
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp294 26     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceCreateSymbolicLink
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp285 25     "%0UNICODE_STRING %10!p!, Length %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceCreateSymbolicLink
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp312 28     "%0UNICODE_STRING %10!p!, Length %11!d! > MaximumLength %12!d!, %13!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceAssignMofResourceName
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
String->MaximumLength, ItemLong -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxValidateFunctions_hpp303 27     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! > 0, Buffer is NULL, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceAssignMofResourceName
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp294 26     "%0UNICODE_STRING %10!p!, MaximumLength %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceAssignMofResourceName
{
String, ItemPtr -- 10
String->MaximumLength, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxValidateFunctions_hpp285 25     "%0UNICODE_STRING %10!p!, Length %11!d! is odd, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceAssignMofResourceName
{
String, ItemPtr -- 10
String->Length, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
943fa7c1-c2f5-1096-e04b-78db4f97ce81     core // SRC=FxCallbackMutexLock.hpp MJ= MN=
#typev  FxCallbackMutexLock_hpp100 10     "%0Recursive acquire of callback lock 0x%10!p!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_FATAL FLAGS=TRACINGDEVICE FUNC=FxCallbackMutexLock::Lock
{
this, ItemPtr -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
94d75394-61b1-cfc4-39ce-38ac1897e23f     core // SRC=FxDevice.cpp MJ= MN=
#typev  FxDevice_cpp1646 15     "%0Allocating FxRequest* %10!p!, WDFREQUEST %11!p!"      //   GLOBALS=pGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=FxDevice::AllocateRequestMemory
{
ptr, ItemPtr -- 10
_ToHandle((FxObject*) ptr), ItemPtr -- 11
}
#typev  FxDevice_cpp1381 14     "%0Deleting !devobj %10!p!, WDFDEVICE %11!p!, attached to !devobj %12!p!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGDEVICE FUNC=FxDevice::Destroy
{
m_DeviceObject, ItemPtr -- 10
GetObjectHandleUnchecked(), ItemPtr -- 11
m_AttachedDevice, ItemPtr -- 12
}
#typev  FxDevice_cpp176 10     "%0FxDevice 0x%10!p! not disposed: this maybe a driver reference count problem with WDFDEVICE %11!p!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_FATAL FLAGS=TRACINGDEVICE FUNC=FxDevice::~FxDevice
{
this, ItemPtr -- 10
GetObjectHandleUnchecked(), ItemPtr -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxDevice_cpp412 12     "%0WDFDEVICE %10!p!, !devobj %11!p! is a filter, converting %12!s! to STATUS_SUCCESS"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxDevice::DeleteDeviceFromFailedCreateNoDelete
{
GetObjectHandleUnchecked(), ItemPtr -- 10
GetDeviceObject(), ItemPtr -- 11
FailedStatus, ItemNTSTATUS -- 12
}
#typev  FxDevice_cpp400 11     "%0WDFDEVICE %10!p! !devobj %11!p! created, but EvtDriverDeviceAdd returned status %12!s! or failure in creation"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxDevice::DeleteDeviceFromFailedCreateNoDelete
{
GetObjectHandleUnchecked(), ItemPtr -- 10
GetDeviceObject(), ItemPtr -- 11
FailedStatus, ItemNTSTATUS -- 12
}
#typev  FxDevice_cpp1946 20     "%0Could not commit memory object, %10!s!"      //   GLOBALS=Globals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxDevice::_AllocAndQueryProperty
{
status, ItemNTSTATUS -- 10
}
#typev  FxDevice_cpp1934 19     "%0Could not query for full buffer, size %10!d!, for property %11!d!, %12!s!"      //   GLOBALS=Globals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxDevice::_AllocAndQueryProperty
{
length, ItemLong -- 10
DeviceProperty, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxDevice_cpp1922 18     "%0Could not allocate WDFMEMORY, %10!s!"      //   GLOBALS=Globals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxDevice::_AllocAndQueryProperty
{
status, ItemNTSTATUS -- 10
}
#typev  FxDevice_cpp1909 17     "%0Could not retrieve property %10!d! length, %11!s!"      //   GLOBALS=Globals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxDevice::_AllocAndQueryProperty
{
DeviceProperty, ItemLong -- 10
status, ItemNTSTATUS -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxDevice_cpp787 13     "%0Must set EvtDeviceRemoveAddedResources if EvtDeviceFilterAddResourceRequirements (%10!p!) is set"      //   GLOBALS=pGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxDevice::FdoInitialize
{
DeviceInit->Fdo.EventCallbacks.EvtDeviceFilterAddResourceRequirements, ItemPtr -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxDevice_cpp1663 16     "%0Free FxRequest* %10!p! memory"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGREQUEST FUNC=FxRequestFromLookaside::SelfDestruct
{
Request, ItemPtr -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
9516e74c-3ef4-d6b7-15cb-7def45fcbcea     core // SRC=FxDeviceBase.cpp MJ= MN=
#typev  FxDeviceBase_cpp267 10     "%0WDFHANDLE %10!p! does not have a WDFDEVICE as an ancestor"      //   GLOBALS=pOrigParent->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGOBJECT FUNC=FxDeviceBase::_SearchForDevice
{
pOrigParent->GetObjectHandle(), ItemPtr -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
96e0e02e-4ae2-ac0f-47be-3ef4f98a9c62     core // SRC=FxWorkItemApi.cpp MJ= MN=
#typev  FxWorkItemApi_cpp111 11     "%0Supplied EvtWorkItemFunc == NULL, %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfWorkItemCreate
{
status, ItemNTSTATUS -- 10
}
#typev  FxWorkItemApi_cpp100 10     "%0WDF_WORKITEM_CONFIG Size got %10!d!, expected %11!d!, %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfWorkItemCreate
{
Config->Size, ItemLong -- 10
sizeof(WDF_WORKITEM_CONFIG), ItemLong -- 11
status, ItemNTSTATUS -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
980cecc9-a351-0f5e-8850-ccaa46423285     core // SRC=FxMemoryBufferAPI.cpp MJ= MN=
#typev  FxMemoryBufferAPI_cpp298 12     "%0Zero bytes to copy not allowed, %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfMemoryCopyFromBuffer
{
status, ItemNTSTATUS -- 10
}
#typev  FxMemoryBufferAPI_cpp225 11     "%0Zero bytes to copy not allowed, %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfMemoryCopyToBuffer
{
status, ItemNTSTATUS -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxMemoryBufferAPI_cpp97 10     "%0BufferSize == 0 not allowed,  %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfMemoryCreate
{
status, ItemNTSTATUS -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
9f296250-c719-e66c-aabb-dccfdb0b8535     core // SRC=FxDpcApi.cpp MJ= MN=
#typev  FxDpcApi_cpp96 10     "%0WDF_DPC_CONFIG got Size %10!d!, expected %11!d!, %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDpcCreate
{
Config->Size, ItemLong -- 10
sizeof(WDF_DPC_CONFIG), ItemLong -- 11
status, ItemNTSTATUS -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
a0df4823-b1bf-8617-9a3f-80526f1af536     core // SRC=FxSystemThread.cpp MJ= MN=
#typev  FxSystemThread_cpp121 10     "%0Could not create system thread %10!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxSystemThread::CreateThread
{
status, ItemNTSTATUS -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
a4ae3f35-404b-f5b5-cb18-af430d7bea8e     base // SRC=FxVerifierLock.hpp MJ= MN=
#typev  FxVerifierLock_hpp380 10     "%0Lock 0x%10!p! is being destroyed while owned by thread 0x%11!p!, Owning Object 0x%12!p!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::`scalar deleting destructor'
{
this, ItemPtr -- 10
m_OwningThread, ItemPtr -- 11
m_ParentObject, ItemPtr -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
ad651db4-3e6f-8cfc-3875-f6bffc262fda     pnp // SRC=PowerIdleStateMachine.cpp MJ= MN=
#typev  PowerIdleStateMachine_cpp1714 15     "%0!devobj 0x%10!p! power idle state %11!s! dropping event %12!s!"      //   GLOBALS=pPkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPowerIdleMachine::ProcessEventLocked
{
pPkgPnp->GetDevice()->GetDeviceObject(), ItemPtr -- 10
m_CurrentIdleState, ItemEnum(FxPowerIdleStates) -- 11
Event, ItemEnum(FxPowerIdleEvents) -- 12
}
#typev  PowerIdleStateMachine_cpp1727 16     "%0!devobj 0x%10!p! entering power idle state %11!s! from %12!s!"      //   GLOBALS=pPkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPowerIdleMachine::ProcessEventLocked
{
pPkgPnp->GetDevice()->GetDeviceObject(), ItemPtr -- 10
newState, ItemEnum(FxPowerIdleStates) -- 11
m_CurrentIdleState, ItemEnum(FxPowerIdleStates) -- 12
}
#typev  PowerIdleStateMachine_cpp1445 14     "%0WDFDEVICE %10!p! waiting for D0 in thread %11!p! failed because of invalid state , %12!s!"      //   GLOBALS=pPkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPowerIdleMachine::PowerReference
{
pPkgPnp->GetDevice()->GetHandle(), ItemPtr -- 10
KeGetCurrentThread(), ItemPtr -- 11
status, ItemNTSTATUS -- 12
}
#typev  PowerIdleStateMachine_cpp1437 13     "%0WDFDEVICE %10!p! waiting for D0 in thread %11!p! failed because of power failure, %12!s!"      //   GLOBALS=pPkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPowerIdleMachine::PowerReference
{
pPkgPnp->GetDevice()->GetHandle(), ItemPtr -- 10
KeGetCurrentThread(), ItemPtr -- 11
status, ItemNTSTATUS -- 12
}
#typev  PowerIdleStateMachine_cpp1415 12     "%0WDFDEVICE %10!p! in thread %11!p! waiting synchronously for Dx to D0 transition"      //   GLOBALS=pPkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPowerIdleMachine::PowerReference
{
pPkgPnp->GetDevice()->GetHandle(), ItemPtr -- 10
KeGetCurrentThread(), ItemPtr -- 11
}
#typev  PowerIdleStateMachine_cpp797 11     "%0WDFDEVICE %10!p! idle (in Dx) not sending io present event (already sent)"      //   GLOBALS=pPkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPowerIdleMachine::InDxIoIncrement
{
pPkgPnp->GetDevice()->GetHandle(), ItemPtr -- 10
}
#typev  PowerIdleStateMachine_cpp660 10     "%0WDFDEVICE %10!p! idle (in D0) not sending io present event (already sent)"      //   GLOBALS=pPkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPowerIdleMachine::TimedOutIoIncrement
{
pPkgPnp->GetDevice()->GetHandle(), ItemPtr -- 10
}
#enumv FxPowerIdleStates
{
FxIdleStopped,0x1
FxIdleStarted,0x2
FxIdleStartedPowerUp,0x3
FxIdleStartedPowerFailed,0x4
FxIdleDisabled,0x5
FxIdleCheckIoCount,0x6
FxIdleBusy,0x7
FxIdleDecrementIo,0x8
FxIdleStartTimer,0x9
FxIdleTimerRunning,0xA
FxIdleTimingOut,0xB
FxIdleTimedOut,0xC
FxIdleTimedOutIoIncrement,0xD
FxIdleTimedOutPowerDown,0xE
FxIdleTimedOutPowerDownFailed,0xF
FxIdleGoingToDx,0x10
FxIdleInDx,0x11
FxIdleInDxIoIncrement,0x12
FxIdleInDxPowerUpFailure,0x13
FxIdleInDxStopped,0x14
FxIdleInDxDisabled,0x15
FxIdleInDxEnabled,0x16
FxIdlePowerUp,0x17
FxIdlePowerUpComplete,0x18
FxIdleTimedOutDisabled,0x19
FxIdleTimedOutEnabled,0x1A
FxIdleCancelTimer,0x1B
FxIdleWaitForTimeout,0x1C
FxIdleTimerExpired,0x1D
FxIdleDisabling,0x1E
FxIdleDisablingWaitForTimeout,0x1F
FxIdleDisablingTimerExpired,0x20
FxIdlePowerFailedWaitForTimeout,0x21
FxIdlePowerFailed,0x22
FxIdleMax,0x23
}
#enumv FxPowerIdleEvents
{
PowerIdleEventPowerUpFailed,0x2
PowerIdleEventPowerUpComplete,0x4
PowerIdleEventPowerDown,0x8
PowerIdleEventPowerDownFailed,0x10
PowerIdleEventTimerExpired,0x20
PowerIdleEventEnabled,0x40
PowerIdleEventDisabled,0x80
PowerIdleEventIoDecrement,0x100
PowerIdleEventIoIncrement,0x200
PowerIdleEventStart,0x400
PowerIdleEventStop,0x800
PowerIdleNull,0x0
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
b41db8be-ac2b-7098-296c-b83dfc354130     support // SRC=FxRequestBuffer.cpp MJ= MN=
#typev  FxRequestBuffer_cpp76 12     "%0Buffer is NULL, but a length (0x%10!x!) is specified"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxRequestBuffer::ValidateMemoryDescriptor
{
Descriptor->u.BufferType.Length, ItemLong -- 10
}
#typev  FxRequestBuffer_cpp69 11     "%0A NULL Buffer is not allowed"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxRequestBuffer::ValidateMemoryDescriptor
{
}
#typev  FxRequestBuffer_cpp101 14     "%0MDL is NULL, but a length (0x%10!x!) is specified"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxRequestBuffer::ValidateMemoryDescriptor
{
Descriptor->u.MdlType.BufferLength, ItemLong -- 10
}
#typev  FxRequestBuffer_cpp94 13     "%0A NULL MDL is not allowed"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxRequestBuffer::ValidateMemoryDescriptor
{
}
#typev  FxRequestBuffer_cpp121 15     "%0A NULL WDFMEMORY handle is not allowed"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxRequestBuffer::ValidateMemoryDescriptor
{
}
#typev  FxRequestBuffer_cpp52 10     "%0A NULL Descriptor is not allowed"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxRequestBuffer::ValidateMemoryDescriptor
{
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
b8e937f6-80e0-1aba-477b-adc99d2ceb40     io // SRC=FxIoQueue.cpp MJ= MN=
#typev  FxIoQueue_cpp719 18     "%0Invalid WDFQUEUE 0x%10!p! state"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::SetState
{
GetObjectHandle(), ItemPtr -- 10
}
#typev  FxIoQueue_cpp4289 85     "%0Power Stop: Driver has acknowledged all in-flight requests, but WDFQUEUE 0x%10!p! has outstanding callbacks"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::ProcessPowerEvents
{
GetObjectHandle(), ItemPtr -- 10
}
#typev  FxIoQueue_cpp4270 84     "%0Power Stop: WDFQUEUE 0x%10!p! is now powered off with no in-flight requests"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::ProcessPowerEvents
{
GetObjectHandle(), ItemPtr -- 10
}
#typev  FxIoQueue_cpp4254 83     "%0Power Stop: Waiting for Driver to complete or acknowledge in-flight requests on WDFQUEUE 0x%10!p!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::ProcessPowerEvents
{
GetObjectHandle(), ItemPtr -- 10
}
#typev  FxIoQueue_cpp4331 87     "%0Power Resume: Driver has no power paused requests on WDFQUEUE 0x%10!p!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::ProcessPowerEvents
{
GetObjectHandle(), ItemPtr -- 10
}
#typev  FxIoQueue_cpp4311 86     "%0Power Resume: Driver has power paused requests on WDFQUEUE 0x%10!p!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::ProcessPowerEvents
{
GetObjectHandle(), ItemPtr -- 10
}
#typev  FxIoQueue_cpp4394 89     "%0Power Resume: Driver has no callback for EvtIoResume registered on WDFQUEUE 0x%10!p!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::ProcessPowerEvents
{
GetObjectHandle(), ItemPtr -- 10
}
#typev  FxIoQueue_cpp4385 88     "%0Power Resume, Notifying Driver, WDFQUEUE 0x%10!p!, WDFREQUEST 0x%11!p!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::ProcessPowerEvents
{
GetObjectHandle(), ItemPtr -- 10
pRequest->GetObjectHandle(), ItemPtr -- 11
}
#typev  FxIoQueue_cpp4409 90     "%0Power Resume: WDFQUEUE 0x%10!p! is now powered on and I/O has resumed"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::ProcessPowerEvents
{
GetObjectHandle(), ItemPtr -- 10
}
#typev  FxIoQueue_cpp4213 82     "%0Power Purge Notifying Driver WDFQUEUE 0x%10!p!, WDFREQUEST 0x%11!p!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::ProcessPowerEvents
{
GetObjectHandle(), ItemPtr -- 10
pRequest->GetHandle(), ItemPtr -- 11
}
#typev  FxIoQueue_cpp4037 78     "%0Power Stop: WDFQUEUE 0x%10!p! is powering off without in-flight requests"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::ProcessPowerEvents
{
GetObjectHandle(), ItemPtr -- 10
}
#typev  FxIoQueue_cpp4015 77     "%0Power Stop: WDFQUEUE 0x%10!p! is powering off with in-flight requests"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::ProcessPowerEvents
{
GetObjectHandle(), ItemPtr -- 10
}
#typev  FxIoQueue_cpp4140 81     "%0Power Stop Notifying Driver, WDFQUEUE 0x%10!p!, WDFREQUEST 0x%11!p!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::ProcessPowerEvents
{
GetObjectHandle(), ItemPtr -- 10
pRequest->GetObjectHandle(), ItemPtr -- 11
}
#typev  FxIoQueue_cpp4079 80     "%0Power purge: WDFQUEUE 0x%10!p! is purging without in-flight requests"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::ProcessPowerEvents
{
GetObjectHandle(), ItemPtr -- 10
}
#typev  FxIoQueue_cpp4059 79     "%0Power Stop: WDFQUEUE 0x%10!p! is purging with in-flight requests"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::ProcessPowerEvents
{
GetObjectHandle(), ItemPtr -- 10
}
#typev  FxIoQueue_cpp3729 74     "%0ReadyNotify notify method is NULL on WDFQUEUE 0x%10!p!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::ProcessReadyNotify
{
GetObjectHandle(), ItemPtr -- 10
}
#typev  FxIoQueue_cpp3673 73     "%0WDFQUEUE 0x%10!p! is purged, calling driver callback"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::ProcessPurgeComplete
{
GetObjectHandle(), ItemPtr -- 10
}
#typev  FxIoQueue_cpp3623 72     "%0WDFQUEUE 0x%10!p! is idle, calling driver callback"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::ProcessIdleComplete
{
GetHandle(), ItemPtr -- 10
}
#typev  FxIoQueue_cpp3484 71     "%0WDFREQUEST 0x%10!p! is already on list, FxRequest::m_ListEntry is busy!, WDFQUEUE 0x%11!p!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::CancelForDriver
{
pRequest->GetHandle(), ItemPtr -- 10
GetObjectHandle(), ItemPtr -- 11
}
#typev  FxIoQueue_cpp3476 70     "%0WDFREQUEST 0x%10!p! was cancelled in driver for WDFQUEUE 0x%11!p!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGIO FUNC=FxIoQueue::CancelForDriver
{
pRequest->GetHandle(), ItemPtr -- 10
GetObjectHandle(), ItemPtr -- 11
}
#typev  FxIoQueue_cpp1625 33     "%0WDFREQUEST 0x%10!p! is on a cancellation list for WDFQUEUE 0x%11!p!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::RequestCompletedCallback
{
Request->GetHandle(), ItemPtr -- 10
GetObjectHandle(), ItemPtr -- 11
}
#typev  FxIoQueue_cpp1606 32     "%0Enter: WDFQUEUE 0x%10!p!, WDFREQUEST 0x%11!p!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::RequestCompletedCallback
{
GetObjectHandle(), ItemPtr -- 10
Request->GetHandle(), ItemPtr -- 11
}
#typev  FxIoQueue_cpp4994 95     "%0Dispatching requests from worker thread"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue_DeferredDispatchThreadThunk
{
}
#typev  FxIoQueue_cpp3846 76     "%0Calling CanceledOnQueue routine for WDFREQUEST 0x%10!p! on WDFQUEUE 0x%11!p!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGIO FUNC=FxIoQueue::ProcessCancelledRequestsOnQueue
{
pRequest->GetHandle(), ItemPtr -- 10
GetObjectHandle(), ItemPtr -- 11
}
#typev  FxIoQueue_cpp3776 75     "%0Calling CancelRoutine routine for WDFREQUEST 0x%10!p! on WDFQUEUE 0x%11!p!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGIO FUNC=FxIoQueue::ProcessCancelledRequests
{
pRequest->GetHandle(), ItemPtr -- 10
GetObjectHandle(), ItemPtr -- 11
}
#typev  FxIoQueue_cpp1043 27     "%0TagRequest 0x%10!p! is not referenced or owned by driver %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::PeekRequest
{
TagRequest->GetHandle(), ItemPtr -- 10
STATUS_INVALID_PARAMETER, ItemNTSTATUS -- 11
}
#typev  FxIoQueue_cpp359 16     "%0EvtIoDefault 0x%10!p!, EvtIoRead 0x%11!p!, EvtIoWrite 0x%12!p!, EvtIoDeviceControl 0x%13!p! for WDFQUEUE 0x%14!p!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::Initialize
{
pConfig->EvtIoDefault, ItemPtr -- 10
pConfig->EvtIoRead, ItemPtr -- 11
pConfig->EvtIoWrite, ItemPtr -- 12
pConfig->EvtIoDeviceControl, ItemPtr -- 13
GetObjectHandle(), ItemPtr -- 14
}
#typev  FxIoQueue_cpp305 15     "%0Could not allocate workitem: %10!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::Initialize
{
Status, ItemNTSTATUS -- 10
}
#typev  FxIoQueue_cpp285 14     "%0Cannot set io callback events on a manual WDFQUEUE 0x%10!p! %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::Initialize
{
GetObjectHandle(), ItemPtr -- 10
STATUS_INVALID_PARAMETER, ItemNTSTATUS -- 11
}
#typev  FxIoQueue_cpp264 13     "%0Invalid dispatch type specified %10!d!, Queue 0x%11!p! %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::Initialize
{
pConfig->DispatchType, ItemLong -- 10
GetObjectHandle(), ItemPtr -- 11
STATUS_INVALID_PARAMETER, ItemNTSTATUS -- 12
}
#typev  FxIoQueue_cpp255 12     "%0At least one of EvtIoDefault|EvtIoRead|EvtIoWrite|EvtIoDeviceControl|EvtIoInternalDeviceControl must be set %10!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::Initialize
{
STATUS_WDF_NO_CALLBACK, ItemNTSTATUS -- 10
}
#typev  FxIoQueue_cpp2607 55     "%0Driver has no event callback for %10!s!, completing WDFREQUEST 0x%11!p! with %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::DispatchRequestToDriver
{
irpStack->MajorFunction, ItemEnum(_WDF_REQUEST_TYPE) -- 10
pRequest, ItemPtr -- 11
Status, ItemNTSTATUS -- 12
}
#typev  FxIoQueue_cpp2634 56     "%0WDFREQUEST 0x%10!p! dispatched to driver"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::DispatchRequestToDriver
{
hRequest, ItemPtr -- 10
}
#typev  FxIoQueue_cpp2587 54     "%0Zero length WDFREQUEST 0x%10!p! completed automatically by WDFQUEUE 0x%11!p!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::DispatchRequestToDriver
{
hRequest, ItemPtr -- 10
GetObjectHandle(), ItemPtr -- 11
}
#typev  FxIoQueue_cpp2569 53     "%0Zero length WDFREQUEST 0x%10!p! completed automatically by WDFQUEUE 0x%11!p!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::DispatchRequestToDriver
{
hRequest, ItemPtr -- 10
GetObjectHandle(), ItemPtr -- 11
}
#typev  FxIoQueue_cpp2554 52     "%0Calling driver EvtIoDefault for WDFREQUEST 0x%10!p!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::DispatchRequestToDriver
{
hRequest, ItemPtr -- 10
}
#typev  FxIoQueue_cpp2534 51     "%0Calling driver EvtIoInternalDeviceControl for WDFREQUEST 0x%10!p!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::DispatchRequestToDriver
{
hRequest, ItemPtr -- 10
}
#typev  FxIoQueue_cpp2517 50     "%0Calling driver EvtIoDeviceControl for WDFREQUEST 0x%10!p!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::DispatchRequestToDriver
{
hRequest, ItemPtr -- 10
}
#typev  FxIoQueue_cpp2503 49     "%0Calling driver EvtIoWrite for WDFREQUEST 0x%10!p!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::DispatchRequestToDriver
{
pRequest->GetObjectHandle(), ItemPtr -- 10
}
#typev  FxIoQueue_cpp2488 48     "%0Zero length WDFREQUEST 0x%10!p! completed automatically by WDFQUEUE 0x%11!p!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::DispatchRequestToDriver
{
hRequest, ItemPtr -- 10
GetObjectHandle(), ItemPtr -- 11
}
#typev  FxIoQueue_cpp2469 47     "%0Calling driver EvtIoRead for WDFREQUEST 0x%10!p!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::DispatchRequestToDriver
{
hRequest, ItemPtr -- 10
}
#typev  FxIoQueue_cpp2455 46     "%0Zero length WDFREQUEST 0x%10!p! completed automatically by WDFQUEUE 0x%11!p!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::DispatchRequestToDriver
{
hRequest, ItemPtr -- 10
GetObjectHandle(), ItemPtr -- 11
}
#typev  FxIoQueue_cpp2248 42     "%0WDFQUEUE 0x%10!p! not in dispatching state, current state is %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGIO FUNC=FxIoQueue::DispatchEvents
{
GetObjectHandle(), ItemPtr -- 10
m_QueueState, ItemEnum(_WDF_IO_QUEUE_STATE) -- 11
}
#typev  FxIoQueue_cpp2312 45     "%0No requests on WDFQUEUE 0x%10!p!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::DispatchEvents
{
GetObjectHandle(), ItemPtr -- 10
}
#typev  FxIoQueue_cpp2291 44     "%0Driver has %10!d! requests from sequential WDFQUEUE 0x%11!p!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::DispatchEvents
{
m_DriverIoCount, ItemLong -- 10
GetObjectHandle(), ItemPtr -- 11
}
#typev  FxIoQueue_cpp2277 43     "%0Driver has configured WDFQUEUE 0x%10!p! for WdfIoQueueDispatchManual"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::DispatchEvents
{
GetObjectHandle(), ItemPtr -- 10
}
#typev  FxIoQueue_cpp2184 41     "%0WDFQUEUE 0x%10!p! Power Transition State %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::DispatchEvents
{
GetObjectHandle(), ItemPtr -- 10
m_PowerState, ItemListLong(FxIoQueuePowerInvalid,FxIoQueuePowerOn,FxIoQueuePowerOff,FxIoQueuePowerStartingTransition,FxIoQueuePowerStopping,FxIoQueuePowerStoppingNotifyingDriver,FxIoQueuePowerStoppingDriverNotified,FxIoQueuePowerPurge,FxIoQueuePowerPurgeNotifyingDriver,FxIoQueuePowerPurgeDriverNotified,FxIoQueuePowerRestarting,FxIoQueuePowerRestartingNotifyingDriver,FxIoQueuePowerRestartingDriverNotified,FxIoQueuePowerLast) -- 11
}
#typev  FxIoQueue_cpp2107 40     "%0Thread %10!p! is processing WDFQUEUE 0x%11!p!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::DispatchEvents
{
PsGetCurrentThread(), ItemPtr -- 10
GetObjectHandle(), ItemPtr -- 11
}
#typev  FxIoQueue_cpp2055 39     "%0Presentation lock for WDFQUEUE 0x%10!p! is already held, deferring to dpc or workitem"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGIO FUNC=FxIoQueue::DispatchEvents
{
GetObjectHandle(), ItemPtr -- 10
}
#typev  FxIoQueue_cpp2017 38     "%0Current thread 0x%10!p! is not at the passive-level, posting to worker thread for WDFQUEUE 0x%11!p!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGIO FUNC=FxIoQueue::DispatchEvents
{
PsGetCurrentThread(), ItemPtr -- 10
GetObjectHandle(), ItemPtr -- 11
}
#typev  FxIoQueue_cpp1717 35     "%0Queuing WDFREQUEST 0x%10!p! on WDFQUEUE 0x%11!p!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::QueueRequest
{
pRequest->GetHandle(), ItemPtr -- 10
GetObjectHandle(), ItemPtr -- 11
}
#typev  FxIoQueue_cpp1693 34     "%0WDFRQUEUE 0x%10!p! is not accepting requests, state is %11!s!, completing WDFREQUEST 0x%12!p! %13!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::QueueRequest
{
GetObjectHandle(), ItemPtr -- 10
m_QueueState, ItemEnum(_WDF_IO_QUEUE_STATE) -- 11
pRequest->GetHandle(), ItemPtr -- 12
STATUS_INVALID_DEVICE_STATE, ItemNTSTATUS -- 13
}
#typev  FxIoQueue_cpp895 25     "%0Zero length WDFREQUEST 0x%10!p! completed automatically by WDFQUEUE 0x%11!p!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::GetRequest
{
pRequest->GetHandle(), ItemPtr -- 10
GetObjectHandle(), ItemPtr -- 11
}
#typev  FxIoQueue_cpp881 24     "%0Zero length WDFREQUEST 0x%10!p! completed automatically by WDFQUEUE 0x%11!p!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::GetRequest
{
pRequest->GetHandle(), ItemPtr -- 10
GetObjectHandle(), ItemPtr -- 11
}
#typev  FxIoQueue_cpp849 23     "%0WDFQUEUE 0x%10!p! is paused"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::GetRequest
{
GetObjectHandle(), ItemPtr -- 10
}
#typev  FxIoQueue_cpp838 22     "%0WDFQUEUE 0x%10!p! is powered off"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::GetRequest
{
GetObjectHandle(), ItemPtr -- 10
}
#typev  FxIoQueue_cpp826 21     "%0Cannot be called on a parallel WDFQUEUE 0x%10!p!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::GetRequest
{
GetObjectHandle(), ItemPtr -- 10
}
#typev  FxIoQueue_cpp807 20     "%0Driver called WdfIoQueueRetrieveNextRequest on a sequential WDFQUEUE 0x%10!p! with no outstanding requests. This can cause a race with automatically dispatched requests. Call WdfIoQueueRetrieveNextRequest before completing the current request(s)"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::GetRequest
{
GetObjectHandle(), ItemPtr -- 10
}
#typev  FxIoQueue_cpp793 19     "%0TagRequest 0x%10!p! is not referenced or owned by driver"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::GetRequest
{
TagRequest->GetHandle(), ItemPtr -- 10
}
#typev  FxIoQueue_cpp5026 96     "%0Dispatching requests from DPC"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue_DeferredDispatchDpcThunk
{
}
#typev  FxIoQueue_cpp3337 69     "%0WDFREQUEST 0x%10!p! was cancelled while on WDFQUEUE 0x%11!p!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGIO FUNC=FxIoQueue::CancelForQueue
{
pRequest->GetHandle(), ItemPtr -- 10
GetObjectHandle(), ItemPtr -- 11
}
#typev  FxIoQueue_cpp3063 66     "%0All driver cancellable requests cancelled  in WDFQUEUE 0x%10!p!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGIO FUNC=FxIoQueue::QueuePurge
{
GetObjectHandle(), ItemPtr -- 10
}
#typev  FxIoQueue_cpp3025 64     "%0All WDFQUEUE 0x%10!p! requests cancelled"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGIO FUNC=FxIoQueue::QueuePurge
{
GetObjectHandle(), ItemPtr -- 10
}
#typev  FxIoQueue_cpp3036 65     "%0Cancelling WDFREQUEST 0x%10!p!, WDFQUEUE 0x%11!p!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGIO FUNC=FxIoQueue::QueuePurge
{
pRequest->GetHandle(), ItemPtr -- 10
GetObjectHandle(), ItemPtr -- 11
}
#typev  FxIoQueue_cpp2995 63     "%0WDFQUEUE 0x%10!p! already has a PurgeComplete callback registered 0x%11!p! %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::QueuePurge
{
GetObjectHandle(), ItemPtr -- 10
m_PurgeComplete.Method, ItemPtr -- 11
STATUS_INVALID_DEVICE_REQUEST, ItemNTSTATUS -- 12
}
#typev  FxIoQueue_cpp2844 61     "%0WDFQUEUE 0x%10!p! already has a IdleComplete callback registered 0x%11!p! %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::QueueIdle
{
GetObjectHandle(), ItemPtr -- 10
m_IdleComplete.Method, ItemPtr -- 11
STATUS_INVALID_DEVICE_REQUEST, ItemNTSTATUS -- 12
}
#typev  FxIoQueue_cpp2746 60     "%0WDFQUEUE 0x%10!p! should be stopped before clearing ReadyNotify callback 0x%11!p! registered, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::ReadyNotify
{
GetObjectHandle(), ItemPtr -- 10
&m_ReadyNotify, ItemPtr -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxIoQueue_cpp2730 59     "%0WDFQUEUE 0x%10!p! does not have a ReadyNotify to cancel, %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::ReadyNotify
{
GetObjectHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxIoQueue_cpp2707 58     "%0WDFQUEUE 0x%10!p! already has a ReadyNotify callback 0x%11!p!registered, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::ReadyNotify
{
GetObjectHandle(), ItemPtr -- 10
&m_ReadyNotify, ItemPtr -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxIoQueue_cpp2681 57     "%0WDFQUEUE 0x%10!p! is not a Manual queue, ReadyNotify is only valid on a manual Queue, %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::ReadyNotify
{
GetObjectHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxIoQueue_cpp1817 37     "%0Queuing WDFREQUEST 0x%10!p! on WDFQUEUE 0x%11!p!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::QueueRequestFromForward
{
pRequest->GetHandle(), ItemPtr -- 10
GetObjectHandle(), ItemPtr -- 11
}
#typev  FxIoQueue_cpp1803 36     "%0WDFQUEUE 0x%10!p! is not accepting requests state is %11!s!, WDFREQUEST 0x%12!p! %13!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGIO FUNC=FxIoQueue::QueueRequestFromForward
{
GetObjectHandle(), ItemPtr -- 10
m_QueueState, ItemEnum(_WDF_IO_QUEUE_STATE) -- 11
pRequest->GetHandle(), ItemPtr -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxIoQueue_cpp1368 31     "%0WDFREQUEST 0x%10!p!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::Requeue
{
pRequest->GetHandle(), ItemPtr -- 10
}
#typev  FxIoQueue_cpp1336 30     "%0Requeue is allowed only for a manual queue, WDFREQUEST 0x%10!p! %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::Requeue
{
pRequest, ItemPtr -- 10
STATUS_INVALID_DEVICE_REQUEST, ItemNTSTATUS -- 11
}
#typev  FxIoQueue_cpp1167 29     "%0Cannot forward request to a WDFQUEUE 0x%10!p! that belongs to a different WDFDEVICE 0x%11!p!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::ForwardRequest
{
pDestQueue->GetObjectHandle(), ItemPtr -- 10
pDestQueue->m_Device->GetObjectHandle(), ItemPtr -- 11
}
#typev  FxIoQueue_cpp1157 28     "%0Cannot forward a request to the same WDFQUEUE 0x%10!p! %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::ForwardRequest
{
GetObjectHandle(), ItemPtr -- 10
STATUS_INVALID_DEVICE_REQUEST, ItemNTSTATUS -- 11
}
#typev  FxIoQueue_cpp416 17     "%0Purging WDFQUEUE 0x%10!p! synchronously"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIO FUNC=FxIoQueue::Dispose
{
GetObjectHandle(), ItemPtr -- 10
}
#typev  FxIoQueue_cpp4774 94     "%0Waiting for all inflight requests to be acknowledged  on WDFQUEUE 0x%10!p!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::StopProcessingForPower
{
GetObjectHandle(), ItemPtr -- 10
}
#typev  FxIoQueue_cpp4488 91     "%0Can be called only when the WDFQUEUE 0x%10!p! is in the middle of a power transition"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::StopAcknowledge
{
GetObjectHandle(), ItemPtr -- 10
}
#typev  FxIoQueue_cpp4538 92     "%0Driver Called WdfRequestStopAcknowledge with Reenqueue for WDFREQUEST 0x%10!p!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::StopAcknowledge
{
pRequest->GetHandle(), ItemPtr -- 10
}
#typev  FxIoQueue_cpp3137 67     "%0Waiting for %10!d! requests to complete on WDFQUEUE 0x%11!p!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::QueuePurgeSynchronously
{
(m_DriverIoCount + m_Queue.GetRequestCount()), ItemLong -- 10
GetObjectHandle(), ItemPtr -- 11
}
#typev  FxIoQueue_cpp2911 62     "%0Waiting for %10!d! requests to complete on WDFQUEUE 0x%11!p!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::QueueIdleSynchronously
{
m_DriverIoCount, ItemLong -- 10
GetObjectHandle(), ItemPtr -- 11
}
#typev  FxIoQueue_cpp3196 68     "%0Waiting for %10!d! requests to complete on WDFQUEUE 0x%11!p!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxIoQueue::QueueDrainSynchronously
{
(m_DriverIoCount + m_Queue.GetRequestCount()), ItemLong -- 10
GetObjectHandle(), ItemPtr -- 11
}
#typev  FxIoQueue_cpp191 11     "%0Could not configure queue: %10!s!"      //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::Create
{
status, ItemNTSTATUS -- 10
}
#typev  FxIoQueue_cpp180 10     "%0Memory allocation failed: %10!s!"      //   GLOBALS=DriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxIoQueue::Create
{
status, ItemNTSTATUS -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxIoQueue_cpp4643 93     "%0Waiting for all threads to stop dispatching requests so that WDFQUEUE 0x%10!p! can be powered off"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxPkgIo::StopProcessingForPower
{
GetObjectHandle(), ItemPtr -- 10
}
#enumv _WDF_REQUEST_TYPE
{
WdfRequestTypeCreate,0x0
WdfRequestTypeCreateNamedPipe,0x1
WdfRequestTypeClose,0x2
WdfRequestTypeRead,0x3
WdfRequestTypeWrite,0x4
WdfRequestTypeQueryInformation,0x5
WdfRequestTypeSetInformation,0x6
WdfRequestTypeQueryEA,0x7
WdfRequestTypeSetEA,0x8
WdfRequestTypeFlushBuffers,0x9
WdfRequestTypeQueryVolumeInformation,0xA
WdfRequestTypeSetVolumeInformation,0xB
WdfRequestTypeDirectoryControl,0xC
WdfRequestTypeFileSystemControl,0xD
WdfRequestTypeDeviceControl,0xE
WdfRequestTypeDeviceControlInternal,0xF
WdfRequestTypeShutdown,0x10
WdfRequestTypeLockControl,0x11
WdfRequestTypeCleanup,0x12
WdfRequestTypeCreateMailSlot,0x13
WdfRequestTypeQuerySecurity,0x14
WdfRequestTypeSetSecurity,0x15
WdfRequestTypePower,0x16
WdfRequestTypeSystemControl,0x17
WdfRequestTypeDeviceChange,0x18
WdfRequestTypeQueryQuota,0x19
WdfRequestTypeSetQuota,0x1A
WdfRequestTypePnp,0x1B
WdfRequestTypeOther,0x1C
WdfRequestTypeUsb,0x40
WdfRequestTypeNoFormat,0xFF
WdfRequestTypeMax,0x100
}
#enumv _WDF_IO_QUEUE_STATE
{
WdfIoQueueAcceptRequests,0x1
WdfIoQueueDispatchRequests,0x2
WdfIoQueueNoRequests,0x4
WdfIoQueueDriverNoRequests,0x8
WdfIoQueuePnpHeld,0x10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
b9b47a02-1bf9-a7d9-c5f3-32bf11d121e0     core // SRC=FxTimer.cpp MJ= MN=
#typev  FxTimer_cpp465 12     "%0WdfTimerStop(Wait==TRUE) called IRQL > PASSIVE_LEVEL, current IRQL = 0x%10!x!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxTimer::Stop
{
KeGetCurrentIrql(), ItemLong -- 10
}
#typev  FxTimer_cpp66 10     "%0WDFTIMER %10!p! destroyed without calling WdfObjectDelete, or by Framework processing DeviceRemove. Possible reference count problem?"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxTimer::~FxTimer
{
GetObjectHandleUnchecked(), ItemPtr -- 10
}
#typev  FxTimer_cpp187 11     "%0ParentObject %10!p! can not automatically synchronize callbacks with a Timer since it is configured for passive level callback constraints.  Disable AutomaticSynchronization. %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxTimer::Initialize
{
Attributes->ParentObject, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
bb1cfa82-59d5-dde2-b1a9-867eb7b54a57     usb // SRC=FxUsbDeviceAPI.cpp MJ= MN=
#typev  FxUsbDeviceAPI_cpp162 10     "%0Information size %10!d!, expected %11!d! %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceRetrieveInformation
{
Information->Size, ItemLong -- 10
sizeof(WDF_USB_DEVICE_INFORMATION), ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxUsbDeviceAPI_cpp1274 28     "%0WDFUSBDEVICE %10!p! has %11!d! interfaces, index %12!d! requested, returning NULL handle"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceGetInterface
{
UsbDevice, ItemPtr -- 10
pUsbDevice->GetNumInterfaces(), ItemLong -- 11
InterfaceIndex, ItemLong -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxUsbDeviceAPI_cpp1068 27     "%0format control request WDFUSBDEVICE %10!p!, WDFREQWUEST %11!p!, WDFMEMORY %12!p!, %13!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceFormatRequestForControlTransfer
{
UsbDevice, ItemPtr -- 10
Request, ItemPtr -- 11
TransferMemory, ItemPtr -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxUsbDeviceAPI_cpp1016 26     "%0WDFUSBDEVICE %10!p!, WDFREQUEST %11!p!, WDFMEMORY %12!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceFormatRequestForControlTransfer
{
UsbDevice, ItemPtr -- 10
Request, ItemPtr -- 11
TransferMemory, ItemPtr -- 12
}
#typev  FxUsbDeviceAPI_cpp504 13     "%0WDFUSBDEVICE %10!p!, WDFREQUEST %11!p!, WDFMEMORY %12!p!, %13!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceFormatRequestForString
{
UsbDevice, ItemPtr -- 10
Request, ItemPtr -- 11
Memory, ItemPtr -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxUsbDeviceAPI_cpp474 12     "%0WDFMEMORY %10!p! length must be even number of WCHARs, but is %11!I64d! in length, %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceFormatRequestForString
{
Memory, ItemPtr -- 10
bufferSize, ItemLongLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxUsbDeviceAPI_cpp438 11     "%0WDFUSBDEVICE %10!p!, WDFREQUEST %11!p!, WDFMEMORY %12!p!, StringIndex %13!d!, LandID 0x%14!x!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceFormatRequestForString
{
UsbDevice, ItemPtr -- 10
Request, ItemPtr -- 11
Memory, ItemPtr -- 12
StringIndex, ItemLong -- 13
LangID, ItemLong -- 14
}
#typev  FxUsbDeviceAPI_cpp853 22     "%0WDFUSBDEVICE %10!p!, Request %11!p!, Memory %12!p!, %13!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceFormatRequestForUrb
{
UsbDevice, ItemPtr -- 10
Request, ItemPtr -- 11
UrbMemory, ItemPtr -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxUsbDeviceAPI_cpp834 21     "%0UrbMemory %10!p! buffer size, %11!I64d!, smaller then_URB_HEADER, %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceFormatRequestForUrb
{
UrbMemory, ItemPtr -- 10
pMemory->GetBufferSize(), ItemLongLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxUsbDeviceAPI_cpp801 20     "%0WDFUSBDEVICE %10!p!, Request %11!p!, Memory %12!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceFormatRequestForUrb
{
UsbDevice, ItemPtr -- 10
Request, ItemPtr -- 11
UrbMemory, ItemPtr -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxUsbDeviceAPI_cpp962 25     "%0WDFUSBDEVICE %10!p!, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceSendControlTransferSynchronously
{
UsbDevice, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxUsbDeviceAPI_cpp945 24     "%0WDFUSBDEVICE %10!p!, WDFREQUEST %11!p! being submitted"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceSendControlTransferSynchronously
{
UsbDevice, ItemPtr -- 10
request.m_TrueRequest->GetTraceObjectHandle(), ItemPtr -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxUsbDeviceAPI_cpp910 23     "%0WDFUSBDEVICE %10!p! control transfer sync"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceSendControlTransferSynchronously
{
UsbDevice, ItemPtr -- 10
}
#typev  FxUsbDeviceAPI_cpp768 19     "%0Device %10!p!, Urb %11!p!, %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceSendUrbSynchronously
{
UsbDevice, ItemPtr -- 10
Urb, ItemPtr -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxUsbDeviceAPI_cpp760 18     "%0WDFUSBDEVICE %10!p!, WDFREQUEST %11!p! being submitted"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceSendUrbSynchronously
{
UsbDevice, ItemPtr -- 10
request.m_TrueRequest->GetTraceObjectHandle(), ItemPtr -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxUsbDeviceAPI_cpp732 17     "%0WDFUSBDEVICE %10!p!, Urb %11!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceSendUrbSynchronously
{
UsbDevice, ItemPtr -- 10
Urb, ItemPtr -- 11
}
#typev  FxUsbDeviceAPI_cpp608 16     "%0WDFUSBDEVICE %10!p! NumberInterfaces %11!d! != %12!d!, %13!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceSelectConfig
{
pUsbDevice->GetHandle(), ItemPtr -- 10
Params->Types.MultiInterface.NumberInterfaces, ItemLong -- 11
pUsbDevice->GetNumInterfaces(), ItemLong -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxUsbDeviceAPI_cpp597 15     "%0WDFUSBDEVICE %10!p! SettingPairs Array passed is NULL, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceSelectConfig
{
pUsbDevice->GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxUsbDeviceAPI_cpp540 14     "%0Params size %10!d!, expected %11!d! %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetDeviceSelectConfig
{
Params->Size, ItemLong -- 10
sizeof(WDF_USB_DEVICE_SELECT_CONFIG_PARAMS), ItemLong -- 11
status, ItemNTSTATUS -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
bc4ada84-2748-6d11-8c0d-58437cf3a03d     support // SRC=FxResourceAPI.cpp MJ= MN=
#typev  FxResourceAPI_cpp1274 17     "%0Removes not allowed on WDFCMRESLIST %10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfCmResourceListRemoveByDescriptor
{
List, ItemPtr -- 10
}
#typev  FxResourceAPI_cpp925 15     "%0Removes not allowed on WDFIORESLIST %10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfIoResourceListRemoveByDescriptor
{
ResourceList, ItemPtr -- 10
}
#typev  FxResourceAPI_cpp727 13     "%0WDFIORESREQLIST %10!p!, cannot update item at index %11!d!, item not found, list item count is %12!d!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfIoResourceListUpdateDescriptor
{
ResourceList, ItemPtr -- 10
Index, ItemLong -- 11
pList->Count(), ItemLong -- 12
}
#typev  FxResourceAPI_cpp409 11     "%0WDFIORESREQLIST %10!p!: Removes not allowed"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfIoResourceRequirementsListRemoveByIoResList
{
RequirementsList, ItemPtr -- 10
}
#typev  FxResourceAPI_cpp1223 16     "%0WDFCMRESLIST %10!p!, could not remove list at index %11!d! (not found), list item count is %12!d!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfCmResourceListRemove
{
List, ItemPtr -- 10
Index, ItemLong -- 11
pList->Count(), ItemLong -- 12
}
#typev  FxResourceAPI_cpp875 14     "%0WDFIORESLIST %10!p!, could not remove item at index %11!d! (not found), list item count is %12!d!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfIoResourceListRemove
{
ResourceList, ItemPtr -- 10
Index, ItemLong -- 11
pList->Count(), ItemLong -- 12
}
#typev  FxResourceAPI_cpp360 10     "%0WDFIORESLIST %10!p!, could not remove list at index %11!d! (not found), list item count is %12!d!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfIoResourceRequirementsListRemove
{
RequirementsList, ItemPtr -- 10
Index, ItemLong -- 11
pList->Count(), ItemLong -- 12
}
#typev  FxResourceAPI_cpp562 12     "%0Removes not allowed on WDFIORESLIST %10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxIoResourceListInsertDescriptor
{
ResourceList, ItemPtr -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
bcc50309-e9dd-f3f9-ef19-3ba24d4437ed     core // SRC=FxDriver.cpp MJ= MN=
#typev  FxDriver_cpp83 10     "%0FxDriver 0x%10!p! not disposed: this maybe a driver reference count problem with WDFDRIVER 0x%11!p!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_FATAL FLAGS=TRACINGDRIVER FUNC=FxDriver::~FxDriver
{
this, ItemPtr -- 10
GetObjectHandleUnchecked(), ItemPtr -- 11
}
#typev  FxDriver_cpp161 11     "%0WDFDRIVER %10!p!, PDRIVER_OBJECT %11!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxDriver::Unload
{
pDriver->GetHandle(), ItemPtr -- 10
DriverObject, ItemPtr -- 11
}
#typev  FxDriver_cpp614 17     "%0Exit, status %10!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxDriver::AddDevice
{
status, ItemNTSTATUS -- 10
}
#typev  FxDriver_cpp583 16     "%0Filter returned %10!s! without creating a WDFDEVICE, converting to STATUS_SUCCESS"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxDriver::AddDevice
{
status, ItemNTSTATUS -- 10
}
#typev  FxDriver_cpp574 15     "%0Driver did not create a device in EvtDriverAddDevice, status %10!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGPNP FUNC=FxDriver::AddDevice
{
status, ItemNTSTATUS -- 10
}
#typev  FxDriver_cpp551 14     "%0FxTraceInitializeW2k via AddDevice failed, %10!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxDriver::AddDevice
{
status, ItemNTSTATUS -- 10
}
#typev  FxDriver_cpp529 13     "%0Enter AddDevice PDO %10!p!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxDriver::AddDevice
{
PhysicalDeviceObject, ItemPtr -- 10
}
#typev  FxDriver_cpp509 12     "%0Driver Object %10!p!, reg path %11!s! cannot be unloaded, no DriverUnload routine specified"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGDRIVER FUNC=FxDriver::Initialize
{
m_DriverObject, ItemPtr -- 10
&m_RegistryPath, ItemPWString -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
bd582798-cfe7-e75c-bc62-baa019cc3090     core // SRC=FxVerifierLock.cpp MJ= MN=
#typev  FxVerifierLock_cpp867 24     "%0OldEntry Thread 0x%10!p! not Current! 0x%11!p!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::ReleaseOrReplaceThreadTableEntry
{
pLock, ItemPtr -- 10
curThread, ItemPtr -- 11
}
#typev  FxVerifierLock_cpp699 20     "%0Thread 0x%10!p! does not have an entry"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::GetThreadTableEntry
{
curThread, ItemPtr -- 10
}
#typev  FxVerifierLock_cpp625 19     "%0Object Type 0x%10!x! does not have a lock order defined in fx\inc\FxVerifierLock.hpp"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::InitializeLockOrder
{
ObjectType, ItemLong -- 10
}
#typev  FxVerifierLock_cpp556 18     "%0Record entry for VerifierLock 0x%10!p! is missing on list 0x%11!p! for Thread 0x%12!p!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::Unlock
{
this, ItemPtr -- 10
perThreadList, ItemPtr -- 11
m_OwningThread, ItemPtr -- 12
}
#typev  FxVerifierLock_cpp479 17     "%0Record entry for VerifierLock 0x%10!p! is missing on list 0x%11!p! for Thread 0x%12!p!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::Unlock
{
this, ItemPtr -- 10
perThreadList, ItemPtr -- 11
m_OwningThread, ItemPtr -- 12
}
#typev  FxVerifierLock_cpp382 16     "%0this 0x%10!p!, perThreadList 0x%11!p!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::Unlock
{
this, ItemPtr -- 10
perThreadList, ItemPtr -- 11
}
#typev  FxVerifierLock_cpp379 15     "%0Thread has entry, but no locks recorded as held for dispatch!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::Unlock
{
}
#typev  FxVerifierLock_cpp361 14     "%0this 0x%10!p!, perThreadList 0x%11!p!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::Unlock
{
this, ItemPtr -- 10
perThreadList, ItemPtr -- 11
}
#typev  FxVerifierLock_cpp358 13     "%0Thread has entry, but no locks recorded as held for passive!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::Unlock
{
}
#typev  FxVerifierLock_cpp326 12     "%0Unlock:  Can't get per thread entry for thread %10!p!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::Unlock
{
curThread, ItemPtr -- 10
}
#typev  FxVerifierLock_cpp310 11     "%0Thread 0x%10!p! Is Attempting to release a Lock 0x%11!p! for Object 0x%12!p! it does not own!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::Unlock
{
curThread, ItemPtr -- 10
this, ItemPtr -- 11
m_ParentObject, ItemPtr -- 12
}
#typev  FxVerifierLock_cpp1027 29     "%0Object 0x%10!p!, ObjectType 0x%11!x!, LockLevel 0x%12!x!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::DumpDetails
{
next->m_ParentObject, ItemPtr -- 10
next->m_ParentObject->GetType(), ItemLong -- 11
next->m_Order, ItemLong -- 12
}
#typev  FxVerifierLock_cpp1022 28     "%0List of Already Acquired Locks and Objects:"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::DumpDetails
{
}
#typev  FxVerifierLock_cpp1015 27     "%0Highest Lock Currently held is level 0x%10!x! for Object 0x%11!p!, ObjectType 0x%12!x!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::DumpDetails
{
next->m_Order, ItemLong -- 10
next->m_ParentObject, ItemPtr -- 11
next->m_ParentObject->GetType(), ItemLong -- 12
}
#typev  FxVerifierLock_cpp1006 26     "%0Thread 0x%10!p! Attempted to acquire lock on Object 0x%11!p!, ObjectType 0x%12!x!, at Level 0x%13!x! out of sequence."      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::DumpDetails
{
curThread, ItemPtr -- 10
Lock->m_ParentObject, ItemPtr -- 11
Lock->m_ParentObject->GetType(), ItemLong -- 12
Lock->m_Order, ItemLong -- 13
}
#typev  FxVerifierLock_cpp169 10     "%0Thread 0x%10!p! already owns lock 0x%11!p! for object 0x%12!p!, WDFOBJECT 0x%13!p!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_FATAL FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::Lock
{
curThread, ItemPtr -- 10
this, ItemPtr -- 11
m_ParentObject, ItemPtr -- 12
m_ParentObject->GetObjectHandle(), ItemPtr -- 13
}
#typev  FxVerifierLock_cpp954 25     "%0No Memory to allocate thread table"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxVerifierLock::AllocateThreadTable
{
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
c0cdc970-cc46-0f88-d446-f284c87c2298     core // SRC=FxDevicePdoAPI.cpp MJ= MN=
#typev  FxDevicePdoAPI_cpp64 10     "%0%10!s!: Incorrect device handle supplied (0x%11!p!).  Device is not a PDO."      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=GetPdoPackageFromDeviceHandle
{
FunctionName, ItemString -- 10
Device, ItemPtr -- 11
}
#typev  FxDevicePdoAPI_cpp176 13     "%0Can only eject PDOs, %10!s!"      //   GLOBALS=GetFxDriverGlobals(DriverGlobals) LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfPdoGetParent
{
status, ItemNTSTATUS -- 10
}
#typev  FxDevicePdoAPI_cpp147 12     "%0Can only eject PDOs, %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfPdoRequestEject
{
status, ItemNTSTATUS -- 10
}
#typev  FxDevicePdoAPI_cpp140 11     "%0PDO WDFDEVICE %10!p! not reported yet to pnp, cannot eject!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfPdoRequestEject
{
Device, ItemPtr -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
c32bb4b4-e5b1-8e9d-94c0-8f97f8b7f0f2     core // SRC=FxSyncRequest.cpp MJ= MN=
#typev  FxSyncRequest_cpp162 12     "%0SyncRequest %10!p!, signaling event %11!p! on SelfDestruct"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxSyncRequest::SelfDestruct
{
this, ItemPtr -- 10
m_DestroyedEvent.GetEvent(), ItemPtr -- 11
}
#typev  FxSyncRequest_cpp133 11     "%0Request %10!p!, wait on event %11!p! done"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxSyncRequest::~FxSyncRequest
{
this, ItemPtr -- 10
m_DestroyedEvent.GetEvent(), ItemPtr -- 11
}
#typev  FxSyncRequest_cpp127 10     "%0Request %10!p!, waiting on event %11!p!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxSyncRequest::~FxSyncRequest
{
this, ItemPtr -- 10
m_DestroyedEvent.GetEvent(), ItemPtr -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
c7b768f3-36fb-dd4e-e4b9-3eae029c59f4     pnp // SRC=EventQueue.cpp MJ= MN=
#typev  EventQueue_cpp173 10     "%0!devobj 0x%10!p! current pnp state %11!s! not queueing work item to process event queue"      //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxEventQueue::QueueToThreadWorker
{
m_PkgPnp->GetDevice()->GetDeviceObject(), ItemPtr -- 10
m_PkgPnp->GetDevice()->GetDevicePnpState(), ItemEnum(_WDF_DEVICE_PNP_STATE) -- 11
}
#enumv _WDF_DEVICE_PNP_STATE
{
WdfDevStatePnpInvalid,0x0
WdfDevStatePnpObjectCreated,0x100
WdfDevStatePnpCheckForDevicePresence,0x101
WdfDevStatePnpEjectFailed,0x102
WdfDevStatePnpEjectHardware,0x103
WdfDevStatePnpEjectedWaitingForRemove,0x104
WdfDevStatePnpInit,0x105
WdfDevStatePnpInitStarting,0x106
WdfDevStatePnpInitSurpriseRemoved,0x107
WdfDevStatePnpHardwareAvailable,0x108
WdfDevStatePnpEnableInterfaces,0x109
WdfDevStatePnpHardwareAvailablePowerPolicyFailed,0x10A
WdfDevStatePnpQueryRemoveAskDriver,0x10B
WdfDevStatePnpQueryRemovePending,0x10C
WdfDevStatePnpQueryRemoveStaticCheck,0x10D
WdfDevStatePnpQueriedRemoving,0x10E
WdfDevStatePnpQueryStopAskDriver,0x10F
WdfDevStatePnpQueryStopPending,0x110
WdfDevStatePnpQueryStopStaticCheck,0x111
WdfDevStatePnpQueryCanceled,0x112
WdfDevStatePnpRemoved,0x113
WdfDevStatePnpPdoRemoved,0x114
WdfDevStatePnpRemovedPdoWait,0x115
WdfDevStatePnpRemovedPdoSurpriseRemoved,0x116
WdfDevStatePnpRemovingDisableInterfaces,0x117
WdfDevStatePnpRestarting,0x118
WdfDevStatePnpStarted,0x119
WdfDevStatePnpStartedCancelStop,0x11A
WdfDevStatePnpStartedCancelRemove,0x11B
WdfDevStatePnpStartedRemoving,0x11C
WdfDevStatePnpStartingFromStopped,0x11D
WdfDevStatePnpStopped,0x11E
WdfDevStatePnpStoppedWaitForStartCompletion,0x11F
WdfDevStatePnpStartedStopping,0x120
WdfDevStatePnpSurpriseRemove,0x121
WdfDevStatePnpInitQueryRemove,0x122
WdfDevStatePnpInitQueryRemoveCanceled,0x123
WdfDevStatePnpFdoRemoved,0x124
WdfDevStatePnpRemovedWaitForChildren,0x125
WdfDevStatePnpQueriedSurpriseRemove,0x126
WdfDevStatePnpSurpriseRemoveIoStarted,0x127
WdfDevStatePnpFailedPowerDown,0x128
WdfDevStatePnpFailedIoStarting,0x129
WdfDevStatePnpFailedOwnHardware,0x12A
WdfDevStatePnpFailed,0x12B
WdfDevStatePnpFailedSurpriseRemoved,0x12C
WdfDevStatePnpFailedStarted,0x12D
WdfDevStatePnpFailedWaitForRemove,0x12E
WdfDevStatePnpFailedInit,0x12F
WdfDevStatePnpPdoInitFailed,0x130
WdfDevStatePnpRestart,0x131
WdfDevStatePnpRestartReleaseHardware,0x132
WdfDevStatePnpRestartHardwareAvailable,0x133
WdfDevStatePnpPdoRestart,0x134
WdfDevStatePnpFinal,0x135
WdfDevStatePnpNull,0x136
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
c7da82cc-1b83-a954-f295-ec91ab9d2fb4     base // SRC=FxValidateFunctions.hpp MJ= MN=
#typev  FxValidateFunctions_hpp159 18     "%0Attributes %10!p! execution level set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfInterruptCreate
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp168 19     "%0Attributes %10!p! synchronization scope set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfInterruptCreate
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp201 21     "%0Attributes %10!p! does not allow execution level to be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfInterruptCreate
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemEnum(_WDF_EXECUTION_LEVEL) -- 11
}
#typev  FxValidateFunctions_hpp184 20     "%0Attributes %10!p! does not allow synchronization scope too be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfInterruptCreate
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemEnum(_WDF_SYNCHRONIZATION_SCOPE) -- 11
}
#typev  FxValidateFunctions_hpp137 16     "%0Attributes %10!p! does not allow a parent object to be set, set to %11!p!, status 0x%12!x!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfInterruptCreate
{
Attributes, ItemPtr -- 10
Attributes->ParentObject, ItemPtr -- 11
(ULONG) STATUS_WDF_PARENT_ASSIGNMENT_NOT_ALLOWED, ItemLong -- 12
}
#typev  FxValidateFunctions_hpp124 15     "%0Attributes %10!p! ContextSizeOverride %11!I64d! < ContextTypeInfo->ContextSize %12!I64d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfInterruptCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp115 14     "%0Attributes %10!p! ContextSizeOverride of %11!I64d! specified, but no type information!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfInterruptCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
}
#typev  FxValidateFunctions_hpp99 13     "%0Attributes %10!p! ContextTypeInfo %11!p! ContextSize %12!I64d! is not zero, but ContextName is NULL"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfInterruptCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp83 12     "%0Attributes %10!p! ContextTypeInfo %11!p! Size %12!d! incorrect, expected %13!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfInterruptCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->Size, ItemLong -- 12
sizeof(WDF_OBJECT_CONTEXT_TYPE_INFO), ItemLong -- 13
}
#typev  FxValidateFunctions_hpp70 11     "%0Attributes %10!p! Size incorrect, expected %11!d!, got %12!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfInterruptCreate
{
Attributes, ItemPtr -- 10
sizeof(WDF_OBJECT_ATTRIBUTES), ItemLong -- 11
Attributes->Size, ItemLong -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp159 18     "%0Attributes %10!p! execution level set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfObjectAllocateContext
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp168 19     "%0Attributes %10!p! synchronization scope set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfObjectAllocateContext
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp201 21     "%0Attributes %10!p! does not allow execution level to be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfObjectAllocateContext
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemEnum(_WDF_EXECUTION_LEVEL) -- 11
}
#typev  FxValidateFunctions_hpp184 20     "%0Attributes %10!p! does not allow synchronization scope too be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfObjectAllocateContext
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemEnum(_WDF_SYNCHRONIZATION_SCOPE) -- 11
}
#typev  FxValidateFunctions_hpp124 15     "%0Attributes %10!p! ContextSizeOverride %11!I64d! < ContextTypeInfo->ContextSize %12!I64d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfObjectAllocateContext
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp99 13     "%0Attributes %10!p! ContextTypeInfo %11!p! ContextSize %12!I64d! is not zero, but ContextName is NULL"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfObjectAllocateContext
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp83 12     "%0Attributes %10!p! ContextTypeInfo %11!p! Size %12!d! incorrect, expected %13!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfObjectAllocateContext
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->Size, ItemLong -- 12
sizeof(WDF_OBJECT_CONTEXT_TYPE_INFO), ItemLong -- 13
}
#typev  FxValidateFunctions_hpp70 11     "%0Attributes %10!p! Size incorrect, expected %11!d!, got %12!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfObjectAllocateContext
{
Attributes, ItemPtr -- 10
sizeof(WDF_OBJECT_ATTRIBUTES), ItemLong -- 11
Attributes->Size, ItemLong -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp159 18     "%0Attributes %10!p! execution level set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryQueryMultiString
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp168 19     "%0Attributes %10!p! synchronization scope set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryQueryMultiString
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp201 21     "%0Attributes %10!p! does not allow execution level to be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryQueryMultiString
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemEnum(_WDF_EXECUTION_LEVEL) -- 11
}
#typev  FxValidateFunctions_hpp184 20     "%0Attributes %10!p! does not allow synchronization scope too be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryQueryMultiString
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemEnum(_WDF_SYNCHRONIZATION_SCOPE) -- 11
}
#typev  FxValidateFunctions_hpp124 15     "%0Attributes %10!p! ContextSizeOverride %11!I64d! < ContextTypeInfo->ContextSize %12!I64d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryQueryMultiString
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp115 14     "%0Attributes %10!p! ContextSizeOverride of %11!I64d! specified, but no type information!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryQueryMultiString
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
}
#typev  FxValidateFunctions_hpp99 13     "%0Attributes %10!p! ContextTypeInfo %11!p! ContextSize %12!I64d! is not zero, but ContextName is NULL"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryQueryMultiString
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp83 12     "%0Attributes %10!p! ContextTypeInfo %11!p! Size %12!d! incorrect, expected %13!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryQueryMultiString
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->Size, ItemLong -- 12
sizeof(WDF_OBJECT_CONTEXT_TYPE_INFO), ItemLong -- 13
}
#typev  FxValidateFunctions_hpp70 11     "%0Attributes %10!p! Size incorrect, expected %11!d!, got %12!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryQueryMultiString
{
Attributes, ItemPtr -- 10
sizeof(WDF_OBJECT_ATTRIBUTES), ItemLong -- 11
Attributes->Size, ItemLong -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp159 18     "%0Attributes %10!p! execution level set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryCreateKey
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp168 19     "%0Attributes %10!p! synchronization scope set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryCreateKey
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp201 21     "%0Attributes %10!p! does not allow execution level to be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryCreateKey
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemEnum(_WDF_EXECUTION_LEVEL) -- 11
}
#typev  FxValidateFunctions_hpp184 20     "%0Attributes %10!p! does not allow synchronization scope too be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryCreateKey
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemEnum(_WDF_SYNCHRONIZATION_SCOPE) -- 11
}
#typev  FxValidateFunctions_hpp124 15     "%0Attributes %10!p! ContextSizeOverride %11!I64d! < ContextTypeInfo->ContextSize %12!I64d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryCreateKey
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp115 14     "%0Attributes %10!p! ContextSizeOverride of %11!I64d! specified, but no type information!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryCreateKey
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
}
#typev  FxValidateFunctions_hpp99 13     "%0Attributes %10!p! ContextTypeInfo %11!p! ContextSize %12!I64d! is not zero, but ContextName is NULL"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryCreateKey
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp83 12     "%0Attributes %10!p! ContextTypeInfo %11!p! Size %12!d! incorrect, expected %13!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryCreateKey
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->Size, ItemLong -- 12
sizeof(WDF_OBJECT_CONTEXT_TYPE_INFO), ItemLong -- 13
}
#typev  FxValidateFunctions_hpp70 11     "%0Attributes %10!p! Size incorrect, expected %11!d!, got %12!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryCreateKey
{
Attributes, ItemPtr -- 10
sizeof(WDF_OBJECT_ATTRIBUTES), ItemLong -- 11
Attributes->Size, ItemLong -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp159 18     "%0Attributes %10!p! execution level set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryOpenKey
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp168 19     "%0Attributes %10!p! synchronization scope set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryOpenKey
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp201 21     "%0Attributes %10!p! does not allow execution level to be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryOpenKey
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemEnum(_WDF_EXECUTION_LEVEL) -- 11
}
#typev  FxValidateFunctions_hpp184 20     "%0Attributes %10!p! does not allow synchronization scope too be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryOpenKey
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemEnum(_WDF_SYNCHRONIZATION_SCOPE) -- 11
}
#typev  FxValidateFunctions_hpp124 15     "%0Attributes %10!p! ContextSizeOverride %11!I64d! < ContextTypeInfo->ContextSize %12!I64d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryOpenKey
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp115 14     "%0Attributes %10!p! ContextSizeOverride of %11!I64d! specified, but no type information!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryOpenKey
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
}
#typev  FxValidateFunctions_hpp99 13     "%0Attributes %10!p! ContextTypeInfo %11!p! ContextSize %12!I64d! is not zero, but ContextName is NULL"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryOpenKey
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp83 12     "%0Attributes %10!p! ContextTypeInfo %11!p! Size %12!d! incorrect, expected %13!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryOpenKey
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->Size, ItemLong -- 12
sizeof(WDF_OBJECT_CONTEXT_TYPE_INFO), ItemLong -- 13
}
#typev  FxValidateFunctions_hpp70 11     "%0Attributes %10!p! Size incorrect, expected %11!d!, got %12!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryOpenKey
{
Attributes, ItemPtr -- 10
sizeof(WDF_OBJECT_ATTRIBUTES), ItemLong -- 11
Attributes->Size, ItemLong -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp159 18     "%0Attributes %10!p! execution level set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryQueryMemory
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp168 19     "%0Attributes %10!p! synchronization scope set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryQueryMemory
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp201 21     "%0Attributes %10!p! does not allow execution level to be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryQueryMemory
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemEnum(_WDF_EXECUTION_LEVEL) -- 11
}
#typev  FxValidateFunctions_hpp184 20     "%0Attributes %10!p! does not allow synchronization scope too be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryQueryMemory
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemEnum(_WDF_SYNCHRONIZATION_SCOPE) -- 11
}
#typev  FxValidateFunctions_hpp124 15     "%0Attributes %10!p! ContextSizeOverride %11!I64d! < ContextTypeInfo->ContextSize %12!I64d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryQueryMemory
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp115 14     "%0Attributes %10!p! ContextSizeOverride of %11!I64d! specified, but no type information!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryQueryMemory
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
}
#typev  FxValidateFunctions_hpp99 13     "%0Attributes %10!p! ContextTypeInfo %11!p! ContextSize %12!I64d! is not zero, but ContextName is NULL"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryQueryMemory
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp83 12     "%0Attributes %10!p! ContextTypeInfo %11!p! Size %12!d! incorrect, expected %13!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryQueryMemory
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->Size, ItemLong -- 12
sizeof(WDF_OBJECT_CONTEXT_TYPE_INFO), ItemLong -- 13
}
#typev  FxValidateFunctions_hpp70 11     "%0Attributes %10!p! Size incorrect, expected %11!d!, got %12!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRegistryQueryMemory
{
Attributes, ItemPtr -- 10
sizeof(WDF_OBJECT_ATTRIBUTES), ItemLong -- 11
Attributes->Size, ItemLong -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp159 18     "%0Attributes %10!p! execution level set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfIoResourceListCreate
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp168 19     "%0Attributes %10!p! synchronization scope set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfIoResourceListCreate
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp201 21     "%0Attributes %10!p! does not allow execution level to be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfIoResourceListCreate
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemEnum(_WDF_EXECUTION_LEVEL) -- 11
}
#typev  FxValidateFunctions_hpp184 20     "%0Attributes %10!p! does not allow synchronization scope too be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfIoResourceListCreate
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemEnum(_WDF_SYNCHRONIZATION_SCOPE) -- 11
}
#typev  FxValidateFunctions_hpp137 16     "%0Attributes %10!p! does not allow a parent object to be set, set to %11!p!, status 0x%12!x!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfIoResourceListCreate
{
Attributes, ItemPtr -- 10
Attributes->ParentObject, ItemPtr -- 11
(ULONG) STATUS_WDF_PARENT_ASSIGNMENT_NOT_ALLOWED, ItemLong -- 12
}
#typev  FxValidateFunctions_hpp124 15     "%0Attributes %10!p! ContextSizeOverride %11!I64d! < ContextTypeInfo->ContextSize %12!I64d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfIoResourceListCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp115 14     "%0Attributes %10!p! ContextSizeOverride of %11!I64d! specified, but no type information!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfIoResourceListCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
}
#typev  FxValidateFunctions_hpp99 13     "%0Attributes %10!p! ContextTypeInfo %11!p! ContextSize %12!I64d! is not zero, but ContextName is NULL"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfIoResourceListCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp83 12     "%0Attributes %10!p! ContextTypeInfo %11!p! Size %12!d! incorrect, expected %13!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfIoResourceListCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->Size, ItemLong -- 12
sizeof(WDF_OBJECT_CONTEXT_TYPE_INFO), ItemLong -- 13
}
#typev  FxValidateFunctions_hpp70 11     "%0Attributes %10!p! Size incorrect, expected %11!d!, got %12!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfIoResourceListCreate
{
Attributes, ItemPtr -- 10
sizeof(WDF_OBJECT_ATTRIBUTES), ItemLong -- 11
Attributes->Size, ItemLong -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp261 24     "%0Options %10!p!, if WDF_REQUEST_SEND_OPTION_SEND_AND_FORGET (0x%11!x!) is set, no other Flags 0x%12!x! can be set"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxUsbPipe::_SendTransfer
{
Options, ItemPtr -- 10
WDF_REQUEST_SEND_OPTION_SEND_AND_FORGET, ItemLong -- 11
Options->Flags, ItemLong -- 12
}
#typev  FxValidateFunctions_hpp247 23     "%0Options %10!p! Flags 0x%11!x! invalid, valid mask is 0x%12!x!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxUsbPipe::_SendTransfer
{
Options, ItemPtr -- 10
Options->Flags, ItemLong -- 11
WDF_REQUEST_SEND_OPTIONS_VALID_FLAGS, ItemLong -- 12
}
#typev  FxValidateFunctions_hpp235 22     "%0Options %10!p! Size incorrect, expected %11!d!, got %12!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxUsbPipe::_SendTransfer
{
Options, ItemPtr -- 10
sizeof(WDF_REQUEST_SEND_OPTIONS), ItemLong -- 11
Options->Size, ItemLong -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp159 18     "%0Attributes %10!p! execution level set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfObjectCreate
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp168 19     "%0Attributes %10!p! synchronization scope set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfObjectCreate
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp184 20     "%0Attributes %10!p! does not allow synchronization scope too be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfObjectCreate
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemEnum(_WDF_SYNCHRONIZATION_SCOPE) -- 11
}
#typev  FxValidateFunctions_hpp124 15     "%0Attributes %10!p! ContextSizeOverride %11!I64d! < ContextTypeInfo->ContextSize %12!I64d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfObjectCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp115 14     "%0Attributes %10!p! ContextSizeOverride of %11!I64d! specified, but no type information!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfObjectCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
}
#typev  FxValidateFunctions_hpp99 13     "%0Attributes %10!p! ContextTypeInfo %11!p! ContextSize %12!I64d! is not zero, but ContextName is NULL"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfObjectCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp83 12     "%0Attributes %10!p! ContextTypeInfo %11!p! Size %12!d! incorrect, expected %13!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfObjectCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->Size, ItemLong -- 12
sizeof(WDF_OBJECT_CONTEXT_TYPE_INFO), ItemLong -- 13
}
#typev  FxValidateFunctions_hpp70 11     "%0Attributes %10!p! Size incorrect, expected %11!d!, got %12!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfObjectCreate
{
Attributes, ItemPtr -- 10
sizeof(WDF_OBJECT_ATTRIBUTES), ItemLong -- 11
Attributes->Size, ItemLong -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp159 18     "%0Attributes %10!p! execution level set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfChildListCreate
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp168 19     "%0Attributes %10!p! synchronization scope set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfChildListCreate
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp201 21     "%0Attributes %10!p! does not allow execution level to be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfChildListCreate
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemEnum(_WDF_EXECUTION_LEVEL) -- 11
}
#typev  FxValidateFunctions_hpp184 20     "%0Attributes %10!p! does not allow synchronization scope too be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfChildListCreate
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemEnum(_WDF_SYNCHRONIZATION_SCOPE) -- 11
}
#typev  FxValidateFunctions_hpp137 16     "%0Attributes %10!p! does not allow a parent object to be set, set to %11!p!, status 0x%12!x!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfChildListCreate
{
Attributes, ItemPtr -- 10
Attributes->ParentObject, ItemPtr -- 11
(ULONG) STATUS_WDF_PARENT_ASSIGNMENT_NOT_ALLOWED, ItemLong -- 12
}
#typev  FxValidateFunctions_hpp124 15     "%0Attributes %10!p! ContextSizeOverride %11!I64d! < ContextTypeInfo->ContextSize %12!I64d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfChildListCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp115 14     "%0Attributes %10!p! ContextSizeOverride of %11!I64d! specified, but no type information!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfChildListCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
}
#typev  FxValidateFunctions_hpp99 13     "%0Attributes %10!p! ContextTypeInfo %11!p! ContextSize %12!I64d! is not zero, but ContextName is NULL"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfChildListCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp83 12     "%0Attributes %10!p! ContextTypeInfo %11!p! Size %12!d! incorrect, expected %13!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfChildListCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->Size, ItemLong -- 12
sizeof(WDF_OBJECT_CONTEXT_TYPE_INFO), ItemLong -- 13
}
#typev  FxValidateFunctions_hpp70 11     "%0Attributes %10!p! Size incorrect, expected %11!d!, got %12!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfChildListCreate
{
Attributes, ItemPtr -- 10
sizeof(WDF_OBJECT_ATTRIBUTES), ItemLong -- 11
Attributes->Size, ItemLong -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp159 18     "%0Attributes %10!p! execution level set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfSpinLockCreate
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp168 19     "%0Attributes %10!p! synchronization scope set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfSpinLockCreate
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp201 21     "%0Attributes %10!p! does not allow execution level to be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfSpinLockCreate
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemEnum(_WDF_EXECUTION_LEVEL) -- 11
}
#typev  FxValidateFunctions_hpp184 20     "%0Attributes %10!p! does not allow synchronization scope too be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfSpinLockCreate
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemEnum(_WDF_SYNCHRONIZATION_SCOPE) -- 11
}
#typev  FxValidateFunctions_hpp124 15     "%0Attributes %10!p! ContextSizeOverride %11!I64d! < ContextTypeInfo->ContextSize %12!I64d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfSpinLockCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp115 14     "%0Attributes %10!p! ContextSizeOverride of %11!I64d! specified, but no type information!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfSpinLockCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
}
#typev  FxValidateFunctions_hpp99 13     "%0Attributes %10!p! ContextTypeInfo %11!p! ContextSize %12!I64d! is not zero, but ContextName is NULL"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfSpinLockCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp83 12     "%0Attributes %10!p! ContextTypeInfo %11!p! Size %12!d! incorrect, expected %13!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfSpinLockCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->Size, ItemLong -- 12
sizeof(WDF_OBJECT_CONTEXT_TYPE_INFO), ItemLong -- 13
}
#typev  FxValidateFunctions_hpp70 11     "%0Attributes %10!p! Size incorrect, expected %11!d!, got %12!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfSpinLockCreate
{
Attributes, ItemPtr -- 10
sizeof(WDF_OBJECT_ATTRIBUTES), ItemLong -- 11
Attributes->Size, ItemLong -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp159 18     "%0Attributes %10!p! execution level set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfIoTargetAllocAndQueryTargetProperty
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp168 19     "%0Attributes %10!p! synchronization scope set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfIoTargetAllocAndQueryTargetProperty
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp201 21     "%0Attributes %10!p! does not allow execution level to be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfIoTargetAllocAndQueryTargetProperty
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemEnum(_WDF_EXECUTION_LEVEL) -- 11
}
#typev  FxValidateFunctions_hpp184 20     "%0Attributes %10!p! does not allow synchronization scope too be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfIoTargetAllocAndQueryTargetProperty
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemEnum(_WDF_SYNCHRONIZATION_SCOPE) -- 11
}
#typev  FxValidateFunctions_hpp124 15     "%0Attributes %10!p! ContextSizeOverride %11!I64d! < ContextTypeInfo->ContextSize %12!I64d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfIoTargetAllocAndQueryTargetProperty
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp115 14     "%0Attributes %10!p! ContextSizeOverride of %11!I64d! specified, but no type information!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfIoTargetAllocAndQueryTargetProperty
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
}
#typev  FxValidateFunctions_hpp99 13     "%0Attributes %10!p! ContextTypeInfo %11!p! ContextSize %12!I64d! is not zero, but ContextName is NULL"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfIoTargetAllocAndQueryTargetProperty
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp83 12     "%0Attributes %10!p! ContextTypeInfo %11!p! Size %12!d! incorrect, expected %13!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfIoTargetAllocAndQueryTargetProperty
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->Size, ItemLong -- 12
sizeof(WDF_OBJECT_CONTEXT_TYPE_INFO), ItemLong -- 13
}
#typev  FxValidateFunctions_hpp70 11     "%0Attributes %10!p! Size incorrect, expected %11!d!, got %12!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfIoTargetAllocAndQueryTargetProperty
{
Attributes, ItemPtr -- 10
sizeof(WDF_OBJECT_ATTRIBUTES), ItemLong -- 11
Attributes->Size, ItemLong -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp159 18     "%0Attributes %10!p! execution level set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfIoTargetCreate
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp168 19     "%0Attributes %10!p! synchronization scope set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfIoTargetCreate
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp201 21     "%0Attributes %10!p! does not allow execution level to be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfIoTargetCreate
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemEnum(_WDF_EXECUTION_LEVEL) -- 11
}
#typev  FxValidateFunctions_hpp184 20     "%0Attributes %10!p! does not allow synchronization scope too be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfIoTargetCreate
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemEnum(_WDF_SYNCHRONIZATION_SCOPE) -- 11
}
#typev  FxValidateFunctions_hpp124 15     "%0Attributes %10!p! ContextSizeOverride %11!I64d! < ContextTypeInfo->ContextSize %12!I64d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfIoTargetCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp115 14     "%0Attributes %10!p! ContextSizeOverride of %11!I64d! specified, but no type information!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfIoTargetCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
}
#typev  FxValidateFunctions_hpp99 13     "%0Attributes %10!p! ContextTypeInfo %11!p! ContextSize %12!I64d! is not zero, but ContextName is NULL"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfIoTargetCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp83 12     "%0Attributes %10!p! ContextTypeInfo %11!p! Size %12!d! incorrect, expected %13!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfIoTargetCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->Size, ItemLong -- 12
sizeof(WDF_OBJECT_CONTEXT_TYPE_INFO), ItemLong -- 13
}
#typev  FxValidateFunctions_hpp70 11     "%0Attributes %10!p! Size incorrect, expected %11!d!, got %12!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfIoTargetCreate
{
Attributes, ItemPtr -- 10
sizeof(WDF_OBJECT_ATTRIBUTES), ItemLong -- 11
Attributes->Size, ItemLong -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp261 24     "%0Options %10!p!, if WDF_REQUEST_SEND_OPTION_SEND_AND_FORGET (0x%11!x!) is set, no other Flags 0x%12!x! can be set"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfIoTargetSendInternalIoctlOthersSynchronously
{
Options, ItemPtr -- 10
WDF_REQUEST_SEND_OPTION_SEND_AND_FORGET, ItemLong -- 11
Options->Flags, ItemLong -- 12
}
#typev  FxValidateFunctions_hpp247 23     "%0Options %10!p! Flags 0x%11!x! invalid, valid mask is 0x%12!x!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfIoTargetSendInternalIoctlOthersSynchronously
{
Options, ItemPtr -- 10
Options->Flags, ItemLong -- 11
WDF_REQUEST_SEND_OPTIONS_VALID_FLAGS, ItemLong -- 12
}
#typev  FxValidateFunctions_hpp235 22     "%0Options %10!p! Size incorrect, expected %11!d!, got %12!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfIoTargetSendInternalIoctlOthersSynchronously
{
Options, ItemPtr -- 10
sizeof(WDF_REQUEST_SEND_OPTIONS), ItemLong -- 11
Options->Size, ItemLong -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp261 24     "%0Options %10!p!, if WDF_REQUEST_SEND_OPTION_SEND_AND_FORGET (0x%11!x!) is set, no other Flags 0x%12!x! can be set"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxIoTargetSendIoctl
{
Options, ItemPtr -- 10
WDF_REQUEST_SEND_OPTION_SEND_AND_FORGET, ItemLong -- 11
Options->Flags, ItemLong -- 12
}
#typev  FxValidateFunctions_hpp247 23     "%0Options %10!p! Flags 0x%11!x! invalid, valid mask is 0x%12!x!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxIoTargetSendIoctl
{
Options, ItemPtr -- 10
Options->Flags, ItemLong -- 11
WDF_REQUEST_SEND_OPTIONS_VALID_FLAGS, ItemLong -- 12
}
#typev  FxValidateFunctions_hpp235 22     "%0Options %10!p! Size incorrect, expected %11!d!, got %12!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxIoTargetSendIoctl
{
Options, ItemPtr -- 10
sizeof(WDF_REQUEST_SEND_OPTIONS), ItemLong -- 11
Options->Size, ItemLong -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp261 24     "%0Options %10!p!, if WDF_REQUEST_SEND_OPTION_SEND_AND_FORGET (0x%11!x!) is set, no other Flags 0x%12!x! can be set"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxIoTargetSendIo
{
Options, ItemPtr -- 10
WDF_REQUEST_SEND_OPTION_SEND_AND_FORGET, ItemLong -- 11
Options->Flags, ItemLong -- 12
}
#typev  FxValidateFunctions_hpp247 23     "%0Options %10!p! Flags 0x%11!x! invalid, valid mask is 0x%12!x!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxIoTargetSendIo
{
Options, ItemPtr -- 10
Options->Flags, ItemLong -- 11
WDF_REQUEST_SEND_OPTIONS_VALID_FLAGS, ItemLong -- 12
}
#typev  FxValidateFunctions_hpp235 22     "%0Options %10!p! Size incorrect, expected %11!d!, got %12!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxIoTargetSendIo
{
Options, ItemPtr -- 10
sizeof(WDF_REQUEST_SEND_OPTIONS), ItemLong -- 11
Options->Size, ItemLong -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp159 18     "%0Attributes %10!p! execution level set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfMemoryCreatePreallocated
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp168 19     "%0Attributes %10!p! synchronization scope set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfMemoryCreatePreallocated
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp201 21     "%0Attributes %10!p! does not allow execution level to be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfMemoryCreatePreallocated
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemEnum(_WDF_EXECUTION_LEVEL) -- 11
}
#typev  FxValidateFunctions_hpp184 20     "%0Attributes %10!p! does not allow synchronization scope too be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfMemoryCreatePreallocated
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemEnum(_WDF_SYNCHRONIZATION_SCOPE) -- 11
}
#typev  FxValidateFunctions_hpp124 15     "%0Attributes %10!p! ContextSizeOverride %11!I64d! < ContextTypeInfo->ContextSize %12!I64d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfMemoryCreatePreallocated
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp115 14     "%0Attributes %10!p! ContextSizeOverride of %11!I64d! specified, but no type information!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfMemoryCreatePreallocated
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
}
#typev  FxValidateFunctions_hpp99 13     "%0Attributes %10!p! ContextTypeInfo %11!p! ContextSize %12!I64d! is not zero, but ContextName is NULL"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfMemoryCreatePreallocated
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp83 12     "%0Attributes %10!p! ContextTypeInfo %11!p! Size %12!d! incorrect, expected %13!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfMemoryCreatePreallocated
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->Size, ItemLong -- 12
sizeof(WDF_OBJECT_CONTEXT_TYPE_INFO), ItemLong -- 13
}
#typev  FxValidateFunctions_hpp70 11     "%0Attributes %10!p! Size incorrect, expected %11!d!, got %12!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfMemoryCreatePreallocated
{
Attributes, ItemPtr -- 10
sizeof(WDF_OBJECT_ATTRIBUTES), ItemLong -- 11
Attributes->Size, ItemLong -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp159 18     "%0Attributes %10!p! execution level set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceMiniportCreate
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp168 19     "%0Attributes %10!p! synchronization scope set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceMiniportCreate
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp201 21     "%0Attributes %10!p! does not allow execution level to be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceMiniportCreate
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemEnum(_WDF_EXECUTION_LEVEL) -- 11
}
#typev  FxValidateFunctions_hpp184 20     "%0Attributes %10!p! does not allow synchronization scope too be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceMiniportCreate
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemEnum(_WDF_SYNCHRONIZATION_SCOPE) -- 11
}
#typev  FxValidateFunctions_hpp124 15     "%0Attributes %10!p! ContextSizeOverride %11!I64d! < ContextTypeInfo->ContextSize %12!I64d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceMiniportCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp115 14     "%0Attributes %10!p! ContextSizeOverride of %11!I64d! specified, but no type information!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceMiniportCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
}
#typev  FxValidateFunctions_hpp99 13     "%0Attributes %10!p! ContextTypeInfo %11!p! ContextSize %12!I64d! is not zero, but ContextName is NULL"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceMiniportCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp83 12     "%0Attributes %10!p! ContextTypeInfo %11!p! Size %12!d! incorrect, expected %13!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceMiniportCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->Size, ItemLong -- 12
sizeof(WDF_OBJECT_CONTEXT_TYPE_INFO), ItemLong -- 13
}
#typev  FxValidateFunctions_hpp70 11     "%0Attributes %10!p! Size incorrect, expected %11!d!, got %12!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceMiniportCreate
{
Attributes, ItemPtr -- 10
sizeof(WDF_OBJECT_ATTRIBUTES), ItemLong -- 11
Attributes->Size, ItemLong -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp159 18     "%0Attributes %10!p! execution level set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDriverOpenParametersRegistryKey
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp168 19     "%0Attributes %10!p! synchronization scope set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDriverOpenParametersRegistryKey
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp201 21     "%0Attributes %10!p! does not allow execution level to be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDriverOpenParametersRegistryKey
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemEnum(_WDF_EXECUTION_LEVEL) -- 11
}
#typev  FxValidateFunctions_hpp184 20     "%0Attributes %10!p! does not allow synchronization scope too be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDriverOpenParametersRegistryKey
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemEnum(_WDF_SYNCHRONIZATION_SCOPE) -- 11
}
#typev  FxValidateFunctions_hpp124 15     "%0Attributes %10!p! ContextSizeOverride %11!I64d! < ContextTypeInfo->ContextSize %12!I64d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDriverOpenParametersRegistryKey
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp115 14     "%0Attributes %10!p! ContextSizeOverride of %11!I64d! specified, but no type information!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDriverOpenParametersRegistryKey
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
}
#typev  FxValidateFunctions_hpp99 13     "%0Attributes %10!p! ContextTypeInfo %11!p! ContextSize %12!I64d! is not zero, but ContextName is NULL"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDriverOpenParametersRegistryKey
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp83 12     "%0Attributes %10!p! ContextTypeInfo %11!p! Size %12!d! incorrect, expected %13!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDriverOpenParametersRegistryKey
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->Size, ItemLong -- 12
sizeof(WDF_OBJECT_CONTEXT_TYPE_INFO), ItemLong -- 13
}
#typev  FxValidateFunctions_hpp70 11     "%0Attributes %10!p! Size incorrect, expected %11!d!, got %12!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDriverOpenParametersRegistryKey
{
Attributes, ItemPtr -- 10
sizeof(WDF_OBJECT_ATTRIBUTES), ItemLong -- 11
Attributes->Size, ItemLong -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp159 18     "%0Attributes %10!p! execution level set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDriverCreate
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp168 19     "%0Attributes %10!p! synchronization scope set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDriverCreate
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp137 16     "%0Attributes %10!p! does not allow a parent object to be set, set to %11!p!, status 0x%12!x!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDriverCreate
{
Attributes, ItemPtr -- 10
Attributes->ParentObject, ItemPtr -- 11
(ULONG) STATUS_WDF_PARENT_ASSIGNMENT_NOT_ALLOWED, ItemLong -- 12
}
#typev  FxValidateFunctions_hpp124 15     "%0Attributes %10!p! ContextSizeOverride %11!I64d! < ContextTypeInfo->ContextSize %12!I64d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDriverCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp115 14     "%0Attributes %10!p! ContextSizeOverride of %11!I64d! specified, but no type information!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDriverCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
}
#typev  FxValidateFunctions_hpp99 13     "%0Attributes %10!p! ContextTypeInfo %11!p! ContextSize %12!I64d! is not zero, but ContextName is NULL"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDriverCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp83 12     "%0Attributes %10!p! ContextTypeInfo %11!p! Size %12!d! incorrect, expected %13!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDriverCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->Size, ItemLong -- 12
sizeof(WDF_OBJECT_CONTEXT_TYPE_INFO), ItemLong -- 13
}
#typev  FxValidateFunctions_hpp70 11     "%0Attributes %10!p! Size incorrect, expected %11!d!, got %12!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDriverCreate
{
Attributes, ItemPtr -- 10
sizeof(WDF_OBJECT_ATTRIBUTES), ItemLong -- 11
Attributes->Size, ItemLong -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp159 18     "%0Attributes %10!p! execution level set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfCollectionCreate
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp168 19     "%0Attributes %10!p! synchronization scope set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfCollectionCreate
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp201 21     "%0Attributes %10!p! does not allow execution level to be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfCollectionCreate
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemEnum(_WDF_EXECUTION_LEVEL) -- 11
}
#typev  FxValidateFunctions_hpp184 20     "%0Attributes %10!p! does not allow synchronization scope too be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfCollectionCreate
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemEnum(_WDF_SYNCHRONIZATION_SCOPE) -- 11
}
#typev  FxValidateFunctions_hpp124 15     "%0Attributes %10!p! ContextSizeOverride %11!I64d! < ContextTypeInfo->ContextSize %12!I64d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfCollectionCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp115 14     "%0Attributes %10!p! ContextSizeOverride of %11!I64d! specified, but no type information!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfCollectionCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
}
#typev  FxValidateFunctions_hpp99 13     "%0Attributes %10!p! ContextTypeInfo %11!p! ContextSize %12!I64d! is not zero, but ContextName is NULL"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfCollectionCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp83 12     "%0Attributes %10!p! ContextTypeInfo %11!p! Size %12!d! incorrect, expected %13!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfCollectionCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->Size, ItemLong -- 12
sizeof(WDF_OBJECT_CONTEXT_TYPE_INFO), ItemLong -- 13
}
#typev  FxValidateFunctions_hpp70 11     "%0Attributes %10!p! Size incorrect, expected %11!d!, got %12!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfCollectionCreate
{
Attributes, ItemPtr -- 10
sizeof(WDF_OBJECT_ATTRIBUTES), ItemLong -- 11
Attributes->Size, ItemLong -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp159 18     "%0Attributes %10!p! execution level set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfIoQueueCreate
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp168 19     "%0Attributes %10!p! synchronization scope set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfIoQueueCreate
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp201 21     "%0Attributes %10!p! does not allow execution level to be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfIoQueueCreate
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemEnum(_WDF_EXECUTION_LEVEL) -- 11
}
#typev  FxValidateFunctions_hpp184 20     "%0Attributes %10!p! does not allow synchronization scope too be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfIoQueueCreate
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemEnum(_WDF_SYNCHRONIZATION_SCOPE) -- 11
}
#typev  FxValidateFunctions_hpp124 15     "%0Attributes %10!p! ContextSizeOverride %11!I64d! < ContextTypeInfo->ContextSize %12!I64d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfIoQueueCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp115 14     "%0Attributes %10!p! ContextSizeOverride of %11!I64d! specified, but no type information!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfIoQueueCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
}
#typev  FxValidateFunctions_hpp99 13     "%0Attributes %10!p! ContextTypeInfo %11!p! ContextSize %12!I64d! is not zero, but ContextName is NULL"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfIoQueueCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp83 12     "%0Attributes %10!p! ContextTypeInfo %11!p! Size %12!d! incorrect, expected %13!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfIoQueueCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->Size, ItemLong -- 12
sizeof(WDF_OBJECT_CONTEXT_TYPE_INFO), ItemLong -- 13
}
#typev  FxValidateFunctions_hpp70 11     "%0Attributes %10!p! Size incorrect, expected %11!d!, got %12!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfIoQueueCreate
{
Attributes, ItemPtr -- 10
sizeof(WDF_OBJECT_ATTRIBUTES), ItemLong -- 11
Attributes->Size, ItemLong -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp159 18     "%0Attributes %10!p! execution level set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxDevice::_OpenKey
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp168 19     "%0Attributes %10!p! synchronization scope set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxDevice::_OpenKey
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp201 21     "%0Attributes %10!p! does not allow execution level to be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxDevice::_OpenKey
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemEnum(_WDF_EXECUTION_LEVEL) -- 11
}
#typev  FxValidateFunctions_hpp184 20     "%0Attributes %10!p! does not allow synchronization scope too be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxDevice::_OpenKey
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemEnum(_WDF_SYNCHRONIZATION_SCOPE) -- 11
}
#typev  FxValidateFunctions_hpp124 15     "%0Attributes %10!p! ContextSizeOverride %11!I64d! < ContextTypeInfo->ContextSize %12!I64d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxDevice::_OpenKey
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp115 14     "%0Attributes %10!p! ContextSizeOverride of %11!I64d! specified, but no type information!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxDevice::_OpenKey
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
}
#typev  FxValidateFunctions_hpp99 13     "%0Attributes %10!p! ContextTypeInfo %11!p! ContextSize %12!I64d! is not zero, but ContextName is NULL"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxDevice::_OpenKey
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp83 12     "%0Attributes %10!p! ContextTypeInfo %11!p! Size %12!d! incorrect, expected %13!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxDevice::_OpenKey
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->Size, ItemLong -- 12
sizeof(WDF_OBJECT_CONTEXT_TYPE_INFO), ItemLong -- 13
}
#typev  FxValidateFunctions_hpp70 11     "%0Attributes %10!p! Size incorrect, expected %11!d!, got %12!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxDevice::_OpenKey
{
Attributes, ItemPtr -- 10
sizeof(WDF_OBJECT_ATTRIBUTES), ItemLong -- 11
Attributes->Size, ItemLong -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp159 18     "%0Attributes %10!p! execution level set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfLookasideListCreate
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp168 19     "%0Attributes %10!p! synchronization scope set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfLookasideListCreate
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp201 21     "%0Attributes %10!p! does not allow execution level to be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfLookasideListCreate
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemEnum(_WDF_EXECUTION_LEVEL) -- 11
}
#typev  FxValidateFunctions_hpp184 20     "%0Attributes %10!p! does not allow synchronization scope too be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfLookasideListCreate
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemEnum(_WDF_SYNCHRONIZATION_SCOPE) -- 11
}
#typev  FxValidateFunctions_hpp124 15     "%0Attributes %10!p! ContextSizeOverride %11!I64d! < ContextTypeInfo->ContextSize %12!I64d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfLookasideListCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp115 14     "%0Attributes %10!p! ContextSizeOverride of %11!I64d! specified, but no type information!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfLookasideListCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
}
#typev  FxValidateFunctions_hpp99 13     "%0Attributes %10!p! ContextTypeInfo %11!p! ContextSize %12!I64d! is not zero, but ContextName is NULL"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfLookasideListCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp83 12     "%0Attributes %10!p! ContextTypeInfo %11!p! Size %12!d! incorrect, expected %13!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfLookasideListCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->Size, ItemLong -- 12
sizeof(WDF_OBJECT_CONTEXT_TYPE_INFO), ItemLong -- 13
}
#typev  FxValidateFunctions_hpp70 11     "%0Attributes %10!p! Size incorrect, expected %11!d!, got %12!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfLookasideListCreate
{
Attributes, ItemPtr -- 10
sizeof(WDF_OBJECT_ATTRIBUTES), ItemLong -- 11
Attributes->Size, ItemLong -- 12
}
#typev  FxValidateFunctions_hpp159 18     "%0Attributes %10!p! execution level set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfLookasideListCreate
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp168 19     "%0Attributes %10!p! synchronization scope set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfLookasideListCreate
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp201 21     "%0Attributes %10!p! does not allow execution level to be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfLookasideListCreate
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemEnum(_WDF_EXECUTION_LEVEL) -- 11
}
#typev  FxValidateFunctions_hpp184 20     "%0Attributes %10!p! does not allow synchronization scope too be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfLookasideListCreate
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemEnum(_WDF_SYNCHRONIZATION_SCOPE) -- 11
}
#typev  FxValidateFunctions_hpp124 15     "%0Attributes %10!p! ContextSizeOverride %11!I64d! < ContextTypeInfo->ContextSize %12!I64d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfLookasideListCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp115 14     "%0Attributes %10!p! ContextSizeOverride of %11!I64d! specified, but no type information!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfLookasideListCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
}
#typev  FxValidateFunctions_hpp99 13     "%0Attributes %10!p! ContextTypeInfo %11!p! ContextSize %12!I64d! is not zero, but ContextName is NULL"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfLookasideListCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp83 12     "%0Attributes %10!p! ContextTypeInfo %11!p! Size %12!d! incorrect, expected %13!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfLookasideListCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->Size, ItemLong -- 12
sizeof(WDF_OBJECT_CONTEXT_TYPE_INFO), ItemLong -- 13
}
#typev  FxValidateFunctions_hpp70 11     "%0Attributes %10!p! Size incorrect, expected %11!d!, got %12!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfLookasideListCreate
{
Attributes, ItemPtr -- 10
sizeof(WDF_OBJECT_ATTRIBUTES), ItemLong -- 11
Attributes->Size, ItemLong -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp159 18     "%0Attributes %10!p! execution level set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDpcCreate
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp168 19     "%0Attributes %10!p! synchronization scope set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDpcCreate
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp201 21     "%0Attributes %10!p! does not allow execution level to be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDpcCreate
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemEnum(_WDF_EXECUTION_LEVEL) -- 11
}
#typev  FxValidateFunctions_hpp184 20     "%0Attributes %10!p! does not allow synchronization scope too be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDpcCreate
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemEnum(_WDF_SYNCHRONIZATION_SCOPE) -- 11
}
#typev  FxValidateFunctions_hpp148 17     "%0ParentObject specified in WDF_OBJECT_ATTRIBUTES %10!p!, status 0x%11!x!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDpcCreate
{
Attributes, ItemPtr -- 10
(ULONG) STATUS_WDF_PARENT_NOT_SPECIFIED, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp124 15     "%0Attributes %10!p! ContextSizeOverride %11!I64d! < ContextTypeInfo->ContextSize %12!I64d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDpcCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp115 14     "%0Attributes %10!p! ContextSizeOverride of %11!I64d! specified, but no type information!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDpcCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
}
#typev  FxValidateFunctions_hpp99 13     "%0Attributes %10!p! ContextTypeInfo %11!p! ContextSize %12!I64d! is not zero, but ContextName is NULL"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDpcCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp83 12     "%0Attributes %10!p! ContextTypeInfo %11!p! Size %12!d! incorrect, expected %13!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDpcCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->Size, ItemLong -- 12
sizeof(WDF_OBJECT_CONTEXT_TYPE_INFO), ItemLong -- 13
}
#typev  FxValidateFunctions_hpp70 11     "%0Attributes %10!p! Size incorrect, expected %11!d!, got %12!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDpcCreate
{
Attributes, ItemPtr -- 10
sizeof(WDF_OBJECT_ATTRIBUTES), ItemLong -- 11
Attributes->Size, ItemLong -- 12
}
#typev  FxValidateFunctions_hpp54 10     "%0WDF_OBJECT_ATTRIBUTES required, status 0x%10!x!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDpcCreate
{
(ULONG) STATUS_WDF_PARENT_NOT_SPECIFIED, ItemLong -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp159 18     "%0Attributes %10!p! execution level set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfFdoInitSetDefaultChildListConfig
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp168 19     "%0Attributes %10!p! synchronization scope set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfFdoInitSetDefaultChildListConfig
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp201 21     "%0Attributes %10!p! does not allow execution level to be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfFdoInitSetDefaultChildListConfig
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemEnum(_WDF_EXECUTION_LEVEL) -- 11
}
#typev  FxValidateFunctions_hpp184 20     "%0Attributes %10!p! does not allow synchronization scope too be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfFdoInitSetDefaultChildListConfig
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemEnum(_WDF_SYNCHRONIZATION_SCOPE) -- 11
}
#typev  FxValidateFunctions_hpp137 16     "%0Attributes %10!p! does not allow a parent object to be set, set to %11!p!, status 0x%12!x!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfFdoInitSetDefaultChildListConfig
{
Attributes, ItemPtr -- 10
Attributes->ParentObject, ItemPtr -- 11
(ULONG) STATUS_WDF_PARENT_ASSIGNMENT_NOT_ALLOWED, ItemLong -- 12
}
#typev  FxValidateFunctions_hpp124 15     "%0Attributes %10!p! ContextSizeOverride %11!I64d! < ContextTypeInfo->ContextSize %12!I64d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfFdoInitSetDefaultChildListConfig
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp115 14     "%0Attributes %10!p! ContextSizeOverride of %11!I64d! specified, but no type information!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfFdoInitSetDefaultChildListConfig
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
}
#typev  FxValidateFunctions_hpp99 13     "%0Attributes %10!p! ContextTypeInfo %11!p! ContextSize %12!I64d! is not zero, but ContextName is NULL"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfFdoInitSetDefaultChildListConfig
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp83 12     "%0Attributes %10!p! ContextTypeInfo %11!p! Size %12!d! incorrect, expected %13!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfFdoInitSetDefaultChildListConfig
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->Size, ItemLong -- 12
sizeof(WDF_OBJECT_CONTEXT_TYPE_INFO), ItemLong -- 13
}
#typev  FxValidateFunctions_hpp70 11     "%0Attributes %10!p! Size incorrect, expected %11!d!, got %12!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfFdoInitSetDefaultChildListConfig
{
Attributes, ItemPtr -- 10
sizeof(WDF_OBJECT_ATTRIBUTES), ItemLong -- 11
Attributes->Size, ItemLong -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp159 18     "%0Attributes %10!p! execution level set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceInitSetRequestAttributes
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp168 19     "%0Attributes %10!p! synchronization scope set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceInitSetRequestAttributes
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp201 21     "%0Attributes %10!p! does not allow execution level to be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceInitSetRequestAttributes
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemEnum(_WDF_EXECUTION_LEVEL) -- 11
}
#typev  FxValidateFunctions_hpp184 20     "%0Attributes %10!p! does not allow synchronization scope too be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceInitSetRequestAttributes
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemEnum(_WDF_SYNCHRONIZATION_SCOPE) -- 11
}
#typev  FxValidateFunctions_hpp137 16     "%0Attributes %10!p! does not allow a parent object to be set, set to %11!p!, status 0x%12!x!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceInitSetRequestAttributes
{
Attributes, ItemPtr -- 10
Attributes->ParentObject, ItemPtr -- 11
(ULONG) STATUS_WDF_PARENT_ASSIGNMENT_NOT_ALLOWED, ItemLong -- 12
}
#typev  FxValidateFunctions_hpp124 15     "%0Attributes %10!p! ContextSizeOverride %11!I64d! < ContextTypeInfo->ContextSize %12!I64d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceInitSetRequestAttributes
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp115 14     "%0Attributes %10!p! ContextSizeOverride of %11!I64d! specified, but no type information!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceInitSetRequestAttributes
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
}
#typev  FxValidateFunctions_hpp99 13     "%0Attributes %10!p! ContextTypeInfo %11!p! ContextSize %12!I64d! is not zero, but ContextName is NULL"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceInitSetRequestAttributes
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp83 12     "%0Attributes %10!p! ContextTypeInfo %11!p! Size %12!d! incorrect, expected %13!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceInitSetRequestAttributes
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->Size, ItemLong -- 12
sizeof(WDF_OBJECT_CONTEXT_TYPE_INFO), ItemLong -- 13
}
#typev  FxValidateFunctions_hpp70 11     "%0Attributes %10!p! Size incorrect, expected %11!d!, got %12!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceInitSetRequestAttributes
{
Attributes, ItemPtr -- 10
sizeof(WDF_OBJECT_ATTRIBUTES), ItemLong -- 11
Attributes->Size, ItemLong -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp159 18     "%0Attributes %10!p! execution level set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceInitSetFileObjectConfig
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp168 19     "%0Attributes %10!p! synchronization scope set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceInitSetFileObjectConfig
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp137 16     "%0Attributes %10!p! does not allow a parent object to be set, set to %11!p!, status 0x%12!x!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceInitSetFileObjectConfig
{
Attributes, ItemPtr -- 10
Attributes->ParentObject, ItemPtr -- 11
(ULONG) STATUS_WDF_PARENT_ASSIGNMENT_NOT_ALLOWED, ItemLong -- 12
}
#typev  FxValidateFunctions_hpp124 15     "%0Attributes %10!p! ContextSizeOverride %11!I64d! < ContextTypeInfo->ContextSize %12!I64d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceInitSetFileObjectConfig
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp115 14     "%0Attributes %10!p! ContextSizeOverride of %11!I64d! specified, but no type information!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceInitSetFileObjectConfig
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
}
#typev  FxValidateFunctions_hpp99 13     "%0Attributes %10!p! ContextTypeInfo %11!p! ContextSize %12!I64d! is not zero, but ContextName is NULL"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceInitSetFileObjectConfig
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp83 12     "%0Attributes %10!p! ContextTypeInfo %11!p! Size %12!d! incorrect, expected %13!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceInitSetFileObjectConfig
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->Size, ItemLong -- 12
sizeof(WDF_OBJECT_CONTEXT_TYPE_INFO), ItemLong -- 13
}
#typev  FxValidateFunctions_hpp70 11     "%0Attributes %10!p! Size incorrect, expected %11!d!, got %12!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceInitSetFileObjectConfig
{
Attributes, ItemPtr -- 10
sizeof(WDF_OBJECT_ATTRIBUTES), ItemLong -- 11
Attributes->Size, ItemLong -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp159 18     "%0Attributes %10!p! execution level set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfFdoInitOpenRegistryKey
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp168 19     "%0Attributes %10!p! synchronization scope set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfFdoInitOpenRegistryKey
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp201 21     "%0Attributes %10!p! does not allow execution level to be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfFdoInitOpenRegistryKey
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemEnum(_WDF_EXECUTION_LEVEL) -- 11
}
#typev  FxValidateFunctions_hpp184 20     "%0Attributes %10!p! does not allow synchronization scope too be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfFdoInitOpenRegistryKey
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemEnum(_WDF_SYNCHRONIZATION_SCOPE) -- 11
}
#typev  FxValidateFunctions_hpp124 15     "%0Attributes %10!p! ContextSizeOverride %11!I64d! < ContextTypeInfo->ContextSize %12!I64d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfFdoInitOpenRegistryKey
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp115 14     "%0Attributes %10!p! ContextSizeOverride of %11!I64d! specified, but no type information!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfFdoInitOpenRegistryKey
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
}
#typev  FxValidateFunctions_hpp99 13     "%0Attributes %10!p! ContextTypeInfo %11!p! ContextSize %12!I64d! is not zero, but ContextName is NULL"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfFdoInitOpenRegistryKey
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp83 12     "%0Attributes %10!p! ContextTypeInfo %11!p! Size %12!d! incorrect, expected %13!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfFdoInitOpenRegistryKey
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->Size, ItemLong -- 12
sizeof(WDF_OBJECT_CONTEXT_TYPE_INFO), ItemLong -- 13
}
#typev  FxValidateFunctions_hpp70 11     "%0Attributes %10!p! Size incorrect, expected %11!d!, got %12!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfFdoInitOpenRegistryKey
{
Attributes, ItemPtr -- 10
sizeof(WDF_OBJECT_ATTRIBUTES), ItemLong -- 11
Attributes->Size, ItemLong -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp159 18     "%0Attributes %10!p! execution level set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfFdoInitAllocAndQueryProperty
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp168 19     "%0Attributes %10!p! synchronization scope set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfFdoInitAllocAndQueryProperty
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp201 21     "%0Attributes %10!p! does not allow execution level to be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfFdoInitAllocAndQueryProperty
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemEnum(_WDF_EXECUTION_LEVEL) -- 11
}
#typev  FxValidateFunctions_hpp184 20     "%0Attributes %10!p! does not allow synchronization scope too be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfFdoInitAllocAndQueryProperty
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemEnum(_WDF_SYNCHRONIZATION_SCOPE) -- 11
}
#typev  FxValidateFunctions_hpp124 15     "%0Attributes %10!p! ContextSizeOverride %11!I64d! < ContextTypeInfo->ContextSize %12!I64d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfFdoInitAllocAndQueryProperty
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp115 14     "%0Attributes %10!p! ContextSizeOverride of %11!I64d! specified, but no type information!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfFdoInitAllocAndQueryProperty
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
}
#typev  FxValidateFunctions_hpp99 13     "%0Attributes %10!p! ContextTypeInfo %11!p! ContextSize %12!I64d! is not zero, but ContextName is NULL"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfFdoInitAllocAndQueryProperty
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp83 12     "%0Attributes %10!p! ContextTypeInfo %11!p! Size %12!d! incorrect, expected %13!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfFdoInitAllocAndQueryProperty
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->Size, ItemLong -- 12
sizeof(WDF_OBJECT_CONTEXT_TYPE_INFO), ItemLong -- 13
}
#typev  FxValidateFunctions_hpp70 11     "%0Attributes %10!p! Size incorrect, expected %11!d!, got %12!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfFdoInitAllocAndQueryProperty
{
Attributes, ItemPtr -- 10
sizeof(WDF_OBJECT_ATTRIBUTES), ItemLong -- 11
Attributes->Size, ItemLong -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp261 24     "%0Options %10!p!, if WDF_REQUEST_SEND_OPTION_SEND_AND_FORGET (0x%11!x!) is set, no other Flags 0x%12!x! can be set"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRequestSend
{
Options, ItemPtr -- 10
WDF_REQUEST_SEND_OPTION_SEND_AND_FORGET, ItemLong -- 11
Options->Flags, ItemLong -- 12
}
#typev  FxValidateFunctions_hpp247 23     "%0Options %10!p! Flags 0x%11!x! invalid, valid mask is 0x%12!x!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRequestSend
{
Options, ItemPtr -- 10
Options->Flags, ItemLong -- 11
WDF_REQUEST_SEND_OPTIONS_VALID_FLAGS, ItemLong -- 12
}
#typev  FxValidateFunctions_hpp235 22     "%0Options %10!p! Size incorrect, expected %11!d!, got %12!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfRequestSend
{
Options, ItemPtr -- 10
sizeof(WDF_REQUEST_SEND_OPTIONS), ItemLong -- 11
Options->Size, ItemLong -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp261 24     "%0Options %10!p!, if WDF_REQUEST_SEND_OPTION_SEND_AND_FORGET (0x%11!x!) is set, no other Flags 0x%12!x! can be set"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbTargetDeviceSendControlTransferSynchronously
{
Options, ItemPtr -- 10
WDF_REQUEST_SEND_OPTION_SEND_AND_FORGET, ItemLong -- 11
Options->Flags, ItemLong -- 12
}
#typev  FxValidateFunctions_hpp247 23     "%0Options %10!p! Flags 0x%11!x! invalid, valid mask is 0x%12!x!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbTargetDeviceSendControlTransferSynchronously
{
Options, ItemPtr -- 10
Options->Flags, ItemLong -- 11
WDF_REQUEST_SEND_OPTIONS_VALID_FLAGS, ItemLong -- 12
}
#typev  FxValidateFunctions_hpp235 22     "%0Options %10!p! Size incorrect, expected %11!d!, got %12!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbTargetDeviceSendControlTransferSynchronously
{
Options, ItemPtr -- 10
sizeof(WDF_REQUEST_SEND_OPTIONS), ItemLong -- 11
Options->Size, ItemLong -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp261 24     "%0Options %10!p!, if WDF_REQUEST_SEND_OPTION_SEND_AND_FORGET (0x%11!x!) is set, no other Flags 0x%12!x! can be set"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbTargetDeviceSendUrbSynchronously
{
Options, ItemPtr -- 10
WDF_REQUEST_SEND_OPTION_SEND_AND_FORGET, ItemLong -- 11
Options->Flags, ItemLong -- 12
}
#typev  FxValidateFunctions_hpp247 23     "%0Options %10!p! Flags 0x%11!x! invalid, valid mask is 0x%12!x!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbTargetDeviceSendUrbSynchronously
{
Options, ItemPtr -- 10
Options->Flags, ItemLong -- 11
WDF_REQUEST_SEND_OPTIONS_VALID_FLAGS, ItemLong -- 12
}
#typev  FxValidateFunctions_hpp235 22     "%0Options %10!p! Size incorrect, expected %11!d!, got %12!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbTargetDeviceSendUrbSynchronously
{
Options, ItemPtr -- 10
sizeof(WDF_REQUEST_SEND_OPTIONS), ItemLong -- 11
Options->Size, ItemLong -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp159 18     "%0Attributes %10!p! execution level set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbTargetDeviceSelectConfig
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp168 19     "%0Attributes %10!p! synchronization scope set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbTargetDeviceSelectConfig
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp201 21     "%0Attributes %10!p! does not allow execution level to be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbTargetDeviceSelectConfig
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemEnum(_WDF_EXECUTION_LEVEL) -- 11
}
#typev  FxValidateFunctions_hpp184 20     "%0Attributes %10!p! does not allow synchronization scope too be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbTargetDeviceSelectConfig
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemEnum(_WDF_SYNCHRONIZATION_SCOPE) -- 11
}
#typev  FxValidateFunctions_hpp137 16     "%0Attributes %10!p! does not allow a parent object to be set, set to %11!p!, status 0x%12!x!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbTargetDeviceSelectConfig
{
Attributes, ItemPtr -- 10
Attributes->ParentObject, ItemPtr -- 11
(ULONG) STATUS_WDF_PARENT_ASSIGNMENT_NOT_ALLOWED, ItemLong -- 12
}
#typev  FxValidateFunctions_hpp124 15     "%0Attributes %10!p! ContextSizeOverride %11!I64d! < ContextTypeInfo->ContextSize %12!I64d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbTargetDeviceSelectConfig
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp115 14     "%0Attributes %10!p! ContextSizeOverride of %11!I64d! specified, but no type information!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbTargetDeviceSelectConfig
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
}
#typev  FxValidateFunctions_hpp99 13     "%0Attributes %10!p! ContextTypeInfo %11!p! ContextSize %12!I64d! is not zero, but ContextName is NULL"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbTargetDeviceSelectConfig
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp83 12     "%0Attributes %10!p! ContextTypeInfo %11!p! Size %12!d! incorrect, expected %13!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbTargetDeviceSelectConfig
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->Size, ItemLong -- 12
sizeof(WDF_OBJECT_CONTEXT_TYPE_INFO), ItemLong -- 13
}
#typev  FxValidateFunctions_hpp70 11     "%0Attributes %10!p! Size incorrect, expected %11!d!, got %12!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbTargetDeviceSelectConfig
{
Attributes, ItemPtr -- 10
sizeof(WDF_OBJECT_ATTRIBUTES), ItemLong -- 11
Attributes->Size, ItemLong -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp159 18     "%0Attributes %10!p! execution level set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbTargetDeviceAllocAndQueryString
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp168 19     "%0Attributes %10!p! synchronization scope set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbTargetDeviceAllocAndQueryString
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp201 21     "%0Attributes %10!p! does not allow execution level to be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbTargetDeviceAllocAndQueryString
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemEnum(_WDF_EXECUTION_LEVEL) -- 11
}
#typev  FxValidateFunctions_hpp184 20     "%0Attributes %10!p! does not allow synchronization scope too be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbTargetDeviceAllocAndQueryString
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemEnum(_WDF_SYNCHRONIZATION_SCOPE) -- 11
}
#typev  FxValidateFunctions_hpp124 15     "%0Attributes %10!p! ContextSizeOverride %11!I64d! < ContextTypeInfo->ContextSize %12!I64d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbTargetDeviceAllocAndQueryString
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp115 14     "%0Attributes %10!p! ContextSizeOverride of %11!I64d! specified, but no type information!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbTargetDeviceAllocAndQueryString
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
}
#typev  FxValidateFunctions_hpp99 13     "%0Attributes %10!p! ContextTypeInfo %11!p! ContextSize %12!I64d! is not zero, but ContextName is NULL"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbTargetDeviceAllocAndQueryString
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp83 12     "%0Attributes %10!p! ContextTypeInfo %11!p! Size %12!d! incorrect, expected %13!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbTargetDeviceAllocAndQueryString
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->Size, ItemLong -- 12
sizeof(WDF_OBJECT_CONTEXT_TYPE_INFO), ItemLong -- 13
}
#typev  FxValidateFunctions_hpp70 11     "%0Attributes %10!p! Size incorrect, expected %11!d!, got %12!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbTargetDeviceAllocAndQueryString
{
Attributes, ItemPtr -- 10
sizeof(WDF_OBJECT_ATTRIBUTES), ItemLong -- 11
Attributes->Size, ItemLong -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp261 24     "%0Options %10!p!, if WDF_REQUEST_SEND_OPTION_SEND_AND_FORGET (0x%11!x!) is set, no other Flags 0x%12!x! can be set"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbTargetDeviceQueryString
{
Options, ItemPtr -- 10
WDF_REQUEST_SEND_OPTION_SEND_AND_FORGET, ItemLong -- 11
Options->Flags, ItemLong -- 12
}
#typev  FxValidateFunctions_hpp247 23     "%0Options %10!p! Flags 0x%11!x! invalid, valid mask is 0x%12!x!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbTargetDeviceQueryString
{
Options, ItemPtr -- 10
Options->Flags, ItemLong -- 11
WDF_REQUEST_SEND_OPTIONS_VALID_FLAGS, ItemLong -- 12
}
#typev  FxValidateFunctions_hpp235 22     "%0Options %10!p! Size incorrect, expected %11!d!, got %12!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbTargetDeviceQueryString
{
Options, ItemPtr -- 10
sizeof(WDF_REQUEST_SEND_OPTIONS), ItemLong -- 11
Options->Size, ItemLong -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp159 18     "%0Attributes %10!p! execution level set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbTargetDeviceCreate
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp168 19     "%0Attributes %10!p! synchronization scope set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbTargetDeviceCreate
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp201 21     "%0Attributes %10!p! does not allow execution level to be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbTargetDeviceCreate
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemEnum(_WDF_EXECUTION_LEVEL) -- 11
}
#typev  FxValidateFunctions_hpp184 20     "%0Attributes %10!p! does not allow synchronization scope too be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbTargetDeviceCreate
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemEnum(_WDF_SYNCHRONIZATION_SCOPE) -- 11
}
#typev  FxValidateFunctions_hpp137 16     "%0Attributes %10!p! does not allow a parent object to be set, set to %11!p!, status 0x%12!x!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbTargetDeviceCreate
{
Attributes, ItemPtr -- 10
Attributes->ParentObject, ItemPtr -- 11
(ULONG) STATUS_WDF_PARENT_ASSIGNMENT_NOT_ALLOWED, ItemLong -- 12
}
#typev  FxValidateFunctions_hpp124 15     "%0Attributes %10!p! ContextSizeOverride %11!I64d! < ContextTypeInfo->ContextSize %12!I64d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbTargetDeviceCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp115 14     "%0Attributes %10!p! ContextSizeOverride of %11!I64d! specified, but no type information!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbTargetDeviceCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
}
#typev  FxValidateFunctions_hpp99 13     "%0Attributes %10!p! ContextTypeInfo %11!p! ContextSize %12!I64d! is not zero, but ContextName is NULL"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbTargetDeviceCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp83 12     "%0Attributes %10!p! ContextTypeInfo %11!p! Size %12!d! incorrect, expected %13!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbTargetDeviceCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->Size, ItemLong -- 12
sizeof(WDF_OBJECT_CONTEXT_TYPE_INFO), ItemLong -- 13
}
#typev  FxValidateFunctions_hpp70 11     "%0Attributes %10!p! Size incorrect, expected %11!d!, got %12!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbTargetDeviceCreate
{
Attributes, ItemPtr -- 10
sizeof(WDF_OBJECT_ATTRIBUTES), ItemLong -- 11
Attributes->Size, ItemLong -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp159 18     "%0Attributes %10!p! execution level set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDmaTransactionCreate
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp168 19     "%0Attributes %10!p! synchronization scope set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDmaTransactionCreate
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp201 21     "%0Attributes %10!p! does not allow execution level to be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDmaTransactionCreate
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemEnum(_WDF_EXECUTION_LEVEL) -- 11
}
#typev  FxValidateFunctions_hpp184 20     "%0Attributes %10!p! does not allow synchronization scope too be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDmaTransactionCreate
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemEnum(_WDF_SYNCHRONIZATION_SCOPE) -- 11
}
#typev  FxValidateFunctions_hpp137 16     "%0Attributes %10!p! does not allow a parent object to be set, set to %11!p!, status 0x%12!x!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDmaTransactionCreate
{
Attributes, ItemPtr -- 10
Attributes->ParentObject, ItemPtr -- 11
(ULONG) STATUS_WDF_PARENT_ASSIGNMENT_NOT_ALLOWED, ItemLong -- 12
}
#typev  FxValidateFunctions_hpp124 15     "%0Attributes %10!p! ContextSizeOverride %11!I64d! < ContextTypeInfo->ContextSize %12!I64d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDmaTransactionCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp115 14     "%0Attributes %10!p! ContextSizeOverride of %11!I64d! specified, but no type information!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDmaTransactionCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
}
#typev  FxValidateFunctions_hpp99 13     "%0Attributes %10!p! ContextTypeInfo %11!p! ContextSize %12!I64d! is not zero, but ContextName is NULL"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDmaTransactionCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp83 12     "%0Attributes %10!p! ContextTypeInfo %11!p! Size %12!d! incorrect, expected %13!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDmaTransactionCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->Size, ItemLong -- 12
sizeof(WDF_OBJECT_CONTEXT_TYPE_INFO), ItemLong -- 13
}
#typev  FxValidateFunctions_hpp70 11     "%0Attributes %10!p! Size incorrect, expected %11!d!, got %12!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDmaTransactionCreate
{
Attributes, ItemPtr -- 10
sizeof(WDF_OBJECT_ATTRIBUTES), ItemLong -- 11
Attributes->Size, ItemLong -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp159 18     "%0Attributes %10!p! execution level set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxRequest::_Create
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp168 19     "%0Attributes %10!p! synchronization scope set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxRequest::_Create
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp201 21     "%0Attributes %10!p! does not allow execution level to be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxRequest::_Create
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemEnum(_WDF_EXECUTION_LEVEL) -- 11
}
#typev  FxValidateFunctions_hpp184 20     "%0Attributes %10!p! does not allow synchronization scope too be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxRequest::_Create
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemEnum(_WDF_SYNCHRONIZATION_SCOPE) -- 11
}
#typev  FxValidateFunctions_hpp124 15     "%0Attributes %10!p! ContextSizeOverride %11!I64d! < ContextTypeInfo->ContextSize %12!I64d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxRequest::_Create
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp115 14     "%0Attributes %10!p! ContextSizeOverride of %11!I64d! specified, but no type information!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxRequest::_Create
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
}
#typev  FxValidateFunctions_hpp99 13     "%0Attributes %10!p! ContextTypeInfo %11!p! ContextSize %12!I64d! is not zero, but ContextName is NULL"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxRequest::_Create
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp83 12     "%0Attributes %10!p! ContextTypeInfo %11!p! Size %12!d! incorrect, expected %13!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxRequest::_Create
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->Size, ItemLong -- 12
sizeof(WDF_OBJECT_CONTEXT_TYPE_INFO), ItemLong -- 13
}
#typev  FxValidateFunctions_hpp70 11     "%0Attributes %10!p! Size incorrect, expected %11!d!, got %12!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxRequest::_Create
{
Attributes, ItemPtr -- 10
sizeof(WDF_OBJECT_ATTRIBUTES), ItemLong -- 11
Attributes->Size, ItemLong -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp159 18     "%0Attributes %10!p! execution level set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfWorkItemCreate
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp168 19     "%0Attributes %10!p! synchronization scope set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfWorkItemCreate
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp201 21     "%0Attributes %10!p! does not allow execution level to be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfWorkItemCreate
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemEnum(_WDF_EXECUTION_LEVEL) -- 11
}
#typev  FxValidateFunctions_hpp184 20     "%0Attributes %10!p! does not allow synchronization scope too be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfWorkItemCreate
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemEnum(_WDF_SYNCHRONIZATION_SCOPE) -- 11
}
#typev  FxValidateFunctions_hpp148 17     "%0ParentObject specified in WDF_OBJECT_ATTRIBUTES %10!p!, status 0x%11!x!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfWorkItemCreate
{
Attributes, ItemPtr -- 10
(ULONG) STATUS_WDF_PARENT_NOT_SPECIFIED, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp124 15     "%0Attributes %10!p! ContextSizeOverride %11!I64d! < ContextTypeInfo->ContextSize %12!I64d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfWorkItemCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp115 14     "%0Attributes %10!p! ContextSizeOverride of %11!I64d! specified, but no type information!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfWorkItemCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
}
#typev  FxValidateFunctions_hpp99 13     "%0Attributes %10!p! ContextTypeInfo %11!p! ContextSize %12!I64d! is not zero, but ContextName is NULL"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfWorkItemCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp83 12     "%0Attributes %10!p! ContextTypeInfo %11!p! Size %12!d! incorrect, expected %13!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfWorkItemCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->Size, ItemLong -- 12
sizeof(WDF_OBJECT_CONTEXT_TYPE_INFO), ItemLong -- 13
}
#typev  FxValidateFunctions_hpp70 11     "%0Attributes %10!p! Size incorrect, expected %11!d!, got %12!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfWorkItemCreate
{
Attributes, ItemPtr -- 10
sizeof(WDF_OBJECT_ATTRIBUTES), ItemLong -- 11
Attributes->Size, ItemLong -- 12
}
#typev  FxValidateFunctions_hpp54 10     "%0WDF_OBJECT_ATTRIBUTES required, status 0x%10!x!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfWorkItemCreate
{
(ULONG) STATUS_WDF_PARENT_NOT_SPECIFIED, ItemLong -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp159 18     "%0Attributes %10!p! execution level set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfWaitLockCreate
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp168 19     "%0Attributes %10!p! synchronization scope set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfWaitLockCreate
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp201 21     "%0Attributes %10!p! does not allow execution level to be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfWaitLockCreate
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemEnum(_WDF_EXECUTION_LEVEL) -- 11
}
#typev  FxValidateFunctions_hpp184 20     "%0Attributes %10!p! does not allow synchronization scope too be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfWaitLockCreate
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemEnum(_WDF_SYNCHRONIZATION_SCOPE) -- 11
}
#typev  FxValidateFunctions_hpp124 15     "%0Attributes %10!p! ContextSizeOverride %11!I64d! < ContextTypeInfo->ContextSize %12!I64d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfWaitLockCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp115 14     "%0Attributes %10!p! ContextSizeOverride of %11!I64d! specified, but no type information!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfWaitLockCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
}
#typev  FxValidateFunctions_hpp99 13     "%0Attributes %10!p! ContextTypeInfo %11!p! ContextSize %12!I64d! is not zero, but ContextName is NULL"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfWaitLockCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp83 12     "%0Attributes %10!p! ContextTypeInfo %11!p! Size %12!d! incorrect, expected %13!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfWaitLockCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->Size, ItemLong -- 12
sizeof(WDF_OBJECT_CONTEXT_TYPE_INFO), ItemLong -- 13
}
#typev  FxValidateFunctions_hpp70 11     "%0Attributes %10!p! Size incorrect, expected %11!d!, got %12!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfWaitLockCreate
{
Attributes, ItemPtr -- 10
sizeof(WDF_OBJECT_ATTRIBUTES), ItemLong -- 11
Attributes->Size, ItemLong -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp159 18     "%0Attributes %10!p! execution level set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbInterfaceSelectSetting
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp168 19     "%0Attributes %10!p! synchronization scope set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbInterfaceSelectSetting
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp201 21     "%0Attributes %10!p! does not allow execution level to be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbInterfaceSelectSetting
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemEnum(_WDF_EXECUTION_LEVEL) -- 11
}
#typev  FxValidateFunctions_hpp184 20     "%0Attributes %10!p! does not allow synchronization scope too be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbInterfaceSelectSetting
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemEnum(_WDF_SYNCHRONIZATION_SCOPE) -- 11
}
#typev  FxValidateFunctions_hpp137 16     "%0Attributes %10!p! does not allow a parent object to be set, set to %11!p!, status 0x%12!x!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbInterfaceSelectSetting
{
Attributes, ItemPtr -- 10
Attributes->ParentObject, ItemPtr -- 11
(ULONG) STATUS_WDF_PARENT_ASSIGNMENT_NOT_ALLOWED, ItemLong -- 12
}
#typev  FxValidateFunctions_hpp124 15     "%0Attributes %10!p! ContextSizeOverride %11!I64d! < ContextTypeInfo->ContextSize %12!I64d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbInterfaceSelectSetting
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp115 14     "%0Attributes %10!p! ContextSizeOverride of %11!I64d! specified, but no type information!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbInterfaceSelectSetting
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
}
#typev  FxValidateFunctions_hpp99 13     "%0Attributes %10!p! ContextTypeInfo %11!p! ContextSize %12!I64d! is not zero, but ContextName is NULL"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbInterfaceSelectSetting
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp83 12     "%0Attributes %10!p! ContextTypeInfo %11!p! Size %12!d! incorrect, expected %13!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbInterfaceSelectSetting
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->Size, ItemLong -- 12
sizeof(WDF_OBJECT_CONTEXT_TYPE_INFO), ItemLong -- 13
}
#typev  FxValidateFunctions_hpp70 11     "%0Attributes %10!p! Size incorrect, expected %11!d!, got %12!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbInterfaceSelectSetting
{
Attributes, ItemPtr -- 10
sizeof(WDF_OBJECT_ATTRIBUTES), ItemLong -- 11
Attributes->Size, ItemLong -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp159 18     "%0Attributes %10!p! execution level set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDmaEnablerCreate
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp168 19     "%0Attributes %10!p! synchronization scope set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDmaEnablerCreate
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp201 21     "%0Attributes %10!p! does not allow execution level to be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDmaEnablerCreate
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemEnum(_WDF_EXECUTION_LEVEL) -- 11
}
#typev  FxValidateFunctions_hpp184 20     "%0Attributes %10!p! does not allow synchronization scope too be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDmaEnablerCreate
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemEnum(_WDF_SYNCHRONIZATION_SCOPE) -- 11
}
#typev  FxValidateFunctions_hpp124 15     "%0Attributes %10!p! ContextSizeOverride %11!I64d! < ContextTypeInfo->ContextSize %12!I64d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDmaEnablerCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp115 14     "%0Attributes %10!p! ContextSizeOverride of %11!I64d! specified, but no type information!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDmaEnablerCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
}
#typev  FxValidateFunctions_hpp99 13     "%0Attributes %10!p! ContextTypeInfo %11!p! ContextSize %12!I64d! is not zero, but ContextName is NULL"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDmaEnablerCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp83 12     "%0Attributes %10!p! ContextTypeInfo %11!p! Size %12!d! incorrect, expected %13!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDmaEnablerCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->Size, ItemLong -- 12
sizeof(WDF_OBJECT_CONTEXT_TYPE_INFO), ItemLong -- 13
}
#typev  FxValidateFunctions_hpp70 11     "%0Attributes %10!p! Size incorrect, expected %11!d!, got %12!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDmaEnablerCreate
{
Attributes, ItemPtr -- 10
sizeof(WDF_OBJECT_ATTRIBUTES), ItemLong -- 11
Attributes->Size, ItemLong -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp159 18     "%0Attributes %10!p! execution level set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfStringCreate
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp168 19     "%0Attributes %10!p! synchronization scope set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfStringCreate
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp201 21     "%0Attributes %10!p! does not allow execution level to be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfStringCreate
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemEnum(_WDF_EXECUTION_LEVEL) -- 11
}
#typev  FxValidateFunctions_hpp184 20     "%0Attributes %10!p! does not allow synchronization scope too be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfStringCreate
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemEnum(_WDF_SYNCHRONIZATION_SCOPE) -- 11
}
#typev  FxValidateFunctions_hpp124 15     "%0Attributes %10!p! ContextSizeOverride %11!I64d! < ContextTypeInfo->ContextSize %12!I64d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfStringCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp115 14     "%0Attributes %10!p! ContextSizeOverride of %11!I64d! specified, but no type information!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfStringCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
}
#typev  FxValidateFunctions_hpp99 13     "%0Attributes %10!p! ContextTypeInfo %11!p! ContextSize %12!I64d! is not zero, but ContextName is NULL"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfStringCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp83 12     "%0Attributes %10!p! ContextTypeInfo %11!p! Size %12!d! incorrect, expected %13!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfStringCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->Size, ItemLong -- 12
sizeof(WDF_OBJECT_CONTEXT_TYPE_INFO), ItemLong -- 13
}
#typev  FxValidateFunctions_hpp70 11     "%0Attributes %10!p! Size incorrect, expected %11!d!, got %12!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfStringCreate
{
Attributes, ItemPtr -- 10
sizeof(WDF_OBJECT_ATTRIBUTES), ItemLong -- 11
Attributes->Size, ItemLong -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp159 18     "%0Attributes %10!p! execution level set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceOpenRegistryKey
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp168 19     "%0Attributes %10!p! synchronization scope set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceOpenRegistryKey
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp201 21     "%0Attributes %10!p! does not allow execution level to be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceOpenRegistryKey
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemEnum(_WDF_EXECUTION_LEVEL) -- 11
}
#typev  FxValidateFunctions_hpp184 20     "%0Attributes %10!p! does not allow synchronization scope too be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceOpenRegistryKey
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemEnum(_WDF_SYNCHRONIZATION_SCOPE) -- 11
}
#typev  FxValidateFunctions_hpp137 16     "%0Attributes %10!p! does not allow a parent object to be set, set to %11!p!, status 0x%12!x!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceOpenRegistryKey
{
Attributes, ItemPtr -- 10
Attributes->ParentObject, ItemPtr -- 11
(ULONG) STATUS_WDF_PARENT_ASSIGNMENT_NOT_ALLOWED, ItemLong -- 12
}
#typev  FxValidateFunctions_hpp124 15     "%0Attributes %10!p! ContextSizeOverride %11!I64d! < ContextTypeInfo->ContextSize %12!I64d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceOpenRegistryKey
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp115 14     "%0Attributes %10!p! ContextSizeOverride of %11!I64d! specified, but no type information!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceOpenRegistryKey
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
}
#typev  FxValidateFunctions_hpp99 13     "%0Attributes %10!p! ContextTypeInfo %11!p! ContextSize %12!I64d! is not zero, but ContextName is NULL"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceOpenRegistryKey
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp83 12     "%0Attributes %10!p! ContextTypeInfo %11!p! Size %12!d! incorrect, expected %13!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceOpenRegistryKey
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->Size, ItemLong -- 12
sizeof(WDF_OBJECT_CONTEXT_TYPE_INFO), ItemLong -- 13
}
#typev  FxValidateFunctions_hpp70 11     "%0Attributes %10!p! Size incorrect, expected %11!d!, got %12!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceOpenRegistryKey
{
Attributes, ItemPtr -- 10
sizeof(WDF_OBJECT_ATTRIBUTES), ItemLong -- 11
Attributes->Size, ItemLong -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp159 18     "%0Attributes %10!p! execution level set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceAllocAndQueryProperty
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp168 19     "%0Attributes %10!p! synchronization scope set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceAllocAndQueryProperty
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp201 21     "%0Attributes %10!p! does not allow execution level to be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceAllocAndQueryProperty
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemEnum(_WDF_EXECUTION_LEVEL) -- 11
}
#typev  FxValidateFunctions_hpp184 20     "%0Attributes %10!p! does not allow synchronization scope too be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceAllocAndQueryProperty
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemEnum(_WDF_SYNCHRONIZATION_SCOPE) -- 11
}
#typev  FxValidateFunctions_hpp124 15     "%0Attributes %10!p! ContextSizeOverride %11!I64d! < ContextTypeInfo->ContextSize %12!I64d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceAllocAndQueryProperty
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp115 14     "%0Attributes %10!p! ContextSizeOverride of %11!I64d! specified, but no type information!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceAllocAndQueryProperty
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
}
#typev  FxValidateFunctions_hpp99 13     "%0Attributes %10!p! ContextTypeInfo %11!p! ContextSize %12!I64d! is not zero, but ContextName is NULL"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceAllocAndQueryProperty
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp83 12     "%0Attributes %10!p! ContextTypeInfo %11!p! Size %12!d! incorrect, expected %13!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceAllocAndQueryProperty
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->Size, ItemLong -- 12
sizeof(WDF_OBJECT_CONTEXT_TYPE_INFO), ItemLong -- 13
}
#typev  FxValidateFunctions_hpp70 11     "%0Attributes %10!p! Size incorrect, expected %11!d!, got %12!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceAllocAndQueryProperty
{
Attributes, ItemPtr -- 10
sizeof(WDF_OBJECT_ATTRIBUTES), ItemLong -- 11
Attributes->Size, ItemLong -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp159 18     "%0Attributes %10!p! execution level set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceCreate
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp168 19     "%0Attributes %10!p! synchronization scope set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceCreate
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp137 16     "%0Attributes %10!p! does not allow a parent object to be set, set to %11!p!, status 0x%12!x!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceCreate
{
Attributes, ItemPtr -- 10
Attributes->ParentObject, ItemPtr -- 11
(ULONG) STATUS_WDF_PARENT_ASSIGNMENT_NOT_ALLOWED, ItemLong -- 12
}
#typev  FxValidateFunctions_hpp124 15     "%0Attributes %10!p! ContextSizeOverride %11!I64d! < ContextTypeInfo->ContextSize %12!I64d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp115 14     "%0Attributes %10!p! ContextSizeOverride of %11!I64d! specified, but no type information!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
}
#typev  FxValidateFunctions_hpp99 13     "%0Attributes %10!p! ContextTypeInfo %11!p! ContextSize %12!I64d! is not zero, but ContextName is NULL"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp83 12     "%0Attributes %10!p! ContextTypeInfo %11!p! Size %12!d! incorrect, expected %13!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->Size, ItemLong -- 12
sizeof(WDF_OBJECT_CONTEXT_TYPE_INFO), ItemLong -- 13
}
#typev  FxValidateFunctions_hpp70 11     "%0Attributes %10!p! Size incorrect, expected %11!d!, got %12!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfDeviceCreate
{
Attributes, ItemPtr -- 10
sizeof(WDF_OBJECT_ATTRIBUTES), ItemLong -- 11
Attributes->Size, ItemLong -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp159 18     "%0Attributes %10!p! execution level set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxWmiProvider::_Create
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp168 19     "%0Attributes %10!p! synchronization scope set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxWmiProvider::_Create
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp201 21     "%0Attributes %10!p! does not allow execution level to be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxWmiProvider::_Create
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemEnum(_WDF_EXECUTION_LEVEL) -- 11
}
#typev  FxValidateFunctions_hpp184 20     "%0Attributes %10!p! does not allow synchronization scope too be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxWmiProvider::_Create
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemEnum(_WDF_SYNCHRONIZATION_SCOPE) -- 11
}
#typev  FxValidateFunctions_hpp137 16     "%0Attributes %10!p! does not allow a parent object to be set, set to %11!p!, status 0x%12!x!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxWmiProvider::_Create
{
Attributes, ItemPtr -- 10
Attributes->ParentObject, ItemPtr -- 11
(ULONG) STATUS_WDF_PARENT_ASSIGNMENT_NOT_ALLOWED, ItemLong -- 12
}
#typev  FxValidateFunctions_hpp124 15     "%0Attributes %10!p! ContextSizeOverride %11!I64d! < ContextTypeInfo->ContextSize %12!I64d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxWmiProvider::_Create
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp115 14     "%0Attributes %10!p! ContextSizeOverride of %11!I64d! specified, but no type information!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxWmiProvider::_Create
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
}
#typev  FxValidateFunctions_hpp99 13     "%0Attributes %10!p! ContextTypeInfo %11!p! ContextSize %12!I64d! is not zero, but ContextName is NULL"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxWmiProvider::_Create
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp83 12     "%0Attributes %10!p! ContextTypeInfo %11!p! Size %12!d! incorrect, expected %13!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxWmiProvider::_Create
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->Size, ItemLong -- 12
sizeof(WDF_OBJECT_CONTEXT_TYPE_INFO), ItemLong -- 13
}
#typev  FxValidateFunctions_hpp70 11     "%0Attributes %10!p! Size incorrect, expected %11!d!, got %12!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxWmiProvider::_Create
{
Attributes, ItemPtr -- 10
sizeof(WDF_OBJECT_ATTRIBUTES), ItemLong -- 11
Attributes->Size, ItemLong -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp261 24     "%0Options %10!p!, if WDF_REQUEST_SEND_OPTION_SEND_AND_FORGET (0x%11!x!) is set, no other Flags 0x%12!x! can be set"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbTargetPipeSendUrbSynchronously
{
Options, ItemPtr -- 10
WDF_REQUEST_SEND_OPTION_SEND_AND_FORGET, ItemLong -- 11
Options->Flags, ItemLong -- 12
}
#typev  FxValidateFunctions_hpp247 23     "%0Options %10!p! Flags 0x%11!x! invalid, valid mask is 0x%12!x!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbTargetPipeSendUrbSynchronously
{
Options, ItemPtr -- 10
Options->Flags, ItemLong -- 11
WDF_REQUEST_SEND_OPTIONS_VALID_FLAGS, ItemLong -- 12
}
#typev  FxValidateFunctions_hpp235 22     "%0Options %10!p! Size incorrect, expected %11!d!, got %12!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbTargetPipeSendUrbSynchronously
{
Options, ItemPtr -- 10
sizeof(WDF_REQUEST_SEND_OPTIONS), ItemLong -- 11
Options->Size, ItemLong -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp261 24     "%0Options %10!p!, if WDF_REQUEST_SEND_OPTION_SEND_AND_FORGET (0x%11!x!) is set, no other Flags 0x%12!x! can be set"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbTargetPipeResetSynchronously
{
Options, ItemPtr -- 10
WDF_REQUEST_SEND_OPTION_SEND_AND_FORGET, ItemLong -- 11
Options->Flags, ItemLong -- 12
}
#typev  FxValidateFunctions_hpp247 23     "%0Options %10!p! Flags 0x%11!x! invalid, valid mask is 0x%12!x!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbTargetPipeResetSynchronously
{
Options, ItemPtr -- 10
Options->Flags, ItemLong -- 11
WDF_REQUEST_SEND_OPTIONS_VALID_FLAGS, ItemLong -- 12
}
#typev  FxValidateFunctions_hpp235 22     "%0Options %10!p! Size incorrect, expected %11!d!, got %12!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbTargetPipeResetSynchronously
{
Options, ItemPtr -- 10
sizeof(WDF_REQUEST_SEND_OPTIONS), ItemLong -- 11
Options->Size, ItemLong -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp261 24     "%0Options %10!p!, if WDF_REQUEST_SEND_OPTION_SEND_AND_FORGET (0x%11!x!) is set, no other Flags 0x%12!x! can be set"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbTargetPipeAbortSynchronously
{
Options, ItemPtr -- 10
WDF_REQUEST_SEND_OPTION_SEND_AND_FORGET, ItemLong -- 11
Options->Flags, ItemLong -- 12
}
#typev  FxValidateFunctions_hpp247 23     "%0Options %10!p! Flags 0x%11!x! invalid, valid mask is 0x%12!x!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbTargetPipeAbortSynchronously
{
Options, ItemPtr -- 10
Options->Flags, ItemLong -- 11
WDF_REQUEST_SEND_OPTIONS_VALID_FLAGS, ItemLong -- 12
}
#typev  FxValidateFunctions_hpp235 22     "%0Options %10!p! Size incorrect, expected %11!d!, got %12!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbTargetPipeAbortSynchronously
{
Options, ItemPtr -- 10
sizeof(WDF_REQUEST_SEND_OPTIONS), ItemLong -- 11
Options->Size, ItemLong -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp159 18     "%0Attributes %10!p! execution level set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbTargetPipeConfigContinuousReader
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp168 19     "%0Attributes %10!p! synchronization scope set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbTargetPipeConfigContinuousReader
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp201 21     "%0Attributes %10!p! does not allow execution level to be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbTargetPipeConfigContinuousReader
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemEnum(_WDF_EXECUTION_LEVEL) -- 11
}
#typev  FxValidateFunctions_hpp184 20     "%0Attributes %10!p! does not allow synchronization scope too be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbTargetPipeConfigContinuousReader
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemEnum(_WDF_SYNCHRONIZATION_SCOPE) -- 11
}
#typev  FxValidateFunctions_hpp137 16     "%0Attributes %10!p! does not allow a parent object to be set, set to %11!p!, status 0x%12!x!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbTargetPipeConfigContinuousReader
{
Attributes, ItemPtr -- 10
Attributes->ParentObject, ItemPtr -- 11
(ULONG) STATUS_WDF_PARENT_ASSIGNMENT_NOT_ALLOWED, ItemLong -- 12
}
#typev  FxValidateFunctions_hpp124 15     "%0Attributes %10!p! ContextSizeOverride %11!I64d! < ContextTypeInfo->ContextSize %12!I64d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbTargetPipeConfigContinuousReader
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp115 14     "%0Attributes %10!p! ContextSizeOverride of %11!I64d! specified, but no type information!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbTargetPipeConfigContinuousReader
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
}
#typev  FxValidateFunctions_hpp99 13     "%0Attributes %10!p! ContextTypeInfo %11!p! ContextSize %12!I64d! is not zero, but ContextName is NULL"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbTargetPipeConfigContinuousReader
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp83 12     "%0Attributes %10!p! ContextTypeInfo %11!p! Size %12!d! incorrect, expected %13!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbTargetPipeConfigContinuousReader
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->Size, ItemLong -- 12
sizeof(WDF_OBJECT_CONTEXT_TYPE_INFO), ItemLong -- 13
}
#typev  FxValidateFunctions_hpp70 11     "%0Attributes %10!p! Size incorrect, expected %11!d!, got %12!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfUsbTargetPipeConfigContinuousReader
{
Attributes, ItemPtr -- 10
sizeof(WDF_OBJECT_ATTRIBUTES), ItemLong -- 11
Attributes->Size, ItemLong -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp159 18     "%0Attributes %10!p! execution level set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfCommonBufferCreateWithConfig
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp168 19     "%0Attributes %10!p! synchronization scope set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfCommonBufferCreateWithConfig
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp201 21     "%0Attributes %10!p! does not allow execution level to be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfCommonBufferCreateWithConfig
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemEnum(_WDF_EXECUTION_LEVEL) -- 11
}
#typev  FxValidateFunctions_hpp184 20     "%0Attributes %10!p! does not allow synchronization scope too be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfCommonBufferCreateWithConfig
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemEnum(_WDF_SYNCHRONIZATION_SCOPE) -- 11
}
#typev  FxValidateFunctions_hpp137 16     "%0Attributes %10!p! does not allow a parent object to be set, set to %11!p!, status 0x%12!x!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfCommonBufferCreateWithConfig
{
Attributes, ItemPtr -- 10
Attributes->ParentObject, ItemPtr -- 11
(ULONG) STATUS_WDF_PARENT_ASSIGNMENT_NOT_ALLOWED, ItemLong -- 12
}
#typev  FxValidateFunctions_hpp124 15     "%0Attributes %10!p! ContextSizeOverride %11!I64d! < ContextTypeInfo->ContextSize %12!I64d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfCommonBufferCreateWithConfig
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp115 14     "%0Attributes %10!p! ContextSizeOverride of %11!I64d! specified, but no type information!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfCommonBufferCreateWithConfig
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
}
#typev  FxValidateFunctions_hpp99 13     "%0Attributes %10!p! ContextTypeInfo %11!p! ContextSize %12!I64d! is not zero, but ContextName is NULL"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfCommonBufferCreateWithConfig
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp83 12     "%0Attributes %10!p! ContextTypeInfo %11!p! Size %12!d! incorrect, expected %13!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfCommonBufferCreateWithConfig
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->Size, ItemLong -- 12
sizeof(WDF_OBJECT_CONTEXT_TYPE_INFO), ItemLong -- 13
}
#typev  FxValidateFunctions_hpp70 11     "%0Attributes %10!p! Size incorrect, expected %11!d!, got %12!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfCommonBufferCreateWithConfig
{
Attributes, ItemPtr -- 10
sizeof(WDF_OBJECT_ATTRIBUTES), ItemLong -- 11
Attributes->Size, ItemLong -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp159 18     "%0Attributes %10!p! execution level set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfCommonBufferCreate
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp168 19     "%0Attributes %10!p! synchronization scope set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfCommonBufferCreate
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp201 21     "%0Attributes %10!p! does not allow execution level to be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfCommonBufferCreate
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemEnum(_WDF_EXECUTION_LEVEL) -- 11
}
#typev  FxValidateFunctions_hpp184 20     "%0Attributes %10!p! does not allow synchronization scope too be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfCommonBufferCreate
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemEnum(_WDF_SYNCHRONIZATION_SCOPE) -- 11
}
#typev  FxValidateFunctions_hpp137 16     "%0Attributes %10!p! does not allow a parent object to be set, set to %11!p!, status 0x%12!x!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfCommonBufferCreate
{
Attributes, ItemPtr -- 10
Attributes->ParentObject, ItemPtr -- 11
(ULONG) STATUS_WDF_PARENT_ASSIGNMENT_NOT_ALLOWED, ItemLong -- 12
}
#typev  FxValidateFunctions_hpp124 15     "%0Attributes %10!p! ContextSizeOverride %11!I64d! < ContextTypeInfo->ContextSize %12!I64d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfCommonBufferCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp115 14     "%0Attributes %10!p! ContextSizeOverride of %11!I64d! specified, but no type information!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfCommonBufferCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
}
#typev  FxValidateFunctions_hpp99 13     "%0Attributes %10!p! ContextTypeInfo %11!p! ContextSize %12!I64d! is not zero, but ContextName is NULL"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfCommonBufferCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp83 12     "%0Attributes %10!p! ContextTypeInfo %11!p! Size %12!d! incorrect, expected %13!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfCommonBufferCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->Size, ItemLong -- 12
sizeof(WDF_OBJECT_CONTEXT_TYPE_INFO), ItemLong -- 13
}
#typev  FxValidateFunctions_hpp70 11     "%0Attributes %10!p! Size incorrect, expected %11!d!, got %12!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfCommonBufferCreate
{
Attributes, ItemPtr -- 10
sizeof(WDF_OBJECT_ATTRIBUTES), ItemLong -- 11
Attributes->Size, ItemLong -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp159 18     "%0Attributes %10!p! execution level set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfTimerCreate
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp168 19     "%0Attributes %10!p! synchronization scope set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfTimerCreate
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp201 21     "%0Attributes %10!p! does not allow execution level to be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfTimerCreate
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemEnum(_WDF_EXECUTION_LEVEL) -- 11
}
#typev  FxValidateFunctions_hpp184 20     "%0Attributes %10!p! does not allow synchronization scope too be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfTimerCreate
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemEnum(_WDF_SYNCHRONIZATION_SCOPE) -- 11
}
#typev  FxValidateFunctions_hpp148 17     "%0ParentObject specified in WDF_OBJECT_ATTRIBUTES %10!p!, status 0x%11!x!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfTimerCreate
{
Attributes, ItemPtr -- 10
(ULONG) STATUS_WDF_PARENT_NOT_SPECIFIED, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp124 15     "%0Attributes %10!p! ContextSizeOverride %11!I64d! < ContextTypeInfo->ContextSize %12!I64d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfTimerCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp115 14     "%0Attributes %10!p! ContextSizeOverride of %11!I64d! specified, but no type information!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfTimerCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
}
#typev  FxValidateFunctions_hpp99 13     "%0Attributes %10!p! ContextTypeInfo %11!p! ContextSize %12!I64d! is not zero, but ContextName is NULL"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfTimerCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp83 12     "%0Attributes %10!p! ContextTypeInfo %11!p! Size %12!d! incorrect, expected %13!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfTimerCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->Size, ItemLong -- 12
sizeof(WDF_OBJECT_CONTEXT_TYPE_INFO), ItemLong -- 13
}
#typev  FxValidateFunctions_hpp70 11     "%0Attributes %10!p! Size incorrect, expected %11!d!, got %12!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfTimerCreate
{
Attributes, ItemPtr -- 10
sizeof(WDF_OBJECT_ATTRIBUTES), ItemLong -- 11
Attributes->Size, ItemLong -- 12
}
#typev  FxValidateFunctions_hpp54 10     "%0WDF_OBJECT_ATTRIBUTES required, status 0x%10!x!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfTimerCreate
{
(ULONG) STATUS_WDF_PARENT_NOT_SPECIFIED, ItemLong -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp159 18     "%0Attributes %10!p! execution level set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfMemoryCreate
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp168 19     "%0Attributes %10!p! synchronization scope set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfMemoryCreate
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp201 21     "%0Attributes %10!p! does not allow execution level to be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfMemoryCreate
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemEnum(_WDF_EXECUTION_LEVEL) -- 11
}
#typev  FxValidateFunctions_hpp184 20     "%0Attributes %10!p! does not allow synchronization scope too be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfMemoryCreate
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemEnum(_WDF_SYNCHRONIZATION_SCOPE) -- 11
}
#typev  FxValidateFunctions_hpp124 15     "%0Attributes %10!p! ContextSizeOverride %11!I64d! < ContextTypeInfo->ContextSize %12!I64d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfMemoryCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp115 14     "%0Attributes %10!p! ContextSizeOverride of %11!I64d! specified, but no type information!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfMemoryCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
}
#typev  FxValidateFunctions_hpp99 13     "%0Attributes %10!p! ContextTypeInfo %11!p! ContextSize %12!I64d! is not zero, but ContextName is NULL"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfMemoryCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp83 12     "%0Attributes %10!p! ContextTypeInfo %11!p! Size %12!d! incorrect, expected %13!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfMemoryCreate
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->Size, ItemLong -- 12
sizeof(WDF_OBJECT_CONTEXT_TYPE_INFO), ItemLong -- 13
}
#typev  FxValidateFunctions_hpp70 11     "%0Attributes %10!p! Size incorrect, expected %11!d!, got %12!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=imp_WdfMemoryCreate
{
Attributes, ItemPtr -- 10
sizeof(WDF_OBJECT_ATTRIBUTES), ItemLong -- 11
Attributes->Size, ItemLong -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp159 18     "%0Attributes %10!p! execution level set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxWmiInstanceExternal::_Create
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemLong -- 11
}
#typev  FxValidateFunctions_hpp168 19     "%0Attributes %10!p! synchronization scope set to %11!d!, out of range"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxWmiInstanceExternal::_Create
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxValidateFunctions_hpp201 21     "%0Attributes %10!p! does not allow execution level to be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxWmiInstanceExternal::_Create
{
Attributes, ItemPtr -- 10
Attributes->ExecutionLevel, ItemEnum(_WDF_EXECUTION_LEVEL) -- 11
}
#typev  FxValidateFunctions_hpp184 20     "%0Attributes %10!p! does not allow synchronization scope too be set, but was set to %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxWmiInstanceExternal::_Create
{
Attributes, ItemPtr -- 10
Attributes->SynchronizationScope, ItemEnum(_WDF_SYNCHRONIZATION_SCOPE) -- 11
}
#typev  FxValidateFunctions_hpp137 16     "%0Attributes %10!p! does not allow a parent object to be set, set to %11!p!, status 0x%12!x!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxWmiInstanceExternal::_Create
{
Attributes, ItemPtr -- 10
Attributes->ParentObject, ItemPtr -- 11
(ULONG) STATUS_WDF_PARENT_ASSIGNMENT_NOT_ALLOWED, ItemLong -- 12
}
#typev  FxValidateFunctions_hpp124 15     "%0Attributes %10!p! ContextSizeOverride %11!I64d! < ContextTypeInfo->ContextSize %12!I64d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxWmiInstanceExternal::_Create
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp115 14     "%0Attributes %10!p! ContextSizeOverride of %11!I64d! specified, but no type information!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxWmiInstanceExternal::_Create
{
Attributes, ItemPtr -- 10
Attributes->ContextSizeOverride, ItemLongLong -- 11
}
#typev  FxValidateFunctions_hpp99 13     "%0Attributes %10!p! ContextTypeInfo %11!p! ContextSize %12!I64d! is not zero, but ContextName is NULL"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxWmiInstanceExternal::_Create
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->ContextSize, ItemLongLong -- 12
}
#typev  FxValidateFunctions_hpp83 12     "%0Attributes %10!p! ContextTypeInfo %11!p! Size %12!d! incorrect, expected %13!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxWmiInstanceExternal::_Create
{
Attributes, ItemPtr -- 10
Attributes->ContextTypeInfo, ItemPtr -- 11
Attributes->ContextTypeInfo->Size, ItemLong -- 12
sizeof(WDF_OBJECT_CONTEXT_TYPE_INFO), ItemLong -- 13
}
#typev  FxValidateFunctions_hpp70 11     "%0Attributes %10!p! Size incorrect, expected %11!d!, got %12!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGAPIERROR FUNC=FxWmiInstanceExternal::_Create
{
Attributes, ItemPtr -- 10
sizeof(WDF_OBJECT_ATTRIBUTES), ItemLong -- 11
Attributes->Size, ItemLong -- 12
}
#enumv _WDF_EXECUTION_LEVEL
{
WdfExecutionLevelInvalid,0x0
WdfExecutionLevelInheritFromParent,0x1
WdfExecutionLevelPassive,0x2
WdfExecutionLevelDispatch,0x3
}
#enumv _WDF_SYNCHRONIZATION_SCOPE
{
WdfSynchronizationScopeInvalid,0x0
WdfSynchronizationScopeInheritFromParent,0x1
WdfSynchronizationScopeDevice,0x2
WdfSynchronizationScopeQueue,0x3
WdfSynchronizationScopeNone,0x4
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
cbb7aabc-8282-c8df-ba62-9bfc713cd1e0     core // SRC=FxDeviceInitAPI.cpp MJ= MN=
#typev  FxDeviceInitAPI_cpp1843 58     "%0WdfDeviceShutdown Flags 0x%10!x! are invalid"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfControlDeviceInitSetShutdownNotification
{
Flags, ItemLong -- 10
}
#typev  FxDeviceInitAPI_cpp1836 57     "%0Not a PWDFDEVICE_INIT for a control device"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfControlDeviceInitSetShutdownNotification
{
}
#typev  FxDeviceInitAPI_cpp919 30     "%0Not a PWDFDEVICE_INIT for an FDO"      //   GLOBALS=GetFxDriverGlobals(DriverGlobals) LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfFdoInitWdmGetPhysicalDevice
{
}
#typev  FxDeviceInitAPI_cpp506 16     "%0PowerPolicyEventCallbacks size %10!d! is invalid, expected %11!d!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceInitSetPowerPolicyEventCallbacks
{
PowerPolicyEventCallbacks->Size, ItemLong -- 10
sizeof(WDF_POWER_POLICY_EVENT_CALLBACKS), ItemLong -- 11
}
#typev  FxDeviceInitAPI_cpp472 15     "%0PnpPowerEventCallbacks size %10!d! is invalid, exptected %11!d!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceInitSetPnpPowerEventCallbacks
{
PnpPowerEventCallbacks->Size, ItemLong -- 10
sizeof(WDF_PNPPOWER_EVENT_CALLBACKS), ItemLong -- 11
}
#typev  FxDeviceInitAPI_cpp63 10     "%0Out of range IoType %10!d!"      //   GLOBALS=GetFxDriverGlobals(DriverGlobals) LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceInitSetIoType
{
IoType, ItemLong -- 10
}
#typev  FxDeviceInitAPI_cpp1759 56     "%0Not a PWDFDEVICE_INIT for a PDO, %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfPdoInitAssignRawDevice
{
status, ItemNTSTATUS -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxDeviceInitAPI_cpp1722 55     "%0Not a PWDFDEVICE_INIT for a PDO"      //   GLOBALS=GetFxDriverGlobals(DriverGlobals) LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfPdoInitSetDefaultLocale
{
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxDeviceInitAPI_cpp1358 42     "%0DispatchTable size %10!d! is invalid, expected %11!d!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfPdoInitSetEventCallbacks
{
DispatchTable->Size, ItemLong -- 10
sizeof(WDF_PDO_EVENT_CALLBACKS), ItemLong -- 11
}
#typev  FxDeviceInitAPI_cpp1351 41     "%0Not a PWDFDEVICE_INIT for a PDO"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfPdoInitSetEventCallbacks
{
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxDeviceInitAPI_cpp1237 38     "%0Not a PWDFDEVICE_INIT for an FDO"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfFdoInitSetDefaultChildListConfig
{
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxDeviceInitAPI_cpp1196 37     "%0Must set EvtDeviceRemoveAddedResources if EvtDeviceFilterAddResourceRequirements (%10!p!) is set"      //   GLOBALS=GetFxDriverGlobals(DriverGlobals) LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=imp_WdfFdoInitSetEventCallbacks
{
FdoEventCallbacks->EvtDeviceFilterAddResourceRequirements, ItemPtr -- 10
}
#typev  FxDeviceInitAPI_cpp1182 36     "%0FdoEventCallbacks size %10!d! is invalid, expected %11!d!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfFdoInitSetEventCallbacks
{
FdoEventCallbacks->Size, ItemLong -- 10
sizeof(WDF_FDO_EVENT_CALLBACKS), ItemLong -- 11
}
#typev  FxDeviceInitAPI_cpp1175 35     "%0Not a PWDFDEVICE_INIT for an FDO"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfFdoInitSetEventCallbacks
{
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxDeviceInitAPI_cpp1059 33     "%0Not a PWDFDEVICE_INIT for an FDO, %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfFdoInitQueryProperty
{
status, ItemNTSTATUS -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxDeviceInitAPI_cpp992 32     "%0Not a PWDFDEVICE_INIT for an FDO"      //   GLOBALS=GetFxDriverGlobals(DriverGlobals) LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfFdoInitSetFilter
{
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxDeviceInitAPI_cpp291 12     "%0Invalid FileObjectConfig->AutoForwardCleanupClose value 0x%10!x!, expected WDF_TRI_STATE value"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceInitSetFileObjectConfig
{
FileObjectConfig->AutoForwardCleanupClose, ItemLong -- 10
}
#typev  FxDeviceInitAPI_cpp308 13     "%0Out of range FileObjectConfig->FileObjectClass %10!d!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceInitSetFileObjectConfig
{
FileObjectConfig->FileObjectClass, ItemLong -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxDeviceInitAPI_cpp259 11     "%0Invalid FileObjectConfig Size %10!d!, expected %11!d!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceInitSetFileObjectConfig
{
FileObjectConfig->Size, ItemLong -- 10
sizeof(WDF_FILEOBJECT_CONFIG), ItemLong -- 11
}
#typev  FxDeviceInitAPI_cpp1684 54     "%0Couldn't allocate DeviceLocation string, %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfPdoInitAddDeviceText
{
status, ItemNTSTATUS -- 10
}
#typev  FxDeviceInitAPI_cpp1671 53     "%0Couldn't allocate DeviceDescription string, %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfPdoInitAddDeviceText
{
status, ItemNTSTATUS -- 10
}
#typev  FxDeviceInitAPI_cpp1656 52     "%0Couldn't allocate DeviceText object, %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfPdoInitAddDeviceText
{
status, ItemNTSTATUS -- 10
}
#typev  FxDeviceInitAPI_cpp1646 51     "%0Not a PWDFDEVICE_INIT for a PDO, %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfPdoInitAddDeviceText
{
status, ItemNTSTATUS -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxDeviceInitAPI_cpp1312 40     "%0Couldn't create WDFDEVICE_INIT object"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfPdoInitAllocate
{
}
#typev  FxDeviceInitAPI_cpp1302 39     "%0Parent device is not a FDO (must use WDFCHILDLIST to use a PDO as a parent)"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfPdoInitAllocate
{
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxDeviceInitAPI_cpp828 29     "%0Couldn't create object MinorFunctionsSTATUS_INSUFFICIENT_RESOURCES"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceInitAssignWdmIrpPreprocessCallback
{
}
#typev  FxDeviceInitAPI_cpp814 28     "%0Already assigned MinorfunctionsSTATUS_INVALID_DEVICE_REQUEST"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceInitAssignWdmIrpPreprocessCallback
{
}
#typev  FxDeviceInitAPI_cpp801 27     "%0Couldn't create object PreprocessInfoSTATUS_INSUFFICIENT_RESOURCES"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceInitAssignWdmIrpPreprocessCallback
{
}
#typev  FxDeviceInitAPI_cpp789 26     "%0MajorFunction is invalidSTATUS_INVALID_PARAMETER"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceInitAssignWdmIrpPreprocessCallback
{
}
#typev  FxDeviceInitAPI_cpp715 23     "%0PowerPolicyState State is invalid %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceInitRegisterPowerPolicyStateChangeCallback
{
status, ItemNTSTATUS -- 10
}
#typev  FxDeviceInitAPI_cpp726 24     "%0CallbackTypes is invalid %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceInitRegisterPowerPolicyStateChangeCallback
{
status, ItemNTSTATUS -- 10
}
#typev  FxDeviceInitAPI_cpp739 25     "%0Couldn't create object PowerPolicyStateCallbacks %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceInitRegisterPowerPolicyStateChangeCallback
{
status, ItemNTSTATUS -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxDeviceInitAPI_cpp641 20     "%0PowerState State is invalid %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceInitRegisterPowerStateChangeCallback
{
status, ItemNTSTATUS -- 10
}
#typev  FxDeviceInitAPI_cpp651 21     "%0CallbackTypes is invalid %10!s!STATUS_INVALID_PARAMETER"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceInitRegisterPowerStateChangeCallback
{
status, ItemNTSTATUS -- 10
}
#typev  FxDeviceInitAPI_cpp665 22     "%0Couldn't create object PowerStateCallbacks %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceInitRegisterPowerStateChangeCallback
{
status, ItemNTSTATUS -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxDeviceInitAPI_cpp567 17     "%0Pnp State is invalid %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceInitRegisterPnpStateChangeCallback
{
status, ItemNTSTATUS -- 10
}
#typev  FxDeviceInitAPI_cpp577 18     "%0CallbackTypes is invalid %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceInitRegisterPnpStateChangeCallback
{
status, ItemNTSTATUS -- 10
}
#typev  FxDeviceInitAPI_cpp591 19     "%0Couldn't create object PnpStateCallbacks %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceInitRegisterPnpStateChangeCallback
{
status, ItemNTSTATUS -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxDeviceInitAPI_cpp1583 50     "%0Couldn't allocate String objectSTATUS_INSUFFICIENT_RESOURCES"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfPdoInitAddCompatibleID
{
}
#typev  FxDeviceInitAPI_cpp1575 49     "%0Not a PWDFDEVICE_INIT for a PDO, %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfPdoInitAddCompatibleID
{
status, ItemNTSTATUS -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxDeviceInitAPI_cpp1522 48     "%0Couldn't allocate String object %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfPdoInitAddHardwareID
{
status, ItemNTSTATUS -- 10
}
#typev  FxDeviceInitAPI_cpp1513 47     "%0Not a PWDFDEVICE_INIT for a PDO, %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfPdoInitAddHardwareID
{
status, ItemNTSTATUS -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxDeviceInitAPI_cpp1467 46     "%0Couldn't allocate InstanceID objectSTATUS_INSUFFICIENT_RESOURCES"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfPdoInitAssignInstanceID
{
}
#typev  FxDeviceInitAPI_cpp1456 45     "%0Not a PWDFDEVICE_INIT for a PDO, %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfPdoInitAssignInstanceID
{
status, ItemNTSTATUS -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxDeviceInitAPI_cpp1412 44     "%0Couldn't allocate DeviceID objectSTATUS_INSUFFICIENT_RESOURCES"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfPdoInitAssignDeviceID
{
}
#typev  FxDeviceInitAPI_cpp1401 43     "%0Not a PWDFDEVICE_INIT for a PDO, %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfPdoInitAssignDeviceID
{
status, ItemNTSTATUS -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxDeviceInitAPI_cpp416 14     "%0Couldn't create Security descriptor STATUS_INSUFFICIENT_RESOURCES"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceInitAssignSDDLString
{
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxDeviceInitAPI_cpp957 31     "%0Not a PWDFDEVICE_INIT for an FDO, %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfFdoInitOpenRegistryKey
{
status, ItemNTSTATUS -- 10
}
#typev  FxDeviceInitAPI_cpp1136 34     "%0Not a PWDFDEVICE_INIT for an FDO, %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfFdoInitAllocAndQueryProperty
{
status, ItemNTSTATUS -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
cdf717bb-2b93-8691-b926-6cd844c87ad4     core // SRC=FxDeviceInit.cpp MJ= MN=
#typev  FxDeviceInit_cpp222 12     "%0WDFDRIVER 0x%10!p! couldn't create Security String object %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=WDFDEVICE_INIT::_AllocateControlDeviceInit
{
Driver, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxDeviceInit_cpp199 11     "%0WDFDRIVER 0x%10!p!  couldn't allocate WDFDEVICE_INIT"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=WDFDEVICE_INIT::_AllocateControlDeviceInit
{
Driver, ItemPtr -- 10
}
#typev  FxDeviceInit_cpp169 10     "%0DeviceName is NULL, %10!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=WDFDEVICE_INIT::AssignName
{
status, ItemNTSTATUS -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
d0eb93bc-eff4-d271-03f7-ab61e635b969     support // SRC=FxRegistryAPI.cpp MJ= MN=
#typev  FxRegistryAPI_cpp1306 34     "%0WDFKEY handle %10!p! SetValue, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryAssignString
{
Key, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxRegistryAPI_cpp1166 31     "%0WDFKEY %10!p! SetValue, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryAssignULong
{
Key, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxRegistryAPI_cpp1094 28     "%0WDFKEY %10!p!, WDFMEMORY %11!p! Offsets overflowed, %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryAssignMemory
{
Key, ItemPtr -- 10
Memory, ItemPtr -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxRegistryAPI_cpp1106 29     "%0WDFKEY %10!p!, WDFMEMORY %11!p! BufferLength in Offsets truncated, %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryAssignMemory
{
Key, ItemPtr -- 10
Memory, ItemPtr -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxRegistryAPI_cpp1121 30     "%0WDFKEY handle %10!p! SetValue, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryAssignMemory
{
Key, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxRegistryAPI_cpp1032 27     "%0WDFKEY %10!p! SetValue, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryAssignValue
{
Key, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxRegistryAPI_cpp982 26     "%0WDFKEY %10!p!, QueryULong, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryQueryULong
{
Key, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxRegistryAPI_cpp1398 38     "%0WDFKEY %10!p! SetValue, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryAssignMultiString
{
Key, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxRegistryAPI_cpp1386 37     "%0WDFKEY %10!p! allocate for query buffer failed, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryAssignMultiString
{
Key, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxRegistryAPI_cpp1374 36     "%0WDFKEY %10!p!,  WDFCOLLECTION %11!p! contains non string objects, %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryAssignMultiString
{
Key, ItemPtr -- 10
StringsCollection, ItemPtr -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxRegistryAPI_cpp1366 35     "%0WDFCOLLECTION %10!p!, collection too large to fit into a ULONG, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryAssignMultiString
{
StringsCollection, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxRegistryAPI_cpp1250 33     "%0WDFKEY %10!p! set value failed, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryAssignUnicodeString
{
Key, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxRegistryAPI_cpp1231 32     "%0WDFKEY %10!p! allocate temporary buffer failed, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryAssignUnicodeString
{
Key, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxRegistryAPI_cpp794 22     "%0WDFKEY %10!p! KEY_VALUE_PARTIAL_INFORMATION allocation failed, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryQueryUnicodeString
{
Key, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxRegistryAPI_cpp422 14     "%0WDFKEY %10!p! QueryValue failed, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryQueryValue
{
Key, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxRegistryAPI_cpp931 25     "%0WDFKEY %10!p! QueryPartial failed, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryQueryString
{
Key, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxRegistryAPI_cpp909 24     "%0WDFKEY %10!p! KEY_VALUE_PARTIAL_INFORMATION allocation failed, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryQueryString
{
Key, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxRegistryAPI_cpp892 23     "%0WDFKEY %10!p!, QueryPartial failed, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryQueryString
{
Key, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxRegistryAPI_cpp700 21     "%0WDFKEY %10!p!: WDFSTRING creation failed: %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryQueryMultiString
{
Key, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxRegistryAPI_cpp672 20     "%0WDFKEY %10!p!, WDFCOLLECTION %11!p!, collection add failed %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryQueryMultiString
{
Key, ItemPtr -- 10
Collection, ItemPtr -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxRegistryAPI_cpp631 19     "%0WDFKEY %10!p! KEY_VALUE_PARTIAL_INFORMATION allocation failed, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryQueryMultiString
{
Key, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxRegistryAPI_cpp612 18     "%0WDFKEY %10!p! QueryPartial failed: %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryQueryMultiString
{
Key, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxRegistryAPI_cpp233 13     "%0Registry key creation failed, %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryCreateKey
{
status, ItemNTSTATUS -- 10
}
#typev  FxRegistryAPI_cpp209 12     "%0Could not allocate memory for WDFKEY, %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryCreateKey
{
status, ItemNTSTATUS -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxRegistryAPI_cpp131 11     "%0new WDFKEY object open failed, %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryOpenKey
{
status, ItemNTSTATUS -- 10
}
#typev  FxRegistryAPI_cpp111 10     "%0Could not allocate memory for a WDFKEY, %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryOpenKey
{
status, ItemNTSTATUS -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxRegistryAPI_cpp541 17     "%0WDFKEY %10!p! QueryPartial failed, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryQueryMemory
{
Key, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxRegistryAPI_cpp534 16     "%0WDFKEY %10!p! WDFMEMORY object create failed, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryQueryMemory
{
Key, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxRegistryAPI_cpp497 15     "%0WDFKEY %10!p! KEY_VALUE_PARTIAL_INFORMATION allocation failed, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfRegistryQueryMemory
{
Key, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
d2385d11-cefa-b45d-4d08-494a75a5d62c     usb // SRC=FxUsbDevice.cpp MJ= MN=
#typev  FxUsbDevice_cpp2298 28     "%0WDFUSBDEVICE %10!p!, Request %11!p!, setting target failed, %12!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::FormatControlRequest
{
GetHandle(), ItemPtr -- 10
Request, ItemPtr -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxUsbDevice_cpp2288 27     "%0Control transfer buffer is limited to 0xFFFF bytes in size, %10!I64d! requested"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::FormatControlRequest
{
bufferSize, ItemLongLong -- 10
}
#typev  FxUsbDevice_cpp2237 26     "%0WDFUSBDEVICE %10!p!, Request %11!p!, setting target failed, %12!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::FormatStringRequest
{
GetHandle(), ItemPtr -- 10
Request, ItemPtr -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxUsbDevice_cpp1073 19     "%0Config descriptor indicated there were %10!d! interfaces, only found %11!d! interfaces"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::CreateInterfaces
{
m_NumInterfaces, ItemLong -- 10
iInterface, ItemLong -- 11
}
#typev  FxUsbDevice_cpp1002 17     "%0Config descriptor indicated there were %10!d! interfaces, but found at least one extra interfaces, limiting number of interfaced to number reported by the config descriptor"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::CreateInterfaces
{
m_NumInterfaces, ItemLong -- 10
}
#typev  FxUsbDevice_cpp1019 18     "%0Could not allocate memory for interface object #%10!d!, %11!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::CreateInterfaces
{
iInterface, ItemLong -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxUsbDevice_cpp959 16     "%0Could not allocate memory for %10!d! interfaces, %11!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::CreateInterfaces
{
m_ConfigDescriptor->bNumInterfaces, ItemLong -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxUsbDevice_cpp1643 24     "%0Could not allocate array of USBD_INTERFACE_LIST_ENTRY, %10!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::SelectConfigDescriptor
{
status, ItemNTSTATUS -- 10
}
#typev  FxUsbDevice_cpp1566 23     "%0WDFUSBDEVICE %10!p! interface pairs set (%11!d!) is not equal to actual # of interfaces (%12!d!) reported by the device, %13!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::SelectConfigMulti
{
GetObjectHandle(), ItemPtr -- 10
interfacePairsNum, ItemLong -- 11
m_NumInterfaces, ItemLong -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxUsbDevice_cpp1495 22     "%0WDFUSBDEVICE %10!p! could not retrieve AlternateSetting 0 for bInterfaceNumber %11!d!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::SelectConfigMulti
{
GetHandle(), ItemPtr -- 10
m_Interfaces[i]->m_InterfaceNumber, ItemLong -- 11
}
#typev  FxUsbDevice_cpp1402 21     "%0WDFUSBDEVICE %10!p! could not retrieve AlternateSetting 0 for bInterfaceNumber %11!d!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::SelectConfigSingle
{
GetHandle(), ItemPtr -- 10
m_Interfaces[0]->m_InterfaceNumber, ItemLong -- 11
}
#typev  FxUsbDevice_cpp1385 20     "%0WDFUSBDEVICE %10!p! cannot be auto configured for a single interface since there are %11!d! interfaces on the device, %12!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::SelectConfigSingle
{
GetHandle(), ItemPtr -- 10
m_NumInterfaces, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxUsbDevice_cpp764 14     "%0Could not allocate %10!d! bytes for config descriptor, %11!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::InitDevice
{
size, ItemLong -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxUsbDevice_cpp915 15     "%0Query Interface for bus returned error, %10!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::InitDevice
{
status, ItemNTSTATUS -- 10
}
#typev  FxUsbDevice_cpp737 13     "%0Could not retrieve config descriptor size, config.wTotalLength %10!d! < sizeof(config descriptor) (%11!d!), %12!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::InitDevice
{
config.wTotalLength, ItemLong -- 10
size, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxUsbDevice_cpp724 12     "%0Could not retrieve config descriptor size, zero bytes transferred,  %10!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::InitDevice
{
status, ItemNTSTATUS -- 10
}
#typev  FxUsbDevice_cpp713 11     "%0Could not retrieve config descriptor size, %10!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::InitDevice
{
status, ItemNTSTATUS -- 10
}
#typev  FxUsbDevice_cpp674 10     "%0Could not retrieve device descriptor, %10!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbDevice::InitDevice
{
status, ItemNTSTATUS -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
d33c8211-f805-f85e-f8ab-0606976c88d0     general // SRC=FxPkgGeneral.cpp MJ= MN=
#typev  FxPkgGeneral_cpp218 11     "%0WdfSynchronizationScopeDevice or WdfSynchronizationScopeInheritFromParent allowed only if the parent WDFDEVICE 0x%10!p!, ExecutionLevel is passive"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxPkgGeneral::ConfigureConstraints
{
m_Device->GetHandle(), ItemPtr -- 10
}
#typev  FxPkgGeneral_cpp183 10     "%0WdfSynchronizationScopeQueue is not allowed on FileObject"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxPkgGeneral::ConfigureConstraints
{
}
#typev  FxPkgGeneral_cpp382 14     "%0Another WDFQUEUE 0x%10!p! is already configured for auto dispatching create request, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgGeneral::ConfigureForwarding
{
m_DriverCreatedQueue->GetObjectHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxPkgGeneral_cpp368 13     "%0Must have EvtIoDefault registered to receive WdfRequestTypeCreate requests for WDFQUEUE 0x%10!p!, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgGeneral::ConfigureForwarding
{
TargetQueue->GetObjectHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxPkgGeneral_cpp671 21     "%0Couldn't forward request to the WDFQUEUE 0x%10!p!, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgGeneral::OnCreate
{
pFxIoQueue->GetObjectHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxPkgGeneral_cpp649 20     "%0WDFDEVICE 0x%10!p! cannot handle create request at or above dispatch-level, fail the Irp: 0x%11!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgGeneral::OnCreate
{
m_Device->GetObjectHandle(), ItemPtr -- 10
Irp, ItemPtr -- 11
}
#typev  FxPkgGeneral_cpp630 19     "%0Couldn't forward request to the WDFQUEUE 0x%10!p!, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgGeneral::OnCreate
{
pFxIoQueue->GetObjectHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxPkgGeneral_cpp585 18     "%0Could not create request for WDFDEVICE 0x%10!p!, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgGeneral::OnCreate
{
m_Device->GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxPkgGeneral_cpp538 17     "%0Could not create WDFFILEOBJECT for WDFDEVICE 0x%10!p!, failing IRP_MJ_CREATE %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgGeneral::OnCreate
{
m_Device->GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxPkgGeneral_cpp518 16     "%0Exclusive WDFDEVICE 0x%10!p!, only one open handle is allowed"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgGeneral::OnCreate
{
m_Device->GetHandle(), ItemPtr -- 10
}
#typev  FxPkgGeneral_cpp424 15     "%0!devobj 0x%10!p! %11!s! IRP 0x%12!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIO FUNC=FxPkgGeneral::Dispatch
{
m_Device->GetDeviceObject(), ItemPtr -- 10
irpStack->MajorFunction, ItemListByte(IRP_MJ_CREATE,IRP_MJ_CREATE_NAMED_PIPE,IRP_MJ_CLOSE,IRP_MJ_READ,IRP_MJ_WRITE,IRP_MJ_QUERY_INFORMATION,IRP_MJ_SET_INFORMATION,IRP_MJ_QUERY_EA,IRP_MJ_SET_EA,IRP_MJ_FLUSH_BUFFERS,IRP_MJ_QUERY_VOLUME_INFORMATION,IRP_MJ_SET_VOLUME_INFORMATION,IRP_MJ_DIRECTORY_CONTROL,IRP_MJ_FILE_SYSTEM_CONTROL,IRP_MJ_DEVICE_CONTROL,IRP_MJ_INTERNAL_DEVICE_CONTROL,IRP_MJ_SHUTDOWN,IRP_MJ_LOCK_CONTROL,IRP_MJ_CLEANUP,IRP_MJ_CREATE_MAILSLOT,IRP_MJ_QUERY_SECURITY,IRP_MJ_SET_SECURITY,IRP_MJ_POWER,IRP_MJ_SYSTEM_CONTROL,IRP_MJ_DEVICE_CHANGE,IRP_MJ_QUERY_QUOTA,IRP_MJ_SET_QUOTA,IRP_MJ_PNP) -- 11
Irp, ItemPtr -- 12
}
#typev  FxPkgGeneral_cpp330 12     "%0Unable to create an internal queue for creates for WDFDEVICE 0x%10!p!, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIO FUNC=FxPkgGeneral::PostCreateDeviceInitialize
{
m_Device->GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
e00d0259-1841-541c-81dd-62de3d983a88     pnp // SRC=PowerStateMachine.cpp MJ= MN=
#typev  PowerStateMachine_cpp3142 29     "%0EvtDeviceD0Entry !devobj %10!p!,  old state %11!s! failed, %12!s!"      //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerWakingNP
{
This->m_Device->GetDeviceObject(), ItemPtr -- 10
This->m_DevicePowerState, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 11
status, ItemNTSTATUS -- 12
}
#typev  PowerStateMachine_cpp3099 28     "%0EvtDeviceD0Entry !devobj %10!p!,  old state %11!s! failed, %12!s!"      //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerWaking
{
This->m_Device->GetDeviceObject(), ItemPtr -- 10
This->m_DevicePowerState, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 11
status, ItemNTSTATUS -- 12
}
#typev  PowerStateMachine_cpp2217 19     "%0PowerReference on parent WDFDEVICE %10!p! for child WDFDEVICE %11!p! failed, %12!s!"      //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerStartingChild
{
This->m_Device->GetHandle(), ItemPtr -- 10
This->m_Device->m_ParentDevice->m_PkgPnp->m_Device->GetHandle(), ItemPtr -- 11
status, ItemNTSTATUS -- 12
}
#typev  PowerStateMachine_cpp1857 14     "%0EvtDeviceD0Entry !devobj %10!p!,  old state %11!s! failed, %12!s!"      //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerD0Starting
{
This->m_Device->GetDeviceObject(), ItemPtr -- 10
This->m_DevicePowerState, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 11
status, ItemNTSTATUS -- 12
}
#typev  PowerStateMachine_cpp4518 37     "%0EvtDeviceD0Exit !devobj %10!p! failed, %11!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerConnectInterruptFailed
{
m_Device->GetDeviceObject(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  PowerStateMachine_cpp4506 36     "%0Interrupt(s) disconnect on WDFDEVICE %10!p! failed, %11!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerConnectInterruptFailed
{
m_Device->GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  PowerStateMachine_cpp3644 35     "%0EvtDeviceD0ExitPreInterruptsDisabled !devobj %10!p! new state %11!s! failed, %12!s!"      //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerInitialDmaEnableFailed
{
This->m_Device->GetDeviceObject(), ItemPtr -- 10
WdfPowerDeviceD3Final, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 11
status, ItemNTSTATUS -- 12
}
#typev  PowerStateMachine_cpp3466 34     "%0EvtDeviceD0ExitPreInterruptsDisabled !devobj %10!p! new state %11!s! failed, %12!s!"      //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerWakingDmaEnableFailedNP
{
This->m_Device->GetDeviceObject(), ItemPtr -- 10
WdfPowerDeviceD3Final, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 11
status, ItemNTSTATUS -- 12
}
#typev  PowerStateMachine_cpp3423 33     "%0EvtDeviceD0ExitPreInterruptsDisabled !devobj %10!p! new state %11!s! failed, %12!s!"      //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerWakingDmaEnableFailed
{
This->m_Device->GetDeviceObject(), ItemPtr -- 10
WdfPowerDeviceD3Final, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 11
status, ItemNTSTATUS -- 12
}
#typev  PowerStateMachine_cpp3294 32     "%0Force disconnecting interups on !devobj %10!p!, WDFDEVICE %11!p!"      //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerWakingConnectInterruptFailedNP
{
This->m_Device->GetDeviceObject(), ItemPtr -- 10
This->m_Device->GetHandle(), ItemPtr -- 11
}
#typev  PowerStateMachine_cpp2376 20     "%0Force disconnecting interups on !devobj %10!p!, WDFDEVICE %11!p!"      //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerGotoDxNPFailed
{
This->m_Device->GetDeviceObject(), ItemPtr -- 10
This->m_Device->GetHandle(), ItemPtr -- 11
}
#typev  PowerStateMachine_cpp3236 31     "%0EvtDeviceD0EntryPostInterruptsEnabed !devobj %10!p!,  old state %11!s! failed, %12!s!"      //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerWakingConnectInterruptNP
{
This->m_Device->GetDeviceObject(), ItemPtr -- 10
This->m_DevicePowerState, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 11
status, ItemNTSTATUS -- 12
}
#typev  PowerStateMachine_cpp3189 30     "%0EvtDeviceD0EntryPostInterruptsEnabed !devobj %10!p!,  old state %11!s! failed, %12!s!"      //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerWakingConnectInterrupt
{
This->m_Device->GetDeviceObject(), ItemPtr -- 10
This->m_DevicePowerState, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 11
status, ItemNTSTATUS -- 12
}
#typev  PowerStateMachine_cpp1908 15     "%0EvtDeviceD0EntryPostInterruptsEnabed !devobj %10!p!,  old state %11!s! failed, %12!s!"      //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerD0StartingConnectInterrupt
{
This->m_Device->GetDeviceObject(), ItemPtr -- 10
This->m_DevicePowerState, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 11
status, ItemNTSTATUS -- 12
}
#typev  PowerStateMachine_cpp1303 13     "%0!devobj 0x%10!p! entering Power State %11!s! from %12!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerEnterNewState
{
m_Device->GetDeviceObject(), ItemPtr -- 10
newState, ItemEnum(_WDF_DEVICE_POWER_STATE) -- 11
currentState, ItemEnum(_WDF_DEVICE_POWER_STATE) -- 12
}
#typev  PowerStateMachine_cpp2660 25     "%0EvtDeviceD0Exit !devobj %10!p!,  new state %11!s! failed, %12!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerGotoDxIoStoppedNP
{
m_Device->GetDeviceObject(), ItemPtr -- 10
state, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 11
status, ItemNTSTATUS -- 12
}
#typev  PowerStateMachine_cpp2633 24     "%0EvtDeviceD0ExitPreInterruptsDisabled !devobj %10!p!,  new state %11!s! failed, %12!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerGotoDxIoStoppedNP
{
m_Device->GetDeviceObject(), ItemPtr -- 10
state, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 11
status, ItemNTSTATUS -- 12
}
#typev  PowerStateMachine_cpp2524 23     "%0EvtDeviceD0Exit !devobj %10!p!,  new state %11!s! failed, %12!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerGotoDxIoStopped
{
m_Device->GetDeviceObject(), ItemPtr -- 10
state, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 11
status, ItemNTSTATUS -- 12
}
#typev  PowerStateMachine_cpp2498 22     "%0EvtDeviceD0ExitPreInterruptsDisabled !devobj %10!p!,  new state %11!s! failed, %12!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerGotoDxIoStopped
{
m_Device->GetDeviceObject(), ItemPtr -- 10
state, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 11
status, ItemNTSTATUS -- 12
}
#typev  PowerStateMachine_cpp1227 12     "%0!devobj 0x%10!p! current state %11!s! event %12!s! is not a known dropped event, known dropped events are %13!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerProcessEventInner
{
m_Device->GetDeviceObject(), ItemPtr -- 10
m_Device->GetDevicePowerState(), ItemEnum(_WDF_DEVICE_POWER_STATE) -- 11
event, ItemEnum(FxPowerEvent) -- 12
entry->StateInfo.Bits.KnownDroppedEvents, ItemEnum(FxPowerEvent) -- 13
}
#typev  PowerStateMachine_cpp1214 11     "%0!devobj 0x%10!p! current power state %11!s! dropping event %12!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerProcessEventInner
{
m_Device->GetDeviceObject(), ItemPtr -- 10
m_Device->GetDevicePowerState(), ItemEnum(_WDF_DEVICE_POWER_STATE) -- 11
event, ItemEnum(FxPowerEvent) -- 12
}
#typev  PowerStateMachine_cpp1039 10     "%0!devobj 0x%10!p! current pwr pol state %11!s! dropping event %12!s! because of a closed queue"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerProcessEvent
{
m_Device->GetDeviceObject(), ItemPtr -- 10
m_Device->GetDevicePowerState(), ItemEnum(_WDF_DEVICE_POWER_STATE) -- 11
Event, ItemEnum(FxPowerEvent) -- 12
}
#typev  PowerStateMachine_cpp2941 27     "%0EvtDeviceSelfManagedIoRestart failed - %10!s!"      //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerStartSelfManagedIoNP
{
status, ItemNTSTATUS -- 10
}
#typev  PowerStateMachine_cpp2875 26     "%0EvtDeviceSelfManagedIoRestart failed - %10!s!"      //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerStartSelfManagedIo
{
status, ItemNTSTATUS -- 10
}
#typev  PowerStateMachine_cpp2415 21     "%0EvtDeviceSelfManagedIoStop failed %10!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerGotoDx
{
status, ItemNTSTATUS -- 10
}
#typev  PowerStateMachine_cpp2138 18     "%0EvtDeviceD0Exit !devobj %10!p!,  new state %11!s! failed, %12!s!"      //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerGotoD3Stopped
{
This->m_Device->GetDeviceObject(), ItemPtr -- 10
WdfPowerDeviceD3Final, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 11
status, ItemNTSTATUS -- 12
}
#typev  PowerStateMachine_cpp2111 17     "%0EvtDeviceD0ExitPreInterruptsDisabled !devobj %10!p!,  new state %11!s! failed, %12!s!"      //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerGotoD3Stopped
{
This->m_Device->GetDeviceObject(), ItemPtr -- 10
WdfPowerDeviceD3Final, ItemEnum(_WDF_POWER_DEVICE_STATE) -- 11
status, ItemNTSTATUS -- 12
}
#typev  PowerStateMachine_cpp2087 16     "%0EvtDeviceSelfManagedIoStop failed %10!s!"      //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerGotoD3Stopped
{
status, ItemNTSTATUS -- 10
}
#enumv _WDF_POWER_DEVICE_STATE
{
WdfPowerDeviceInvalid,0x0
WdfPowerDeviceD0,0x1
WdfPowerDeviceD1,0x2
WdfPowerDeviceD2,0x3
WdfPowerDeviceD3,0x4
WdfPowerDeviceD3Final,0x5
WdfPowerDevicePrepareForHibernation,0x6
WdfPowerDeviceMaximum,0x7
}
#enumv _WDF_DEVICE_POWER_STATE
{
WdfDevStatePowerInvalid,0x0
WdfDevStatePowerObjectCreated,0x300
WdfDevStatePowerCheckDeviceType,0x301
WdfDevStatePowerCheckDeviceTypeNP,0x8302
WdfDevStatePowerCheckParentState,0x303
WdfDevStatePowerCheckParentStateNP,0x8304
WdfDevStatePowerEnablingWakeAtBus,0x305
WdfDevStatePowerEnablingWakeAtBusNP,0x8306
WdfDevStatePowerD0,0x307
WdfDevStatePowerD0NP,0x8308
WdfDevStatePowerD0BusWakeOwner,0x309
WdfDevStatePowerD0BusWakeOwnerNP,0x830A
WdfDevStatePowerD0ArmedForWake,0x30B
WdfDevStatePowerD0ArmedForWakeNP,0x830C
WdfDevStatePowerD0DisarmingWakeAtBus,0x30D
WdfDevStatePowerD0DisarmingWakeAtBusNP,0x830E
WdfDevStatePowerD0Starting,0x30F
WdfDevStatePowerD0StartingConnectInterrupt,0x310
WdfDevStatePowerD0StartingDmaEnable,0x311
WdfDevStatePowerD0StartingStartSelfManagedIo,0x312
WdfDevStatePowerDecideD0State,0x313
WdfDevStatePowerGotoD3Stopped,0x314
WdfDevStatePowerStopped,0x315
WdfDevStatePowerStartingCheckDeviceType,0x316
WdfDevStatePowerStartingChild,0x317
WdfDevStatePowerDxDisablingWakeAtBus,0x318
WdfDevStatePowerDxDisablingWakeAtBusNP,0x8319
WdfDevStatePowerGotoDx,0x31A
WdfDevStatePowerGotoDxNP,0x831B
WdfDevStatePowerGotoDxIoStopped,0x31C
WdfDevStatePowerGotoDxIoStoppedNP,0x831D
WdfDevStatePowerGotoDxNPFailed,0x831E
WdfDevStatePowerDx,0x31F
WdfDevStatePowerDxNP,0x8320
WdfDevStatePowerGotoDxArmedForWake,0x321
WdfDevStatePowerGotoDxArmedForWakeNP,0x8322
WdfDevStatePowerGotoDxIoStoppedArmedForWake,0x323
WdfDevStatePowerGotoDxIoStoppedArmedForWakeNP,0x8324
WdfDevStatePowerDxArmedForWake,0x325
WdfDevStatePowerDxArmedForWakeNP,0x8326
WdfDevStatePowerCheckParentStateArmedForWake,0x327
WdfDevStatePowerCheckParentStateArmedForWakeNP,0x8328
WdfDevStatePowerWaitForParentArmedForWake,0x329
WdfDevStatePowerWaitForParentArmedForWakeNP,0x832A
WdfDevStatePowerStartSelfManagedIo,0x32B
WdfDevStatePowerStartSelfManagedIoNP,0x832C
WdfDevStatePowerStartSelfManagedIoFailed,0x32D
WdfDevStatePowerStartSelfManagedIoFailedNP,0x832E
WdfDevStatePowerWaitForParent,0x32F
WdfDevStatePowerWaitForParentNP,0x8330
WdfDevStatePowerWakePending,0x331
WdfDevStatePowerWakePendingNP,0x8332
WdfDevStatePowerWaking,0x333
WdfDevStatePowerWakingNP,0x8334
WdfDevStatePowerWakingConnectInterrupt,0x335
WdfDevStatePowerWakingConnectInterruptNP,0x8336
WdfDevStatePowerWakingConnectInterruptFailed,0x337
WdfDevStatePowerWakingConnectInterruptFailedNP,0x8338
WdfDevStatePowerWakingDmaEnable,0x339
WdfDevStatePowerWakingDmaEnableNP,0x833A
WdfDevStatePowerWakingDmaEnableFailed,0x33B
WdfDevStatePowerWakingDmaEnableFailedNP,0x833C
WdfDevStatePowerReportPowerUpFailedDerefParent,0x33D
WdfDevStatePowerReportPowerUpFailed,0x33E
WdfDevStatePowerPowerFailedPowerDown,0x33F
WdfDevStatePowerReportPowerDownFailed,0x340
WdfDevStatePowerInitialConnectInterruptFailed,0x341
WdfDevStatePowerInitialDmaEnableFailed,0x342
WdfDevStatePowerInitialSelfManagedIoFailed,0x343
WdfDevStatePowerInitialPowerUpFailedDerefParent,0x344
WdfDevStatePowerInitialPowerUpFailed,0x345
WdfDevStatePowerDxStoppedDisarmWake,0x346
WdfDevStatePowerDxStoppedDisarmWakeNP,0x8347
WdfDevStatePowerGotoDxStoppedDisableInterruptNP,0x8348
WdfDevStatePowerGotoDxStopped,0x349
WdfDevStatePowerDxStopped,0x34A
WdfDevStatePowerGotoStopped,0x34B
WdfDevStatePowerStoppedCompleteDx,0x34C
WdfDevStatePowerDxStoppedDecideDxState,0x34D
WdfDevStatePowerDxStoppedArmForWake,0x34E
WdfDevStatePowerDxStoppedArmForWakeNP,0x834F
WdfDevStatePowerFinalPowerDownFailed,0x350
WdfDevStatePowerFinal,0x351
WdfDevStatePowerNull,0x352
}
#enumv FxPowerEvent
{
PowerEventInvalid,0x0
PowerD0,0x1
PowerDx,0x2
PowerWakeArrival,0x4
PowerWakeSucceeded,0x8
PowerWakeFailed,0x10
PowerWakeCanceled,0x20
PowerImplicitD0,0x40
PowerImplicitD3,0x80
PowerParentToD0,0x100
PowerMarkPageable,0x200
PowerMarkNonpageable,0x400
PowerCompleteD0,0x800
PowerCompleteDx,0x1000
PowerEventMaximum,0xFF
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
e20c8079-3bff-5c15-fc03-7796b304f918     core // SRC=FxCallbackSpinLock.hpp MJ= MN=
#typev  FxCallbackSpinLock_hpp98 10     "%0Recursive Acquire of callback lock! 0x%10!p!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_FATAL FLAGS=TRACINGDEVICE FUNC=FxCallbackSpinLock::Lock
{
this, ItemPtr -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
e45a3583-2c5e-13c0-c57b-e468345d8313     core // SRC=FxPoolInlines.hpp MJ= MN=
#typev  FxPoolInlines_hpp28 10     "%0Size overflow, could not add pool header, %10!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxLookasideList::InitializeLookaside
{
status, ItemNTSTATUS -- 10
}
#typev  FxPoolInlines_hpp39 11     "%0Size overflow, could not add pool tracker, %10!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxLookasideList::InitializeLookaside
{
status, ItemNTSTATUS -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxPoolInlines_hpp28 10     "%0Size overflow, could not add pool header, %10!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxPagedLookasideListFromPool::Initialize
{
status, ItemNTSTATUS -- 10
}
#typev  FxPoolInlines_hpp39 11     "%0Size overflow, could not add pool tracker, %10!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxPagedLookasideListFromPool::Initialize
{
status, ItemNTSTATUS -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxPoolInlines_hpp28 10     "%0Size overflow, could not add pool header, %10!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxDevice::Initialize
{
status, ItemNTSTATUS -- 10
}
#typev  FxPoolInlines_hpp39 11     "%0Size overflow, could not add pool tracker, %10!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxDevice::Initialize
{
status, ItemNTSTATUS -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
e768dc9b-09d7-bb8d-3962-88ce9cad8f3f     pnp // SRC=PdoPower.cpp MJ= MN=
#typev  PdoPower_cpp164 10     "%0Received wait wake power irp %10!p! on device %11!p!, but the irp was not requested by the device (the power policy owner)"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPdo::DispatchDeviceSetPower
{
Irp->GetIrp(), ItemPtr -- 10
m_Device->GetDeviceObject(), ItemPtr -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
e7e55755-c394-2386-e908-cb53fb11d1db     core // SRC=FxUserObjectApi.cpp MJ= MN=
#typev  FxUserObjectApi_cpp124 12     "%0Created UserObject Handle 0x%10!p!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGUSEROBJECT FUNC=imp_WdfObjectCreate
{
pUserObject->GetObjectHandle(), ItemPtr -- 10
}
#typev  FxUserObjectApi_cpp118 11     "%0FxObject::Commit failed %10!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfObjectCreate
{
status, ItemNTSTATUS -- 10
}
#typev  FxUserObjectApi_cpp111 10     "%0Memory allocation failed"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfObjectCreate
{
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
e84b66a6-fc35-8cf1-3ad9-569326e99511     usb // SRC=FxUsbPipe.cpp MJ= MN=
#typev  FxUsbPipe_cpp1004 18     "%0WDFUSBPIPE %10!p! converting stop action %11!s! to %12!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxUsbPipe::GotoStopState
{
GetHandle(), ItemPtr -- 10
Action, ItemEnum(_WDF_IO_TARGET_SENT_IO_ACTION) -- 11
WdfIoTargetCancelSentIo, ItemEnum(_WDF_IO_TARGET_SENT_IO_ACTION) -- 12
}
#typev  FxUsbPipe_cpp1467 32     "%0Pipe %10!p!, Request %11!p!, setting target failed, status %12!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbPipe::FormatResetRequest
{
this, ItemPtr -- 10
Request, ItemPtr -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxUsbPipe_cpp1429 31     "%0Pipe %10!p!, Request %11!p!, setting target failed, status %12!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbPipe::FormatAbortRequest
{
this, ItemPtr -- 10
Request, ItemPtr -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxUsbPipe_cpp1364 30     "%0Pipe %10!p!, Request %11!p!, setting target failed, status %12!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbPipe::FormatTransferRequest
{
this, ItemPtr -- 10
Request, ItemPtr -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxUsbPipe_cpp1354 29     "%0Pipe %10!p!, sending OUT transaction on an IN endpoint"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbPipe::FormatTransferRequest
{
this, ItemPtr -- 10
}
#typev  FxUsbPipe_cpp1340 28     "%0Pipe %10!p!, sending IN transaction on a OUT endpoint"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbPipe::FormatTransferRequest
{
this, ItemPtr -- 10
}
#typev  FxUsbPipe_cpp1328 27     "%0WDFUSBPIPE %10!p!, buffer size truncated, %11!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbPipe::FormatTransferRequest
{
GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxUsbPipe_cpp1317 26     "%0WDFUSBPIPE %10!p! not the right type, %11!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbPipe::FormatTransferRequest
{
GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxUsbPipe_cpp1220 23     "%0WDFUSBPIPE %10!p!, WDFREQUEST %11!p!, WDFMEMORY %12!p!, %13!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxUsbPipe::_FormatTransfer
{
Pipe, ItemPtr -- 10
Request, ItemPtr -- 11
TransferMemory, ItemPtr -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxUsbPipe_cpp1058 21     "%0WDFUSBPIPE %10!p!, waiting for all i/o to complete"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxUsbPipe::WaitForSentIoToComplete
{
GetHandle(), ItemPtr -- 10
}
#typev  FxUsbPipe_cpp1044 20     "%0WDFUSBPIPE %10!p!, cancelling for continuous reader (max of %11!d!)"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxUsbPipe::WaitForSentIoToComplete
{
GetHandle(), ItemPtr -- 10
m_Reader->m_NumReaders, ItemLong -- 11
}
#typev  FxUsbPipe_cpp1034 19     "%0WDFUSBPIPE %10!p!, waiting for continuous reader work item to complete"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxUsbPipe::WaitForSentIoToComplete
{
GetHandle(), ItemPtr -- 10
}
#typev  FxUsbPipe_cpp1293 25     "%0WDFUSBPIPE %10!p!, %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxUsbPipe::_SendTransfer
{
Pipe, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxUsbPipe_cpp1277 24     "%0WDFUSBPIPE %10!p!, WDFREQUEST %11!p! being submitted"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxUsbPipe::_SendTransfer
{
Pipe, ItemPtr -- 10
request.m_TrueRequest->GetTraceObjectHandle(), ItemPtr -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxUsbPipe_cpp307 13     "%0WDFUSBPIPE %10!p! continuous reader queueing work item to recover from failed allocation"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxUsbPipeContinuousReader::ResubmitRepeater
{
m_Pipe->GetHandle(), ItemPtr -- 10
}
#typev  FxUsbPipe_cpp298 12     "%0WDFUSBPIPE %10!p! continuous reader, buffer alloc failed, but not in started state"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxUsbPipeContinuousReader::ResubmitRepeater
{
m_Pipe->GetHandle(), ItemPtr -- 10
}
#typev  FxUsbPipe_cpp283 11     "%0WDFUSBPIPE %10!p! continuous reader, buffer alloc failed, but there are %11!d! readers left out of a max of %12!d!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxUsbPipeContinuousReader::ResubmitRepeater
{
m_Pipe->GetHandle(), ItemPtr -- 10
m_NumReaders - m_NumFailedReaders, ItemLong -- 11
m_NumReaders, ItemLong -- 12
}
#typev  FxUsbPipe_cpp258 10     "%0WDFUSBPIPE %10!p! continuous reader, format failed, %11!s!, repeater %12!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxUsbPipeContinuousReader::ResubmitRepeater
{
m_Pipe->GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
Repeater, ItemPtr -- 12
}
#typev  FxUsbPipe_cpp425 17     "%0WDFUSBPIPE %10!p! continuous reader FxRequest %11!p! PIRP %12!p! canceled"      //   GLOBALS=pPipe->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxUsbPipeContinuousReader::_FxUsbPipeRequestComplete
{
pPipe->GetHandle(), ItemPtr -- 10
pRepeater->Request, ItemPtr -- 11
pRepeater->RequestIrp, ItemPtr -- 12
}
#typev  FxUsbPipe_cpp404 16     "%0WDFUSBPIPE %10!p! continuous reader queueing work item to recover from failed request"      //   GLOBALS=pPipe->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxUsbPipeContinuousReader::_FxUsbPipeRequestComplete
{
pPipe->GetHandle(), ItemPtr -- 10
}
#typev  FxUsbPipe_cpp389 15     "%0WDFUSBPIPE %10!p! continuous reader not queueing work item,WorkItemQueued = %11!d!, target state %12!s!"      //   GLOBALS=pPipe->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxUsbPipeContinuousReader::_FxUsbPipeRequestComplete
{
pPipe->GetHandle(), ItemPtr -- 10
pThis->m_WorkItemQueued, ItemLong -- 11
pPipe->m_State, ItemEnum(_WDF_IO_TARGET_STATE) -- 12
}
#typev  FxUsbPipe_cpp373 14     "%0WDFUSBPIPE %10!p! continuous reader FxRequest %11!p! PIRP %12!p! returned with %13!s!"      //   GLOBALS=pPipe->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGIOTARGET FUNC=FxUsbPipeContinuousReader::_FxUsbPipeRequestComplete
{
pPipe->GetHandle(), ItemPtr -- 10
pRepeater->Request, ItemPtr -- 11
pRepeater->RequestIrp, ItemPtr -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxUsbPipe_cpp1083 22     "%0Continuous reader already initialized on WDFUSBPIPE %10!p! %11!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxUsbPipe::InitContinuousReader
{
GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#enumv _WDF_IO_TARGET_SENT_IO_ACTION
{
WdfIoTargetSentIoUndefined,0x0
WdfIoTargetCancelSentIo,0x1
WdfIoTargetWaitForSentIoToComplete,0x2
WdfIoTargetLeaveSentIoPending,0x3
}
#enumv _WDF_IO_TARGET_STATE
{
WdfIoTargetStateUndefined,0x0
WdfIoTargetStarted,0x1
WdfIoTargetStopped,0x2
WdfIoTargetClosedForQueryRemove,0x3
WdfIoTargetClosed,0x4
WdfIoTargetDeleted,0x5
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
e92b177e-5676-ed27-7aa2-6316ed278c5e     general // SRC=FxIoTargetAPI.cpp MJ= MN=
#typev  FxIoTargetAPI_cpp764 30     "%0exit WDFIOTARGET 0x%10!p!, WDM file handle 0x%11!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetWdmGetTargetFileHandle
{
IoTarget, ItemPtr -- 10
handle, ItemPtr -- 11
}
#typev  FxIoTargetAPI_cpp754 29     "%0enter WDFIOTARGET 0x%10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetWdmGetTargetFileHandle
{
IoTarget, ItemPtr -- 10
}
#typev  FxIoTargetAPI_cpp718 28     "%0exit WDFIOTARGET 0x%10!p!, WDM FileObj 0x%11!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetWdmGetTargetFileObject
{
IoTarget, ItemPtr -- 10
pFile, ItemPtr -- 11
}
#typev  FxIoTargetAPI_cpp708 27     "%0enter WDFIOTARGET 0x%10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetWdmGetTargetFileObject
{
IoTarget, ItemPtr -- 10
}
#typev  FxIoTargetAPI_cpp674 26     "%0exit WDFIOTARGET 0x%10!p!, WDM PDO 0x%11!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetWdmGetTargetPhysicalDevice
{
IoTarget, ItemPtr -- 10
pPdo, ItemPtr -- 11
}
#typev  FxIoTargetAPI_cpp664 25     "%0enter WDFIOTARGET 0x%10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetWdmGetTargetPhysicalDevice
{
IoTarget, ItemPtr -- 10
}
#typev  FxIoTargetAPI_cpp629 24     "%0exit WDFIOTARGET 0x%10!p!, WDM DevObj 0x%11!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetWdmGetTargetDeviceObject
{
IoTarget, ItemPtr -- 10
pDevice, ItemPtr -- 11
}
#typev  FxIoTargetAPI_cpp619 23     "%0enter WDFIOTARGET 0x%10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetWdmGetTargetDeviceObject
{
IoTarget, ItemPtr -- 10
}
#typev  FxIoTargetAPI_cpp209 13     "%0OpenParams %10!p! TargetFileObject is NULL but a state callback (query remove %11!p!, remove canceled %12!p!, remove complete %13!p!) was specified, %14!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetValidateOpenParams
{
OpenParams, ItemPtr -- 10
OpenParams->EvtIoTargetQueryRemove, ItemPtr -- 11
OpenParams->EvtIoTargetRemoveCanceled, ItemPtr -- 12
OpenParams->EvtIoTargetRemoveComplete, ItemPtr -- 13
status, ItemNTSTATUS -- 14
}
#typev  FxIoTargetAPI_cpp196 12     "%0Expected non NULL TargetDeviceObject in OpenParams, %10!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetValidateOpenParams
{
status, ItemNTSTATUS -- 10
}
#typev  FxIoTargetAPI_cpp227 14     "%0Expected valid OpenParams TargetDeviceName string, %10!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetValidateOpenParams
{
status, ItemNTSTATUS -- 10
}
#typev  FxIoTargetAPI_cpp240 15     "%0OpenParams Type (%10!d!) incorrect, %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetValidateOpenParams
{
OpenParams->Type, ItemLong -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxIoTargetAPI_cpp182 11     "%0OpenParams size (%10!d!) incorrect, expected %11!d!, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetValidateOpenParams
{
OpenParams->Size, ItemLong -- 10
sizeof(WDF_IO_TARGET_OPEN_PARAMS), ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxIoTargetAPI_cpp1924 60     "%0exit WDFIOTARGET 0x%10!p!, Property %11!d!, %12!s!"      //   GLOBALS=pGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetQueryTargetProperty
{
IoTarget, ItemPtr -- 10
DeviceProperty, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxIoTargetAPI_cpp1911 59     "%0WDFIOTARGET 0x%10!p! has no PDO (not opened yet?), %11!s!"      //   GLOBALS=pGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetQueryTargetProperty
{
IoTarget, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxIoTargetAPI_cpp103 10     "%0Action %10!d! undefined or out of range"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetStop
{
Action, ItemLong -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxIoTargetAPI_cpp511 22     "%0exit WDFIOTARGET 0x%10!p!, WDFDEVICE 0x%11!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetGetDevice
{
IoTarget, ItemPtr -- 10
device, ItemPtr -- 11
}
#typev  FxIoTargetAPI_cpp501 21     "%0enter WDFIOTARGET 0x%10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetGetDevice
{
IoTarget, ItemPtr -- 10
}
#typev  FxIoTargetAPI_cpp1822 57     "%0Invalid OtherArg%10!d! memory offsets, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetFormatRequestForInternalIoctlOthers
{
i+1, ItemLong -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxIoTargetAPI_cpp1838 58     "%0Exit: WDFIOTARGET %10!p!, WDFREQUEST %11!p!, IOCTL 0x%12!x!, Arg Handles %13!p! %14!p! %15!p!, status %16!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetFormatRequestForInternalIoctlOthers
{
IoTarget, ItemPtr -- 10
Request, ItemPtr -- 11
Ioctl, ItemLong -- 12
OtherArg1, ItemPtr -- 13
OtherArg2, ItemPtr -- 14
OtherArg4, ItemPtr -- 15
status, ItemNTSTATUS -- 16
}
#typev  FxIoTargetAPI_cpp1786 56     "%0Enter: WDFIOTARGET 0x%10!p!, WDFREQUEST 0x%11!p!, IOCTL 0x%12!x!, WDFMEMORY 1 0x%13!p!, 2 0x%14!p!, 3 0x%15!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetFormatRequestForInternalIoctlOthers
{
IoTarget, ItemPtr -- 10
Request, ItemPtr -- 11
Ioctl, ItemLong -- 12
OtherArg1, ItemPtr -- 13
OtherArg2, ItemPtr -- 14
OtherArg4, ItemPtr -- 15
}
#typev  FxIoTargetAPI_cpp1408 48     "%0Exit WDFIOTARGET 0x%10!p!, WDFREQUEST 0x%11!p!, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetFormatIoctl
{
IoTarget, ItemPtr -- 10
Request, ItemPtr -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxIoTargetAPI_cpp1358 47     "%0Invalid output memory offsets, %10!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetFormatIoctl
{
status, ItemNTSTATUS -- 10
}
#typev  FxIoTargetAPI_cpp1337 46     "%0Invalid input memory offsets, %10!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetFormatIoctl
{
status, ItemNTSTATUS -- 10
}
#typev  FxIoTargetAPI_cpp1313 45     "%0enter: WDFIOTARGET 0x%10!p!, WDFREQUEST 0x%11!p!, IOCTL 0x%12!x!, internal %13!d!, input WDFMEMORY 0x%14!p!, output WDFMEMORY 0x%15!p!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetFormatIoctl
{
IoTarget, ItemPtr -- 10
Request, ItemPtr -- 11
Ioctl, ItemLong -- 12
Internal, ItemLong -- 13
InputBuffer, ItemPtr -- 14
OutputBuffer, ItemPtr -- 15
}
#typev  FxIoTargetAPI_cpp993 38     "%0exit WDFIOTARGET 0x%10!p!, WDFREQUEST 0x%11!p!, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetFormatIo
{
IoTarget, ItemPtr -- 10
Request, ItemPtr -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxIoTargetAPI_cpp962 37     "%0invalid memory offsets, %10!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetFormatIo
{
status, ItemNTSTATUS -- 10
}
#typev  FxIoTargetAPI_cpp939 36     "%0enter: WDFIOTARGET 0x%10!p!, WDFREQUEST 0x%11!p!, MJ code 0x%12!x!, WDFMEMORY 0x%13!p!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetFormatIo
{
IoTarget, ItemPtr -- 10
Request, ItemPtr -- 11
MajorCode, ItemLong -- 12
IoBuffer, ItemPtr -- 13
}
#typev  FxIoTargetAPI_cpp2017 62     "%0exit WDFIOTARGET 0x%10!p!, Property %11!d!, %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetAllocAndQueryTargetProperty
{
IoTarget, ItemPtr -- 10
DeviceProperty, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxIoTargetAPI_cpp1999 61     "%0WDFIOTARGET %10!p! has no PDO (not opened yet?), %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetAllocAndQueryTargetProperty
{
IoTarget, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxIoTargetAPI_cpp457 20     "%0enter WDFIOTARGET 0x%10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetClose
{
IoTarget, ItemPtr -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxIoTargetAPI_cpp413 19     "%0enter WDFIOTARGET 0x%10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetCloseForQueryRemove
{
IoTarget, ItemPtr -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxIoTargetAPI_cpp288 16     "%0WDFDEVICE 0x%10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetCreate
{
Device, ItemPtr -- 10
}
#typev  FxIoTargetAPI_cpp1705 55     "%0Could not format IOCTL 0x%10!x! request, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetSendInternalIoctlOthersSynchronously
{
Ioctl, ItemLong -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxIoTargetAPI_cpp1692 54     "%0WDFIOTARGET 0x%10!p!, WDFREQUEST 0x%11!p! being submitted"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetSendInternalIoctlOthersSynchronously
{
IoTarget, ItemPtr -- 10
request.m_TrueRequest->GetTraceObjectHandle(), ItemPtr -- 11
}
#typev  FxIoTargetAPI_cpp1677 53     "%0invalid OtherArg4 buffer descriptor 0x%10!p!, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetSendInternalIoctlOthersSynchronously
{
OtherArg4, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxIoTargetAPI_cpp1662 52     "%0invalid OtherArg2 buffer descriptor 0x%10!p!, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetSendInternalIoctlOthersSynchronously
{
OtherArg2, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxIoTargetAPI_cpp1647 51     "%0invalid OtherArg1 buffer descriptor 0x%10!p!, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetSendInternalIoctlOthersSynchronously
{
OtherArg1, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxIoTargetAPI_cpp1627 50     "%0Invalid options, %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetSendInternalIoctlOthersSynchronously
{
status, ItemNTSTATUS -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxIoTargetAPI_cpp1613 49     "%0enter:  WDFIOTARGET 0x%10!p!, WDFREQUEST 0x%11!p!, IOCTL 0x%12!x!, Args %13!p! %14!p! %15!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetSendInternalIoctlOthersSynchronously
{
IoTarget, ItemPtr -- 10
Request, ItemPtr -- 11
Ioctl, ItemLong -- 12
OtherArg1, ItemPtr -- 13
OtherArg2, ItemPtr -- 14
OtherArg4, ItemPtr -- 15
}
#typev  FxIoTargetAPI_cpp1242 44     "%0could not format IOCTL 0x%10!x! request, %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetSendIoctl
{
Ioctl, ItemLong -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxIoTargetAPI_cpp1229 43     "%0WDFIOTARGET 0x%10!p!, WDFREQUEST 0x%11!p! being submitted"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetSendIoctl
{
IoTarget, ItemPtr -- 10
request.m_TrueRequest->GetTraceObjectHandle(), ItemPtr -- 11
}
#typev  FxIoTargetAPI_cpp1210 42     "%0invalid output buffer descriptor 0x%10!p!, %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetSendIoctl
{
OutputBuffer, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxIoTargetAPI_cpp1196 41     "%0invalid input buffer descriptor 0x%10!p!, %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetSendIoctl
{
InputBuffer, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxIoTargetAPI_cpp1184 40     "%0invalid options, %10!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetSendIoctl
{
status, ItemNTSTATUS -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxIoTargetAPI_cpp1170 39     "%0enter:  WDFIOTARGET 0x%10!p!, WDFREQUEST 0x%11!p!, IOCTL 0x%12!x!, internal %13!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetSendIoctl
{
IoTarget, ItemPtr -- 10
Request, ItemPtr -- 11
Ioctl, ItemLong -- 12
Internal, ItemLong -- 13
}
#typev  FxIoTargetAPI_cpp884 35     "%0could not format MJ 0x%10!x! request, %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetSendIo
{
MajorCode, ItemLong -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxIoTargetAPI_cpp873 34     "%0WDFIOTARGET 0x%10!p!, WDFREQUEST 0x%11!p! being submitted"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetSendIo
{
IoTarget, ItemPtr -- 10
request.m_TrueRequest->GetTraceObjectHandle(), ItemPtr -- 11
}
#typev  FxIoTargetAPI_cpp851 33     "%0invalid input buffer descriptor 0x%10!p!, %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetSendIo
{
IoBuffer, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxIoTargetAPI_cpp839 32     "%0invalid options, %10!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=FxIoTargetSendIo
{
status, ItemNTSTATUS -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxIoTargetAPI_cpp825 31     "%0enter:  WDFIOTARGET 0x%10!p!, WDFREQUEST 0x%11!p!, MJ code 0x%12!x!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=FxIoTargetSendIo
{
IoTarget, ItemPtr -- 10
Request, ItemPtr -- 11
MajorCode, ItemLong -- 12
}
#typev  FxIoTargetAPI_cpp380 18     "%0exit WDFIOTARGET 0x%10!p!, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetOpen
{
IoTarget, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxIoTargetAPI_cpp355 17     "%0enter WDFIOTARGET 0x%10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfIoTargetOpen
{
IoTarget, ItemPtr -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
eb1b0c88-b058-5cf2-c6b3-3dadf5b8b375     base // SRC=FxDmaEnabler.cpp MJ= MN=
#typev  FxDmaEnabler_cpp549 20     "%0WDFDMAENABLER %10!p! AllocateCommonBuffer:  overflow when adding Length %11!I64d! + Alignment %12!I64d!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaEnabler::AllocateCommonBuffer
{
GetHandle(), ItemPtr -- 10
Length, ItemLongLong -- 11
m_CommonBufferAlignment, ItemLongLong -- 12
}
#typev  FxDmaEnabler_cpp557 21     "%0WDFDMAENABLER %10!p! AllocateCommonBuffer:  could cast value %11!I64d! to a ULONG"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaEnabler::AllocateCommonBuffer
{
GetHandle(), ItemPtr -- 10
tmp, ItemLongLong -- 11
}
#typev  FxDmaEnabler_cpp517 19     "%0WDFDMAENABLER %10!p!: PowerDown: %11!s! failed %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaEnabler::PowerDown
{
GetHandle(), ItemPtr -- 10
tag, ItemListLong(FxEvtDmaEnablerInvalid,FxEvtDmaEnablerFill,FxEvtDmaEnablerFlush,FxEvtDmaEnablerEnable,FxEvtDmaEnablerDisable,FxEvtDmaEnablerSelfManagedIoStart,FxEvtDmaEnablerSelfManagedIoStop) -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxDmaEnabler_cpp476 18     "%0WDFDMAENABLER %10!p!: PowerDown notification"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDMA FUNC=FxDmaEnabler::PowerDown
{
GetHandle(), ItemPtr -- 10
}
#typev  FxDmaEnabler_cpp457 17     "%0WDFDMAENABLER %10!p!: PowerUp: %11!s! failed %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaEnabler::PowerUp
{
GetHandle(), ItemPtr -- 10
tag, ItemListLong(FxEvtDmaEnablerInvalid,FxEvtDmaEnablerFill,FxEvtDmaEnablerFlush,FxEvtDmaEnablerEnable,FxEvtDmaEnablerDisable,FxEvtDmaEnablerSelfManagedIoStart,FxEvtDmaEnablerSelfManagedIoStop) -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxDmaEnabler_cpp417 16     "%0WDFDMAENABLER %10!p!: PowerUp notification"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDMA FUNC=FxDmaEnabler::PowerUp
{
GetHandle(), ItemPtr -- 10
}
#typev  FxDmaEnabler_cpp367 15     "%0The maximum transfer lenght for WDFDMAENABLER %10!p! is reduced to %11!I64d! from %12!I64d! due to mapregisters limit"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDMA FUNC=FxDmaEnabler::InitializeResources
{
GetHandle(), ItemPtr -- 10
Config->MaximumLength, ItemLongLong -- 11
AdapterInfo->MaximumFragmentLength, ItemLongLong -- 12
}
#typev  FxDmaEnabler_cpp358 14     "%0WDFDMAENABLER %10!p!, profile %11!s! DmaAdapterObject %12!p!, MapRegisters %13!d!, MaximumFragmentLength %14!I64d!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDMA FUNC=FxDmaEnabler::InitializeResources
{
GetHandle(), ItemPtr -- 10
Config->Profile, ItemListLong(WdfDmaProfileInvalid,WdfDmaProfilePacket,WdfDmaProfileScatterGather,WdfDmaProfilePacket64,WdfDmaProfileScatterGather64,WdfDmaProfileScatterGatherDuplex,WdfDmaProfileScatterGather64Duplex) -- 11
AdapterInfo->AdapterObject, ItemPtr -- 12
AdapterInfo->NumberOfMapRegisters, ItemLong -- 13
AdapterInfo->MaximumFragmentLength, ItemLongLong -- 14
}
#typev  FxDmaEnabler_cpp343 13     "%0CalculateScatterGatherList failed for WDFDMAENABLER %10!p!, %11!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaEnabler::InitializeResources
{
GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxDmaEnabler_cpp323 12     "%0Unable to allocate DmaAdapter object for WDFDMAENABLER %10!p!, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaEnabler::InitializeResources
{
GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxDmaEnabler_cpp101 11     "%0Unable to allocate DmaEnablerList for WDFDEVICE %10!p!, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=FxDmaEnabler::Initialize
{
Device->GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxDmaEnabler_cpp68 10     "%0DMA Enabler %10!p!: FxDmaEnabler"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDMA FUNC=FxDmaEnabler::FxDmaEnabler
{
this, ItemPtr -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
f35a4fb5-0f3f-1421-844d-e8c63fe741a7     base // SRC=FxCommonBufferAPI.cpp MJ= MN=
#typev  FxCommonBufferAPI_cpp208 14     "%0Could not allocate memory for a WDFCOMMONBUFFER, %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfCommonBufferCreateWithConfig
{
status, ItemNTSTATUS -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxCommonBufferAPI_cpp181 13     "%0Length is 0, %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfCommonBufferCreateWithConfig
{
status, ItemNTSTATUS -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxCommonBufferAPI_cpp162 12     "%0WDF_COMMON_BUFFER_CONFIG Size 0x%10!x!, expected 0x%11!x!, %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfCommonBufferCreateWithConfig
{
Config->Size, ItemLong -- 10
sizeof(WDF_COMMON_BUFFER_CONFIG), ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxCommonBufferAPI_cpp100 11     "%0Could not allocate memory for a WDFCOMMONBUFFER, %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfCommonBufferCreate
{
status, ItemNTSTATUS -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxCommonBufferAPI_cpp73 10     "%0Length is 0, %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfCommonBufferCreate
{
status, ItemNTSTATUS -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
f610e0ff-e8ae-b140-741c-4ab01501840b     support // SRC=fxcollectionapi.cpp MJ= MN=
#typev  fxcollectionapi_cpp254 13     "%0WDFOBJECT %10!p! not in WDFCOLLECTION %11!p!, %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfCollectionRemove
{
Item, ItemPtr -- 10
Collection, ItemPtr -- 11
status, ItemNTSTATUS -- 12
}
#typev  fxcollectionapi_cpp197 12     "%0Index %10!d! is not valid in WDFCOLLECTION %11!p! (count is %12!d!), %13!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfCollectionRemoveItem
{
Index, ItemLong -- 10
Collection, ItemPtr -- 11
pCollection->Count(), ItemLong -- 12
status, ItemNTSTATUS -- 13
}
#typev  fxcollectionapi_cpp80 11     "%0Could not create collection object: STATUS_INSUFFICIENT_RESOURCES"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfCollectionCreate
{
}
#typev  fxcollectionapi_cpp72 10     "%0Could not create collection object: %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfCollectionCreate
{
status, ItemNTSTATUS -- 10
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
f6436422-1ebb-e05a-ba32-42024f97935e     usb // SRC=FxUsbPipeAPI.cpp MJ= MN=
#typev  FxUsbPipeAPI_cpp130 10     "%0WDFUSBPIPE %10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeSetNoMaximumPacketSizeCheck
{
Pipe, ItemPtr -- 10
}
#typev  FxUsbPipeAPI_cpp717 40     "%0Pipe %10!p!, Request %11!p!, Memory %12!p!, status %13!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeFormatRequestForUrb
{
Pipe, ItemPtr -- 10
Request, ItemPtr -- 11
UrbMemory, ItemPtr -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxUsbPipeAPI_cpp698 39     "%0UrbMemory %10!p! buffer size, %11!I64d!, smaller then _URB_HEADER, %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeFormatRequestForUrb
{
UrbMemory, ItemPtr -- 10
pMemory->GetBufferSize(), ItemLongLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxUsbPipeAPI_cpp667 38     "%0Pipe %10!p!, Request %11!p!, Memory %12!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeFormatRequestForUrb
{
Pipe, ItemPtr -- 10
Request, ItemPtr -- 11
UrbMemory, ItemPtr -- 12
}
#typev  FxUsbPipeAPI_cpp566 34     "%0Pipe %10!p!, Request %11!p! = 0x%12!x!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeFormatRequestForReset
{
Pipe, ItemPtr -- 10
Request, ItemPtr -- 11
status, ItemLong -- 12
}
#typev  FxUsbPipeAPI_cpp551 33     "%0Pipe %10!p!, Request %11!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeFormatRequestForReset
{
Pipe, ItemPtr -- 10
Request, ItemPtr -- 11
}
#typev  FxUsbPipeAPI_cpp466 28     "%0Pipe %10!p!, Request %11!p!, status %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeFormatRequestForAbort
{
Pipe, ItemPtr -- 10
Request, ItemPtr -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxUsbPipeAPI_cpp451 27     "%0Pipe %10!p!, Request %11!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeFormatRequestForAbort
{
Pipe, ItemPtr -- 10
Request, ItemPtr -- 11
}
#typev  FxUsbPipeAPI_cpp230 14     "%0WDFUSBPIPE %10!p!, WDFREQUEST %11!p!, WDFMEMORY %12!p!"      //   GLOBALS=GetFxDriverGlobals(DriverGlobals) LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeFormatRequestForRead
{
Pipe, ItemPtr -- 10
Request, ItemPtr -- 11
ReadMemory, ItemPtr -- 12
}
#typev  FxUsbPipeAPI_cpp179 12     "%0WDFUSBPIPE %10!p!, WDFREQUEST %11!p!, WDFMEMORY %12!p!"      //   GLOBALS=GetFxDriverGlobals(DriverGlobals) LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeFormatRequestForWrite
{
Pipe, ItemPtr -- 10
Request, ItemPtr -- 11
WriteMemory, ItemPtr -- 12
}
#typev  FxUsbPipeAPI_cpp634 37     "%0WDFUSBPIPE %10!p!, Urb %11!p!, %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeSendUrbSynchronously
{
Pipe, ItemPtr -- 10
Urb, ItemPtr -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxUsbPipeAPI_cpp626 36     "%0WDFUSBPIPE %10!p!, WDFREQUEST %11!p! being submitted"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeSendUrbSynchronously
{
Pipe, ItemPtr -- 10
request.m_TrueRequest->GetTraceObjectHandle(), ItemPtr -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxUsbPipeAPI_cpp598 35     "%0WDFUSBPIPE %10!p!, Urb %11!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeSendUrbSynchronously
{
Pipe, ItemPtr -- 10
Urb, ItemPtr -- 11
}
#typev  FxUsbPipeAPI_cpp526 32     "%0WDFUSBPIPE %10!p! reset, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeResetSynchronously
{
Pipe, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxUsbPipeAPI_cpp518 31     "%0WDFUSBPIPE %10!p!, WDFREQUEST %11!p! being submitted"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeResetSynchronously
{
Pipe, ItemPtr -- 10
request.m_TrueRequest->GetTraceObjectHandle(), ItemPtr -- 11
}
#typev  FxUsbPipeAPI_cpp505 30     "%0Invalid request options"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeResetSynchronously
{
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxUsbPipeAPI_cpp495 29     "%0WDFUSBPIPE %10!p! reset"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeResetSynchronously
{
Pipe, ItemPtr -- 10
}
#typev  FxUsbPipeAPI_cpp426 26     "%0WDFUSBPIPE %10!p!, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeAbortSynchronously
{
Pipe, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxUsbPipeAPI_cpp418 25     "%0WDFUSBPIPE %10!p!, WDFREQUEST %11!p! being submitted"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeAbortSynchronously
{
Pipe, ItemPtr -- 10
request.m_TrueRequest->GetTraceObjectHandle(), ItemPtr -- 11
}
#typev  FxUsbPipeAPI_cpp406 24     "%0Invalid request options"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeAbortSynchronously
{
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxUsbPipeAPI_cpp396 23     "%0Pipe %10!p!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeAbortSynchronously
{
Pipe, ItemPtr -- 10
}
#typev  FxUsbPipeAPI_cpp204 13     "%0WDFUSBPIPE %10!p!"      //   GLOBALS=GetFxDriverGlobals(DriverGlobals) LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeReadSynchronously
{
Pipe, ItemPtr -- 10
}
#typev  FxUsbPipeAPI_cpp154 11     "%0WDFUSBPIPE %10!p!"      //   GLOBALS=GetFxDriverGlobals(DriverGlobals) LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeWriteSynchronously
{
Pipe, ItemPtr -- 10
}
#typev  FxUsbPipeAPI_cpp297 18     "%0HeaderLength + TransferLength overflow %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeConfigContinuousReader
{
status, ItemNTSTATUS -- 10
}
#typev  FxUsbPipeAPI_cpp308 19     "%0HeaderLength + TransferLength + TrailerLength overflow %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeConfigContinuousReader
{
status, ItemNTSTATUS -- 10
}
#typev  FxUsbPipeAPI_cpp361 22     "%0TransferLength %10!I64d! not a valid transer length (not integral of max packet size %11!d!) %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeConfigContinuousReader
{
Config->TransferLength, ItemLongLong -- 10
pUsbPipe->GetMaxPacketSize(), ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxUsbPipeAPI_cpp351 21     "%0WDFUSBPIPE %10!p!, wrong direction for continuous reader, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeConfigContinuousReader
{
Pipe, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxUsbPipeAPI_cpp339 20     "%0WDFUSBPIPE %10!p! type %11!s!, only bulk or interrupt pipes can be configured for continous readers, %12!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeConfigContinuousReader
{
Pipe, ItemPtr -- 10
pUsbPipe->GetType(), ItemEnum(_WDF_USB_PIPE_TYPE) -- 11
status, ItemNTSTATUS -- 12
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  FxUsbPipeAPI_cpp287 17     "%0TransferLength of 0 not allowed %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeConfigContinuousReader
{
status, ItemNTSTATUS -- 10
}
#typev  FxUsbPipeAPI_cpp279 16     "%0NULL EvtUsbTargetPipeReadComplete not allowed %10!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeConfigContinuousReader
{
status, ItemNTSTATUS -- 10
}
#typev  FxUsbPipeAPI_cpp269 15     "%0Config %10!p! incorrect size %11!d!, expected %12!d! %13!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGIOTARGET FUNC=imp_WdfUsbTargetPipeConfigContinuousReader
{
Config, ItemPtr -- 10
Config->Size, ItemLong -- 11
sizeof(WDF_USB_CONTINUOUS_READER_CONFIG), ItemLong -- 12
status, ItemNTSTATUS -- 13
}
#enumv _WDF_USB_PIPE_TYPE
{
WdfUsbPipeTypeInvalid,0x0
WdfUsbPipeTypeControl,0x1
WdfUsbPipeTypeIsochronous,0x2
WdfUsbPipeTypeBulk,0x3
WdfUsbPipeTypeInterrupt,0x4
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
f6d56a33-687a-cd66-9bdf-a3302ad96359     pnp // SRC=PowerPolicyStateMachine.cpp MJ= MN=
#typev  PowerPolicyStateMachine_cpp5460 27     "%0Completing system power irp %10!p! (S%11!d!), %12!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicyCompleteSystemPowerIrp
{
m_PendingSystemPowerIrp, ItemPtr -- 10
irp.GetCurrentIrpStackLocation()->Parameters.Power.State.SystemState-1, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  PowerPolicyStateMachine_cpp5435 26     "%0Requesting wait wake irp for S%10!d! failed, %11!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicySendWaitWakeRequest
{
SystemState-1, ItemLong -- 10
status, ItemNTSTATUS -- 11
}
#typev  PowerPolicyStateMachine_cpp5423 25     "%0Requesting wait wake irp for S%10!d!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicySendWaitWakeRequest
{
SystemState-1, ItemLong -- 10
}
#typev  PowerPolicyStateMachine_cpp3769 22     "%0Could not allocate wake request for wake from S0, revert arming, %10!s!"      //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolTimerExpiredWakeCapableSendWake
{
status, ItemNTSTATUS -- 10
}
#typev  PowerPolicyStateMachine_cpp3545 21     "%0Attempting to send wait wake request for EvtDeviceArmWakeFromSx() failed, %10!s!"      //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolSleepingSendWake
{
status, ItemNTSTATUS -- 10
}
#typev  PowerPolicyStateMachine_cpp3145 20     "%0reverting arm for wake from Sx due to failure to allocate wait wake request or wait wake request completed immeidately.  Device will *NOT* be armed for wake from Sx"      //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolSleepingWakeRevertArmWakeNP
{
}
#typev  PowerPolicyStateMachine_cpp2978 18     "%0reverting arm for wake from Sx due to failure to allocate wait wake request or wait wake request completed immeidately.  Device will *NOT* be armed for wake from Sx"      //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolSleepingWakeRevertArmWake
{
}
#typev  PowerPolicyStateMachine_cpp2357 15     "%0!devobj 0x%10!p! entering power policy state %11!s! from %12!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicyEnterNewState
{
m_Device->GetDeviceObject(), ItemPtr -- 10
newState, ItemEnum(_WDF_DEVICE_POWER_POLICY_STATE) -- 11
currentState, ItemEnum(_WDF_DEVICE_POWER_POLICY_STATE) -- 12
}
#typev  PowerPolicyStateMachine_cpp2213 14     "%0!devobj 0x%10!p! current state %11!s!, policy event %12!s! is not a known dropped event, known dropped events are %13!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicyProcessEventInner
{
m_Device->GetDeviceObject(), ItemPtr -- 10
m_Device->GetDevicePowerPolicyState(), ItemEnum(_WDF_DEVICE_POWER_POLICY_STATE) -- 11
event, ItemEnum(FxPowerPolicyEvent) -- 12
entry->StateInfo.Bits.KnownDroppedEvents, ItemEnum(FxPowerPolicyEvent) -- 13
}
#typev  PowerPolicyStateMachine_cpp2203 13     "%0!devobj 0x%10!p! current pwr pol state %11!s! dropping event %12!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicyProcessEventInner
{
m_Device->GetDeviceObject(), ItemPtr -- 10
m_Device->GetDevicePowerPolicyState(), ItemEnum(_WDF_DEVICE_POWER_POLICY_STATE) -- 11
event, ItemEnum(FxPowerPolicyEvent) -- 12
}
#typev  PowerPolicyStateMachine_cpp1993 12     "%0!devobj 0x%10!p! current pwr pol state %11!s! dropping event %12!s! because of a closed queue"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicyProcessEvent
{
m_Device->GetDeviceObject(), ItemPtr -- 10
m_Device->GetDevicePowerPolicyState(), ItemEnum(_WDF_DEVICE_POWER_POLICY_STATE) -- 11
Event, ItemEnum(FxPowerPolicyEvent) -- 12
}
#typev  PowerPolicyStateMachine_cpp1690 11     "%0Leaving USB Selective Suspend Idle callback"      //   GLOBALS=pPkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxUsbIdleInfo::_UsbIdleCallback
{
}
#typev  PowerPolicyStateMachine_cpp1676 10     "%0Entering USB Selective Suspend Idle callback"      //   GLOBALS=pPkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxUsbIdleInfo::_UsbIdleCallback
{
}
#typev  PowerPolicyStateMachine_cpp5575 32     "%0Completion of WaitWake irp %10!p!"      //   GLOBALS=pThis->GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::_PowerPolicyWaitWakeCompletionRoutine
{
OriginalIrp, ItemPtr -- 10
}
#typev  PowerPolicyStateMachine_cpp5589 33     "%0Not completing WaitWake irp %10!p! in completion routine"      //   GLOBALS=pThis->GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::_PowerPolicyWaitWakeCompletionRoutine
{
OriginalIrp, ItemPtr -- 10
}
#typev  PowerPolicyStateMachine_cpp5554 31     "%0Completion of WaitWake irp %10!p!, %11!s!"      //   GLOBALS=pThis->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::_PowerPolicyWaitWakeCompletionRoutine
{
OriginalIrp, ItemPtr -- 10
OriginalIrp->IoStatus.Status, ItemNTSTATUS -- 11
}
#typev  PowerPolicyStateMachine_cpp3124 19     "%0WDFDEVICE %10!p! Failed to arm for wake from Sx, %11!s!"      //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolSleepingWakeWakeArrivedNP
{
This->m_Device->GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  PowerPolicyStateMachine_cpp2957 17     "%0WDFDEVICE %10!p! Failed to arm for wake from Sx, %11!s!"      //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolSleepingWakeWakeArrived
{
This->m_Device->GetHandle(), ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  PowerPolicyStateMachine_cpp5530 30     "%0No WaitWake irp to cancel"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicyCancelWaitWake
{
}
#typev  PowerPolicyStateMachine_cpp5511 29     "%0Cancel of irp %10!p! returned %11!d!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicyCancelWaitWake
{
wwIrp, ItemPtr -- 10
result, ItemLong -- 11
}
#typev  PowerPolicyStateMachine_cpp5506 28     "%0Successfully got WaitWake irp %10!p! for cancelling"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicyCancelWaitWake
{
wwIrp, ItemPtr -- 10
}
#typev  PowerPolicyStateMachine_cpp5400 24     "%0Requesting D%10!d! irp, %11!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicySendDevicePowerRequest
{
DeviceState-1, ItemLong -- 10
status, ItemNTSTATUS -- 11
}
#typev  PowerPolicyStateMachine_cpp5392 23     "%0Could not request D%10!d! irp for device %11!p! (WDFDEVICE %12!p!), %13!s!"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicySendDevicePowerRequest
{
DeviceState-1, ItemLong -- 10
m_Device->GetDeviceObject(), ItemPtr -- 11
m_Device->GetHandle(), ItemPtr -- 12
status, ItemNTSTATUS -- 13
}
#typev  PowerPolicyStateMachine_cpp2822 16     "%0Failed to allocate D0 request to disarm from wake from S0 to allow arm for wake from Sx, %10!s!"      //   GLOBALS=This->GetDriverGlobals() LEVEL=TRACE_LEVEL_WARNING FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolSystemSleepNeedWake
{
status, ItemNTSTATUS -- 10
}
#typev  PowerPolicyStateMachine_cpp5671 34     "%0!devobj 0x%10!p! not idling out because there are %11!d! children who are powered up"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxPkgPnp::PowerPolicyCanIdlePowerDown
{
m_Device->GetDeviceObject(), ItemPtr -- 10
m_PowerPolicyMachine.m_Owner->m_ChildrenPoweredOnCount, ItemLong -- 11
}
#enumv _WDF_DEVICE_POWER_POLICY_STATE
{
WdfDevStatePwrPolInvalid,0x0
WdfDevStatePwrPolObjectCreated,0x500
WdfDevStatePwrPolStarting,0x501
WdfDevStatePwrPolStartingSucceeded,0x502
WdfDevStatePwrPolStartingFailed,0x503
WdfDevStatePwrPolStartingDecideS0Wake,0x504
WdfDevStatePwrPolStartedIdleCapable,0x505
WdfDevStatePwrPolTimerExpiredNoWake,0x506
WdfDevStatePwrPolTimerExpiredNoWakeCompletePowerDown,0x507
WdfDevStatePwrPolWaitingUnarmed,0x508
WdfDevStatePwrPolWaitingUnarmedQueryIdle,0x509
WdfDevStatePwrPolS0NoWakePowerUp,0x50A
WdfDevStatePwrPolS0NoWakeCompletePowerUp,0x50B
WdfDevStatePwrPolSystemSleepFromDeviceWaitingUnarmed,0x50C
WdfDevStatePwrPolSystemSleepNeedWake,0x50D
WdfDevStatePwrPolSystemSleepNeedWakeCompletePowerUp,0x50E
WdfDevStatePwrPolSystemSleepPowerRequestFailed,0x50F
WdfDevStatePwrPolCheckPowerPageable,0x510
WdfDevStatePwrPolSleepingWakeWakeArrived,0x511
WdfDevStatePwrPolSleepingWakeRevertArmWake,0x512
WdfDevStatePwrPolSystemAsleepWakeArmed,0x513
WdfDevStatePwrPolSystemWakeDeviceWakeEnabled,0x514
WdfDevStatePwrPolSystemWakeDeviceWakeEnabledWakeCanceled,0x515
WdfDevStatePwrPolSystemWakeDeviceWakeDisarm,0x516
WdfDevStatePwrPolSystemWakeDeviceWakeTriggered,0x517
WdfDevStatePwrPolSystemWakeDeviceWakeTriggeredS0,0x518
WdfDevStatePwrPolSystemWakeDeviceWokeDisarm,0x519
WdfDevStatePwrPolSleepingWakeWakeArrivedNP,0x851A
WdfDevStatePwrPolSleepingWakeRevertArmWakeNP,0x851B
WdfDevStatePwrPolSleepingWakePowerDownFailed,0x51C
WdfDevStatePwrPolSleepingWakePowerDownFailedWakeCanceled,0x51D
WdfDevStatePwrPolSystemAsleepWakeArmedNP,0x851E
WdfDevStatePwrPolSystemWakeDeviceWakeEnabledNP,0x851F
WdfDevStatePwrPolSystemWakeDeviceWakeEnabledWakeCanceledNP,0x8520
WdfDevStatePwrPolSystemWakeDeviceWakeDisarmNP,0x8521
WdfDevStatePwrPolSystemWakeDeviceWakeTriggeredNP,0x8522
WdfDevStatePwrPolSystemWakeDeviceWakeTriggeredS0NP,0x8523
WdfDevStatePwrPolSystemWakeDeviceWokeDisarmNP,0x8524
WdfDevStatePwrPolSystemWakeDeviceWakeCompletePowerUp,0x525
WdfDevStatePwrPolSleeping,0x526
WdfDevStatePwrPolSleepingNoWakePowerDown,0x527
WdfDevStatePwrPolSleepingNoWakeCompletePowerDown,0x528
WdfDevStatePwrPolSleepingNoWakeDxRequestFailed,0x529
WdfDevStatePwrPolSleepingWakePowerDown,0x52A
WdfDevStatePwrPolSleepingSendWake,0x52B
WdfDevStatePwrPolSystemAsleepNoWake,0x52C
WdfDevStatePwrPolSystemWakeDeviceWakeDisabled,0x52D
WdfDevStatePwrPolSystemWakeDeviceToD0,0x52E
WdfDevStatePwrPolSystemWakeDeviceToD0CompletePowerUp,0x52F
WdfDevStatePwrPolSystemWakeQueryIdle,0x530
WdfDevStatePwrPolStartedWakeCapable,0x531
WdfDevStatePwrPolTimerExpiredDecideUsbSS,0x532
WdfDevStatePwrPolTimerExpiredWakeCapablePowerDown,0x533
WdfDevStatePwrPolTimerExpiredWakeCapableSendWake,0x534
WdfDevStatePwrPolTimerExpiredWakeCapableUsbSS,0x535
WdfDevStatePwrPolTimerExpiredWakeCapableWakeArrived,0x536
WdfDevStatePwrPolTimerExpiredWakeCapableCancelWake,0x537
WdfDevStatePwrPolTimerExpiredWakeCapableWakeCanceled,0x538
WdfDevStatePwrPolTimerExpiredWakeCapableCleanup,0x539
WdfDevStatePwrPolTimerExpiredWakeCapableDxAllocFailed,0x53A
WdfDevStatePwrPolTimerExpiredWakeCompletedPowerDown,0x53B
WdfDevStatePwrPolTimerExpiredWakeCompletedPowerUp,0x53C
WdfDevStatePwrPolWaitingArmedUsbSS,0x53D
WdfDevStatePwrPolWaitingArmed,0x53E
WdfDevStatePwrPolWaitingArmedQueryIdle,0x53F
WdfDevStatePwrPolIoPresentArmed,0x540
WdfDevStatePwrPolIoPresentArmedWakeCanceled,0x541
WdfDevStatePwrPolS0WakeDisarm,0x542
WdfDevStatePwrPolS0WakeCompletePowerUp,0x543
WdfDevStatePwrPolTimerExpiredWakeSucceeded,0x544
WdfDevStatePwrPolTimerExpiredWakeCompletedDisarm,0x545
WdfDevStatePwrPolTimerExpiredWakeCapableWakeSucceeded,0x546
WdfDevStatePwrPolTimerExpiredWakeCapableWakeFailed,0x547
WdfDevStatePwrPolWakeFailedUsbSS,0x548
WdfDevStatePwrPolTimerExpiredWakeCapablePowerDownFailedCancelWake,0x549
WdfDevStatePwrPolTimerExpiredWakeCapablePowerDownFailedWakeCanceled,0x54A
WdfDevStatePwrPolTimerExpiredWakeCapablePowerDownFailedUsbSS,0x54B
WdfDevStatePwrPolCancelingWakeForSystemSleep,0x54C
WdfDevStatePwrPolCancelingWakeForSystemSleepWakeCanceled,0x54D
WdfDevStatePwrPolDisarmingWakeForSystemSleepCompletePowerUp,0x54E
WdfDevStatePwrPolPowerUpForSystemSleepFailed,0x54F
WdfDevStatePwrPolWokeFromS0UsbSS,0x550
WdfDevStatePwrPolWokeFromS0,0x551
WdfDevStatePwrPolWokeFromS0NotifyDriver,0x552
WdfDevStatePwrPolStoppingResetDevice,0x553
WdfDevStatePwrPolStoppingResetDeviceCompletePowerUp,0x554
WdfDevStatePwrPolStoppingResetDeviceFailed,0x555
WdfDevStatePwrPolStoppingD0,0x556
WdfDevStatePwrPolStoppingD0Failed,0x557
WdfDevStatePwrPolStoppingDisarmWake,0x558
WdfDevStatePwrPolStoppingDisarmWakeCancelWake,0x559
WdfDevStatePwrPolStoppingDisarmWakeWakeCanceled,0x55A
WdfDevStatePwrPolStopping,0x55B
WdfDevStatePwrPolStoppingFailed,0x55C
WdfDevStatePwrPolStoppingSendStatus,0x55D
WdfDevStatePwrPolStoppingCancelTimer,0x55E
WdfDevStatePwrPolStoppingWaitForIdleTimeout,0x55F
WdfDevStatePwrPolStoppingCancelUsbSS,0x560
WdfDevStatePwrPolStoppingWaitForUsbSSCompletion,0x561
WdfDevStatePwrPolStoppingCancelWake,0x562
WdfDevStatePwrPolStopped,0x563
WdfDevStatePwrPolCancelUsbSS,0x564
WdfDevStatePwrPolStarted,0x565
WdfDevStatePwrPolStartedCancelTimer,0x566
WdfDevStatePwrPolStartedWaitForIdleTimeout,0x567
WdfDevStatePwrPolStartedWakeCapableCancelTimerForSleep,0x568
WdfDevStatePwrPolStartedWakeCapableWaitForIdleTimeout,0x569
WdfDevStatePwrPolStartedWakeCapableSleepingUsbSS,0x56A
WdfDevStatePwrPolStartedIdleCapableCancelTimerForSleep,0x56B
WdfDevStatePwrPolStartedIdleCapableWaitForIdleTimeout,0x56C
WdfDevStatePwrPolDeviceD0PowerRequestFailed,0x56D
WdfDevStatePwrPolDevicePowerRequestFailed,0x56E
WdfDevStatePwrPolGotoDx,0x56F
WdfDevStatePwrPolGotoDxInDx,0x570
WdfDevStatePwrPolDx,0x571
WdfDevStatePwrPolGotoD0,0x572
WdfDevStatePwrPolGotoD0InD0,0x573
WdfDevStatePwrPolFinal,0x574
WdfDevStatePwrPolSleepingPowerDownNotProcessed,0x575
WdfDevStatePwrPolTimerExpiredWakeCapablePowerDownNotProcessed,0x576
WdfDevStatePwrPolTimerExpiredNoWakePowerDownNotProcessed,0x577
WdfDevStatePwrPolNull,0x578
}
#enumv FxPowerPolicyEvent
{
PwrPolInvalid,0x0
PwrPolStart,0x1
PwrPolStop,0x2
PwrPolSx,0x4
PwrPolS0,0x8
PwrPolPowerDown,0x10
PwrPolPowerUp,0x20
PwrPolPowerDownIoStopped,0x40
PwrPolPowerUpHwStarted,0x80
PwrPolWakeArrived,0x100
PwrPolWakeSuccess,0x200
PwrPolWakeFailed,0x400
PwrPolIoPresent,0x800
PwrPolPowerTimeoutExpired,0x1000
PwrPolS0IdlePolicyChanged,0x2000
PwrPolSurpriseRemove,0x4000
PwrPolUsbSelectiveSuspendCallback,0x8000
PwrPolUsbSelectiveSuspendCompleted,0x10000
PwrPolPowerDownFailed,0x20000
PwrPolPowerUpFailed,0x40000
PwrPolPriorityEventsMask,0x607F0
PwrPolNull,0xFF
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
f9da4c2f-86b2-0ad3-e4b2-6d41353489a6     pnp // SRC=SelfManagedIoStateMachine.cpp MJ= MN=
#typev  SelfManagedIoStateMachine_cpp249 10     "%0!devobj 0x%10!p! entering self managed io state %11!s! from %12!s!"      //   GLOBALS=m_PkgPnp->GetDriverGlobals() LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGPNP FUNC=FxSelfManagedIoMachine::ProcessEvent
{
m_PkgPnp->GetDevice()->GetDeviceObject(), ItemPtr -- 10
newState, ItemEnum(FxSelfManagedIoStates) -- 11
m_CurrentState, ItemEnum(FxSelfManagedIoStates) -- 12
}
#enumv FxSelfManagedIoStates
{
FxSelfManagedIoInvalid,0x0
FxSelfManagedIoCreated,0x1
FxSelfManagedIoInit,0x2
FxSelfManagedIoInitFailed,0x3
FxSelfManagedIoStarted,0x4
FxSelfManagedIoSuspending,0x5
FxSelfManagedIoStopped,0x6
FxSelfManagedIoRestarting,0x7
FxSelfManagedIoFailed,0x8
FxSelfManagedIoFlushing,0x9
FxSelfManagedIoFlushed,0xA
FxSelfManagedIoCleanup,0xB
FxSelfManagedIoFinal,0xC
FxSelfManagedIoMax,0xD
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
fa7da6a9-9ef7-93ab-83b0-89329ade1434     core // SRC=tracing.cpp MJ= MN=
#typev  tracing_cpp352 10     "%0NULL Required Parameter Passed to a DDI
FxDriverGlobals 0x%10!p!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_FATAL FLAGS=TRACINGERROR FUNC=FxVerifierNullBugCheck
{
FxDriverGlobals, ItemPtr -- 10
}
#typev  tracing_cpp554 12     "%0FxIFR has been started with a size override:  size 0x%10!x! bytes, # Pages %11!d!.  An extended IFR size may not be written to a minidump!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_INFORMATION FLAGS=TRACINGDRIVER FUNC=FxIFRStart
{
size, ItemLong -- 10
size/PAGE_SIZE, ItemLong -- 11
}
#typev  tracing_cpp550 11     "%0FxIFR logging started"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_VERBOSE FLAGS=TRACINGDRIVER FUNC=FxIFRStart
{
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
fb3bcbf2-069d-b8e4-b116-8f622f438358     support // SRC=FxQueryInterfaceAPI.cpp MJ= MN=
#typev  FxQueryInterfaceAPI_cpp185 16     "%0WDFDEVICE %10!p!, interface allocation failed, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfDeviceAddQueryInterface
{
Device, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxQueryInterfaceAPI_cpp168 15     "%0WDFDEVICE %10!p!, object creation failed, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfDeviceAddQueryInterface
{
Device, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxQueryInterfaceAPI_cpp148 14     "%0WDFDEVICE %10!p!, Interface size %11!d! < sizeof(INTERFACE) (%12!d!), %13!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfDeviceAddQueryInterface
{
Device, ItemPtr -- 10
pInterface->Size, ItemLong -- 11
sizeof(INTERFACE), ItemLong -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxQueryInterfaceAPI_cpp132 13     "%0WDFDEVICE %10!p!, ImportInterface is TRUE and EvtDeviceProcessQueryInterfaceRequest is NULL, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfDeviceAddQueryInterface
{
Device, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxQueryInterfaceAPI_cpp114 12     "%0WDFDEVICE %10!p!,  SendQueryToParentStack is FALSE and InterfaceConfig->ImportInterface is FALSE, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfDeviceAddQueryInterface
{
Device, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxQueryInterfaceAPI_cpp91 11     "%0SendQueryToParentStack TRUE, but WDFDEVICE %10!p! not a PDO, %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfDeviceAddQueryInterface
{
Device, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxQueryInterfaceAPI_cpp76 10     "%0WDFDEVICE %10!p!, WDF_QUERY_INTERFACE_CONFIG Size %11!d!, expected %12!d!, %13!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGERROR FUNC=imp_WdfDeviceAddQueryInterface
{
Device, ItemPtr -- 10
InterfaceConfig->Size, ItemLong -- 11
sizeof(WDF_QUERY_INTERFACE_CONFIG), ItemLong -- 12
status, ItemNTSTATUS -- 13
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
fbcabe09-d1c7-7e1b-c57e-c04599140331     base // SRC=FxDmaTransactionAPI.cpp MJ= MN=
#typev  FxDmaTransactionAPI_cpp425 23     "%0WDFTANSACTION 0x%10!p! initialization failed: %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaTransactionInitialize
{
DmaTransaction, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxDmaTransactionAPI_cpp407 22     "%0VirtualAddress+Length (%10!p!+%11!I64d!) is out of bounds of MDL VA + MDL Byte count (max address is %12!p!). Possibly a chained MDL, %13!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaTransactionInitialize
{
VirtualAddress, ItemPtr -- 10
Length, ItemLongLong -- 11
&pVA[length], ItemPtr -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxDmaTransactionAPI_cpp373 21     "%0Initialization of WDFDMATRANSACTION 0x%10!p!,DmaDirection 0x%11!x! is an invalid value, %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaTransactionInitialize
{
DmaTransaction, ItemPtr -- 10
DmaDirection, ItemLong -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxDmaTransactionAPI_cpp364 20     "%0Can't initialize WDFDMATRANSACTION 0x%10!p! with zero length transfer"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaTransactionInitialize
{
DmaTransaction, ItemPtr -- 10
}
#typev  FxDmaTransactionAPI_cpp319 19     "%0WDFTANSACTION 0x%10!p! initialization failed: %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaTransactionInitializeUsingRequest
{
DmaTransaction, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxDmaTransactionAPI_cpp299 18     "%0WDFREQUEST %10!p! transfer length (%11!d!) is out of bounds of MDL Byte count (%12!d!), %13!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaTransactionInitializeUsingRequest
{
Request, ItemPtr -- 10
reqLength, ItemLong -- 11
length, ItemLong -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxDmaTransactionAPI_cpp280 17     "%0Zero length request, %10!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaTransactionInitializeUsingRequest
{
status, ItemNTSTATUS -- 10
}
#typev  FxDmaTransactionAPI_cpp271 16     "%0Couldn't retreive mdl from WDFREQUEST 0x%10!p! for WDFTRANSACTION 0x%11!p! %12!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaTransactionInitializeUsingRequest
{
Request, ItemPtr -- 10
DmaTransaction, ItemPtr -- 11
status, ItemNTSTATUS -- 12
}
#typev  FxDmaTransactionAPI_cpp145 11     "%0Dma direction %10!s! of WDFTRANSACTION 0x%11!p! doesn't match with the WDFREQUEST 0x%12!p! type %13!s! %14!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaTransactionInitializeUsingRequest
{
DmaDirection, ItemEnum(_WDF_DMA_DIRECTION) -- 10
DmaTransaction, ItemPtr -- 11
Request, ItemPtr -- 12
stack->MajorFunction, ItemEnum(_WDF_REQUEST_TYPE) -- 13
status, ItemNTSTATUS -- 14
}
#typev  FxDmaTransactionAPI_cpp166 12     "%0Dma direction %10!s! of WDFTRANSACTION 0x%11!p! doesn't match with the WDFREQUEST 0x%12!p! type %13!s! %14!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaTransactionInitializeUsingRequest
{
DmaDirection, ItemEnum(_WDF_DMA_DIRECTION) -- 10
DmaTransaction, ItemPtr -- 11
Request, ItemPtr -- 12
stack->MajorFunction, ItemEnum(_WDF_REQUEST_TYPE) -- 13
status, ItemNTSTATUS -- 14
}
#typev  FxDmaTransactionAPI_cpp211 13     "%0Dma direction %10!s! of WDFTRANSACTION 0x%11!p! doesn't match with WDFREQUEST 0x%12!p! ioctl type METHOD_IN_DIRECT %13!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaTransactionInitializeUsingRequest
{
DmaDirection, ItemEnum(_WDF_DMA_DIRECTION) -- 10
DmaTransaction, ItemPtr -- 11
Request, ItemPtr -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxDmaTransactionAPI_cpp235 14     "%0Dma direction %10!s! of WDFTRANSACTION 0x%11!p! doesn't match with WDFREQUEST 0x%12!p! ioctl type METHOD_OUT_DIRECT %13!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaTransactionInitializeUsingRequest
{
DmaDirection, ItemEnum(_WDF_DMA_DIRECTION) -- 10
DmaTransaction, ItemPtr -- 11
Request, ItemPtr -- 12
status, ItemNTSTATUS -- 13
}
#typev  FxDmaTransactionAPI_cpp254 15     "%0Invalid ioctl code in WDFREQUEST 0x%10!p! %11!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaTransactionInitializeUsingRequest
{
Request, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
#typev  FxDmaTransactionAPI_cpp112 10     "%0Initialization of WDFDMATRANSACTION 0x%10!p! using WDFREQUEST %11!p!, DmaDirection 0x%12!x! is an invalid value, %13!s!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDMA FUNC=imp_WdfDmaTransactionInitializeUsingRequest
{
DmaTransaction, ItemPtr -- 10
Request, ItemPtr -- 11
DmaDirection, ItemLong -- 12
status, ItemNTSTATUS -- 13
}
#enumv _WDF_DMA_DIRECTION
{
WdfDmaDirectionReadFromDevice,0x0
WdfDmaDirectionWriteToDevice,0x1
}
#enumv _WDF_REQUEST_TYPE
{
WdfRequestTypeCreate,0x0
WdfRequestTypeCreateNamedPipe,0x1
WdfRequestTypeClose,0x2
WdfRequestTypeRead,0x3
WdfRequestTypeWrite,0x4
WdfRequestTypeQueryInformation,0x5
WdfRequestTypeSetInformation,0x6
WdfRequestTypeQueryEA,0x7
WdfRequestTypeSetEA,0x8
WdfRequestTypeFlushBuffers,0x9
WdfRequestTypeQueryVolumeInformation,0xA
WdfRequestTypeSetVolumeInformation,0xB
WdfRequestTypeDirectoryControl,0xC
WdfRequestTypeFileSystemControl,0xD
WdfRequestTypeDeviceControl,0xE
WdfRequestTypeDeviceControlInternal,0xF
WdfRequestTypeShutdown,0x10
WdfRequestTypeLockControl,0x11
WdfRequestTypeCleanup,0x12
WdfRequestTypeCreateMailSlot,0x13
WdfRequestTypeQuerySecurity,0x14
WdfRequestTypeSetSecurity,0x15
WdfRequestTypePower,0x16
WdfRequestTypeSystemControl,0x17
WdfRequestTypeDeviceChange,0x18
WdfRequestTypeQueryQuota,0x19
WdfRequestTypeSetQuota,0x1A
WdfRequestTypePnp,0x1B
WdfRequestTypeOther,0x1C
WdfRequestTypeUsb,0x40
WdfRequestTypeNoFormat,0xFF
WdfRequestTypeMax,0x100
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
fe9144a4-a819-402b-15bc-bde929a9b398     core // SRC=FxDpc.cpp MJ= MN=
#typev  FxDpc_cpp64 10     "%0Destroy WDFDPC %10!p! destroyed without calling WdfObjectDelete, or by Framework processing DeviceRemove.  Possible reference count problem?"      //   GLOBALS=GetDriverGlobals() LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxDpc::~FxDpc
{
GetObjectHandleUnchecked(), ItemPtr -- 10
}
#typev  FxDpc_cpp200 11     "%0ParentObject %10!p! can not automatically synchronize callbacks with a DPC since it is configured for passive level callback constraints.  Disable AutomaticSynchronization. %11!s!"      //   GLOBALS=pFxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxDpc::Initialize
{
Attributes->ParentObject, ItemPtr -- 10
status, ItemNTSTATUS -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
ffc4de84-ed68-cb04-a746-7a6562cd2316     base // SRC=fxverifier.h MJ= MN=
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfInterruptDisable
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfInterruptEnable
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfFileObjectGetFileName
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfRegistryAssignString
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfRegistryAssignULong
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfRegistryAssignMemory
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfRegistryAssignValue
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfRegistryQueryULong
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfRegistryRemoveValue
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfRegistryRemoveKey
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfRegistryClose
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfRegistryAssignMultiString
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfRegistryAssignUnicodeString
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfRegistryQueryUnicodeString
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfRegistryQueryValue
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfRegistryQueryString
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfRegistryQueryMultiString
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfRegistryCreateKey
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfRegistryOpenKey
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfRegistryQueryMemory
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxDeviceDescriptionEntry::IsDeviceRemoved
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxDeviceDescriptionEntry::ProcessDeviceRemoved
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxChildList::NotifyDeviceSurpriseRemove
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxChildList::NotifyDeviceRemove
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxChildList::ProcessBusRelations
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfFdoQueryForInterface
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxUsbPipe::_SendTransfer
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxCommonBuffer::AllocateCommonBuffer
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfChildListCreate
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfIoTargetQueryTargetProperty
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfIoTargetQueryForInterface
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfIoTargetStop
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfIoTargetAllocAndQueryTargetProperty
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfIoTargetClose
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfIoTargetCloseForQueryRemove
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfIoTargetCreate
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfIoTargetSendInternalIoctlOthersSynchronously
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxIoTargetSendIoctl
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxIoTargetSendIo
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfIoTargetOpen
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDriverIsVersionAvailable
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDriverGetRegistryPath
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDriverRetrieveVersionString
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceMiniportCreate
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDriverOpenParametersRegistryKey
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDriverCreate
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfIoQueuePurgeSynchronously
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfIoQueueStopSynchronously
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfIoQueueDrainSynchronously
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxDevice::_OpenKey
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=FxDevice::DeleteObject
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfLookasideListCreate
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDpcCancel
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceSetDeviceInterfaceState
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceRetrieveDeviceInterfaceString
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceCreateDeviceInterface
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfPdoInitAssignRawDevice
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfPdoInitSetDefaultLocale
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfPdoInitSetEventCallbacks
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfFdoInitSetDefaultChildListConfig
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfFdoInitSetEventCallbacks
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfFdoInitQueryProperty
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfFdoInitSetFilter
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfPdoInitAddDeviceText
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfPdoInitAllocate
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceInitRegisterPowerPolicyStateChangeCallback
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceInitRegisterPowerStateChangeCallback
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceInitRegisterPnpStateChangeCallback
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfControlDeviceInitAllocate
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfPdoInitAddCompatibleID
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfPdoInitAddHardwareID
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfPdoInitAssignInstanceID
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfPdoInitAssignDeviceID
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceInitAssignSDDLString
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceInitAssignName
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfFdoInitAllocAndQueryProperty
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceAddQueryInterface
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfRequestRetrieveUnsafeUserOutputBuffer
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfRequestRetrieveUnsafeUserInputBuffer
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfRequestProbeAndLockUserBufferForWrite
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfRequestProbeAndLockUserBufferForRead
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfWmiInstanceFireEvent
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfUsbTargetDeviceRetrieveConfigDescriptor
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfUsbTargetDeviceGetDeviceDescriptor
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfUsbTargetDeviceCyclePortSynchronously
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfUsbTargetDeviceResetPortSynchronously
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfUsbTargetDeviceIsConnectedSynchronous
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfUsbTargetDeviceSendControlTransferSynchronously
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfUsbTargetDeviceSendUrbSynchronously
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfUsbTargetDeviceSelectConfig
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfUsbTargetDeviceAllocAndQueryString
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfUsbTargetDeviceQueryString
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfUsbTargetDeviceCreate
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfWorkItemFlush
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfWaitLockAcquire
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfUsbInterfaceSelectSetting
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDmaEnablerSetMaximumScatterGatherElements
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDmaEnablerCreate
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfStringGetUnicodeString
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfStringCreate
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceQueryProperty
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceStopIdle
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceCreateSymbolicLink
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceAssignMofResourceName
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceRetrieveDeviceName
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceAllocAndQueryProperty
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceEnqueueRequest
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfDeviceCreate
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfUsbTargetPipeSendUrbSynchronously
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfUsbTargetPipeResetSynchronously
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfUsbTargetPipeAbortSynchronously
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfCommonBufferCreateWithConfig
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfCommonBufferCreate
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfTimerStop
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
// PDB:  d:\wdf_kmdf\amd64fre.obj.amd64fre\drivers\wdf\kmdf\src\dynamic\version\version\objfre\amd64\Wdf01000.pdb
// PDB:  Last Updated :2006-4-20:8:41:24:617 (UTC) [tracepdb]
#typev  fxverifier_h85 10     "%0Called at wrong IRQL; at level %10!d!, should be at level %11!d!"      //   GLOBALS=FxDriverGlobals LEVEL=TRACE_LEVEL_ERROR FLAGS=TRACINGDEVICE FUNC=imp_WdfMemoryCreate
{
currentIrql, ItemLong -- 10
Irql, ItemLong -- 11
}
