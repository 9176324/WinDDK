<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 11">
<meta name=Originator content="Microsoft Word 11">
<link rel=File-List href="COM_VDD_files/filelist.xml">
<title>COM_VDD</title>
<!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:SpellingState>Clean</w:SpellingState>
  <w:GrammarState>Clean</w:GrammarState>
  <w:ValidateAgainstSchemas/>
  <w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid>
  <w:IgnoreMixedContent>false</w:IgnoreMixedContent>
  <w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:LatentStyles DefLockedState="false" LatentStyleCount="156">
 </w:LatentStyles>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Verdana;
	panose-1:2 11 6 4 3 5 4 4 2 4;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:536871559 0 0 0 415 0;}
@font-face
	{font-family:"MS Sans Serif";
	panose-1:0 0 0 0 0 0 0 0 0 0;
	mso-font-alt:"Times New Roman";
	mso-font-charset:0;
	mso-generic-font-family:roman;
	mso-font-format:other;
	mso-font-pitch:auto;
	mso-font-signature:0 0 0 0 0 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
h2
	{mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	margin-left:0in;
	mso-pagination:widow-orphan;
	mso-outline-level:2;
	font-size:18.0pt;
	font-family:"Times New Roman";
	color:black;
	font-weight:bold;}
h3
	{mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	margin-left:0in;
	mso-pagination:widow-orphan;
	mso-outline-level:3;
	font-size:13.5pt;
	font-family:"Times New Roman";
	color:black;
	font-weight:bold;}
a:link, span.MsoHyperlink
	{color:blue;
	text-decoration:underline;
	text-underline:single;}
a:visited, span.MsoHyperlinkFollowed
	{color:purple;
	text-decoration:underline;
	text-underline:single;}
p
	{mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	margin-left:0in;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
span.SpellE
	{mso-style-name:"";
	mso-spl-e:yes;}
span.GramE
	{mso-style-name:"";
	mso-gram-e:yes;}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:"";
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";
	mso-ansi-language:#0400;
	mso-fareast-language:#0400;
	mso-bidi-language:#0400;}
</style>
<![endif]--><!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="3074"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body bgcolor=white lang=EN-US link=blue vlink=purple style='tab-interval:.5in'
leftmargin=8>

<div class=Section1>

<h2><span style='font-family:Verdana'>COM_VDD <o:p></o:p></span></h2>

<h3><span style='font-family:Verdana'>SUMMARY<o:p></o:p></span></h3>

<p><span class=GramE><span style='font-size:10.0pt;font-family:Verdana'>This
VDD sample implements serial port support for the Virtual DOS Machine (VDM)
under Microsoft® Windows&nbsp;NT®/Windows®&nbsp;2003.</span></span><span
style='font-size:10.0pt;font-family:Verdana'> <o:p></o:p></span></p>

<p><span style='font-size:10.0pt;font-family:Verdana'>The Windows NT/Windows
2003 VDM has a built-in Virtual Device Driver for serial communications, so
this sample driver is completely redundant. It illustrates how serial support
might have been implemented using Win32 and the Windows NT DDK. This sample is
based in part on the built-in serial driver, but it has been significantly
modified and works differently. You should not rely on any feature of this
driver when writing serial I/O code that might be used under Windows NT. <o:p></o:p></span></p>

<h3><span style='font-family:Verdana'>BUILDING THE SAMPLE<o:p></o:p></span></h3>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:Verdana'>To
install this VDD, use <span class=SpellE>regedit</span> to modify <b>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\VirtualDeviceDrivers\VDD</b>
to include <span class=SpellE>ddkroot</span>\lib\*\com_vdd.dll from your DDK
tree. Shut down and restart Windows 2003 to let this change take effect. <o:p></o:p></span></p>

<p><b><span style='font-size:10.0pt;font-family:Verdana'>Note:</span></b><span
style='font-size:10.0pt;font-family:Verdana'> Once you install the DLL as a
VDD, you can only modify (rebuild) it when no <span class=SpellE>VDMs</span>
are running. Use <span class=SpellE>regedit</span> to uninstall the VDD from
HKEY_LOCAL_MACHINE\...\VDD if you want to use the built-in serial support. <o:p></o:p></span></p>

<p><span style='font-size:10.0pt;font-family:Verdana'>An optional feature of a VDD
is the direct dispatch function. Your application can call this function
directly instead of through the I/O instruction trap. A sample direct dispatch
function is included (<span class=SpellE>VDDDispatch</span>), but it has not
been completed or tested at this time. You may use it as a guide, but be aware
of its status. Also, there is no equivalent to this function in the built-in
serial support. <o:p></o:p></span></p>

<h3><span style='font-family:Verdana'>CODE TOUR<o:p></o:p></span></h3>

<p><span style='font-size:10.0pt;font-family:Verdana'>The code is split into
three modules. The first module (<span class=SpellE>Com_vdd.c</span>) is the
VDD interface. This holds the code to install the VDM hooks and initialize the
virtual <span class=SpellE>UARTs</span>, and to close and release them. The
second module (<span class=SpellE>Pc_com.c</span>) implements the DOS interface
to the virtual <span class=SpellE>UARTs</span>. It handles IN and OUT
instructions to the UART ports and generates simulated interrupts as appropriate.
The final module (<span class=SpellE>Nt_com.c</span>) implements the interface
to Win32. <o:p></o:p></span></p>

<p><span style='font-size:10.0pt;font-family:Verdana'>Unlike the built-in
serial support, there is no provision for this VDD to ever release the serial
port once it is used. As long as the VDM remains active, you will be able to
access the serial port from it, but otherwise the serial port is locked out.
You should consider whether this is the way you want your VDD to act, and how
you might deal with this problem. One option would be to dynamically load and
unload your VDD rather than installing it permanently. <o:p></o:p></span></p>

<p><span style='font-size:10.0pt;font-family:Verdana'>This VDD is
multithreaded. Besides the thread that executes the DOS code, there is a thread
that monitors the serial port status and an optional thread for transmit
buffering. Multithreading is one way you can get better performance and reduce
the drag on other apps. <o:p></o:p></span></p>

<p><span style='font-size:10.0pt;font-family:Verdana'>Transmit buffering is an
example of how this works. Through testing, it was found that byte transmission
offered the most room for improvement. Each transmitted byte was being output
using a <span class=SpellE>WriteFile</span> call. The overhead can be reduced
by collecting several bytes into a buffer before doing the <span class=SpellE>WriteFile</span>.
A separate transmit thread helps this work by delaying the actual write for a
few milliseconds while trying to fill the buffer.<o:p></o:p></span></p>

<p><span style='font-size:10.0pt;font-family:Verdana'>Transmit buffering also
shows an example of how queues can be implemented using Win32. Queues are not
supported directly by Win32, but they are easy to implement using a mutual
exclusion object and a semaphore object. The <span class=SpellE>TX_enqueue</span>
and <span class=SpellE>TX_dequeue</span> functions and <span class=SpellE>TX_queue</span>
structure show one way to do this. <o:p></o:p></span></p>

<p><span style='font-size:10.0pt;font-family:Verdana'>Overlapped I/O is another
point that this VDD illustrates well. Under Win32 you must specify overlapped
I/O or any file operation will block all others until it completes. For serial
communications this includes <span class=SpellE>WaitCommEvent</span> as well as
<span class=SpellE>ReadFile</span> and <span class=SpellE>WriteFile</span>. In
the VDD this would have prevented any reads or writes while the status
monitoring thread was waiting for a <span class=SpellE>comm</span> event. See
the <span class=SpellE>wait_comm</span>, <span class=SpellE>read_comm</span>
and <span class=SpellE>write_comm</span> routines for details. <o:p></o:p></span></p>

<p><span style='font-size:10.0pt;font-family:Verdana'>A CRITICAL_SECTION object
is used to control access to the UART state. This allows the status monitoring
thread to update the virtual UART state asynchronously. A <span class=SpellE>Mutex</span>
object could have been used as with the transmit buffers, but a critical
section is more appropriate in this context. <o:p></o:p></span></p>

<p align=center style='text-align:center'><a
href="file:///C:\Documents%20and%20Settings\Ramk\Local%20Settings\Temp\com_vdd5.htm#top"><span
style='font-size:10.0pt;font-family:Verdana'>Top of page</span></a><span
style='font-size:10.0pt;font-family:Verdana'> <o:p></o:p></span></p>

<table class=MsoNormalTable border=0 cellspacing=0 cellpadding=0 width=624
 style='width:6.5in;mso-cellspacing:0in;mso-padding-alt:0in 5.4pt 0in 5.4pt'>
 <tr style='mso-yfti-irow:0;mso-yfti-firstrow:yes;mso-yfti-lastrow:yes;
  height:1.5pt'>
  <td style='background:aqua;padding:.75pt .75pt .75pt .75pt;height:1.5pt'>
  <p class=MsoNormal><span style='font-size:2.0pt;mso-bidi-font-size:12.0pt'><o:p>&nbsp;</o:p></span></p>
  </td>
 </tr>
</table>

<p><span style='font-size:7.5pt;font-family:"MS Sans Serif"'>© 2004 Microsoft
Corporation</span><span style='font-size:10.0pt;font-family:Verdana'><o:p></o:p></span></p>

</div>

</body>

</html>
